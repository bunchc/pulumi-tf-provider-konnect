// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    /// <summary>
    /// CloudGatewayCustomDomain Resource
    /// </summary>
    [KonnectResourceType("konnect:index/cloudGatewayCustomDomain:CloudGatewayCustomDomain")]
    public partial class CloudGatewayCustomDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Certificate ID for the certificate representing this domain and stored on data-planes for this
        /// control-plane. Can be retrieved via the control-planes API for this custom domain's control-plane.
        /// </summary>
        [Output("certificateId")]
        public Output<string> CertificateId { get; private set; } = null!;

        /// <summary>
        /// Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
        /// </summary>
        [Output("controlPlaneGeo")]
        public Output<string> ControlPlaneGeo { get; private set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Output("controlPlaneId")]
        public Output<string> ControlPlaneId { get; private set; } = null!;

        /// <summary>
        /// An RFC-3339 timestamp representation of custom domain creation date.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Domain name of the custom domain. Requires replacement if changed.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Monotonically-increasing version count of the custom domain, to indicate the order of updates to the custom
        /// domain.
        /// </summary>
        [Output("entityVersion")]
        public Output<int> EntityVersion { get; private set; } = null!;

        /// <summary>
        /// Server Name Indication ID for this domain and stored on data-planes for this control-plane. Can be retrieved
        /// via the control-planes API for this custom domain's control-plane.
        /// </summary>
        [Output("sniId")]
        public Output<string> SniId { get; private set; } = null!;

        /// <summary>
        /// State of the custom domain. must be one of ["created", "initializing", "ready", "terminating", "terminated", "error"]
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Metadata describing the backing state of the custom domain and why it may be in an erroneous state.
        /// </summary>
        [Output("stateMetadata")]
        public Output<Outputs.CloudGatewayCustomDomainStateMetadata> StateMetadata { get; private set; } = null!;

        /// <summary>
        /// An RFC-3339 timestamp representation of custom domain update date.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a CloudGatewayCustomDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudGatewayCustomDomain(string name, CloudGatewayCustomDomainArgs args, CustomResourceOptions? options = null)
            : base("konnect:index/cloudGatewayCustomDomain:CloudGatewayCustomDomain", name, args ?? new CloudGatewayCustomDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudGatewayCustomDomain(string name, Input<string> id, CloudGatewayCustomDomainState? state = null, CustomResourceOptions? options = null)
            : base("konnect:index/cloudGatewayCustomDomain:CloudGatewayCustomDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudGatewayCustomDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudGatewayCustomDomain Get(string name, Input<string> id, CloudGatewayCustomDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudGatewayCustomDomain(name, id, state, options);
        }
    }

    public sealed class CloudGatewayCustomDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
        /// </summary>
        [Input("controlPlaneGeo", required: true)]
        public Input<string> ControlPlaneGeo { get; set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("controlPlaneId", required: true)]
        public Input<string> ControlPlaneId { get; set; } = null!;

        /// <summary>
        /// Domain name of the custom domain. Requires replacement if changed.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public CloudGatewayCustomDomainArgs()
        {
        }
        public static new CloudGatewayCustomDomainArgs Empty => new CloudGatewayCustomDomainArgs();
    }

    public sealed class CloudGatewayCustomDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Certificate ID for the certificate representing this domain and stored on data-planes for this
        /// control-plane. Can be retrieved via the control-planes API for this custom domain's control-plane.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
        /// </summary>
        [Input("controlPlaneGeo")]
        public Input<string>? ControlPlaneGeo { get; set; }

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("controlPlaneId")]
        public Input<string>? ControlPlaneId { get; set; }

        /// <summary>
        /// An RFC-3339 timestamp representation of custom domain creation date.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Domain name of the custom domain. Requires replacement if changed.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Monotonically-increasing version count of the custom domain, to indicate the order of updates to the custom
        /// domain.
        /// </summary>
        [Input("entityVersion")]
        public Input<int>? EntityVersion { get; set; }

        /// <summary>
        /// Server Name Indication ID for this domain and stored on data-planes for this control-plane. Can be retrieved
        /// via the control-planes API for this custom domain's control-plane.
        /// </summary>
        [Input("sniId")]
        public Input<string>? SniId { get; set; }

        /// <summary>
        /// State of the custom domain. must be one of ["created", "initializing", "ready", "terminating", "terminated", "error"]
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Metadata describing the backing state of the custom domain and why it may be in an erroneous state.
        /// </summary>
        [Input("stateMetadata")]
        public Input<Inputs.CloudGatewayCustomDomainStateMetadataGetArgs>? StateMetadata { get; set; }

        /// <summary>
        /// An RFC-3339 timestamp representation of custom domain update date.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public CloudGatewayCustomDomainState()
        {
        }
        public static new CloudGatewayCustomDomainState Empty => new CloudGatewayCustomDomainState();
    }
}
