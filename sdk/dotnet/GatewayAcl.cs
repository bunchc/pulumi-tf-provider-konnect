// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    /// <summary>
    /// GatewayACL Resource
    /// </summary>
    [KonnectResourceType("konnect:index/gatewayAcl:GatewayAcl")]
    public partial class GatewayAcl : global::Pulumi.CustomResource
    {
        [Output("consumer")]
        public Output<Outputs.GatewayAclConsumer> Consumer { get; private set; } = null!;

        /// <summary>
        /// Consumer ID for nested entities. Requires replacement if changed.
        /// </summary>
        [Output("consumerId")]
        public Output<string> ConsumerId { get; private set; } = null!;

        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
        /// </summary>
        [Output("controlPlaneId")]
        public Output<string> ControlPlaneId { get; private set; } = null!;

        /// <summary>
        /// Unix epoch when the resource was created.
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayAcl(string name, GatewayAclArgs args, CustomResourceOptions? options = null)
            : base("konnect:index/gatewayAcl:GatewayAcl", name, args ?? new GatewayAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayAcl(string name, Input<string> id, GatewayAclState? state = null, CustomResourceOptions? options = null)
            : base("konnect:index/gatewayAcl:GatewayAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayAcl Get(string name, Input<string> id, GatewayAclState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayAcl(name, id, state, options);
        }
    }

    public sealed class GatewayAclArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Consumer ID for nested entities. Requires replacement if changed.
        /// </summary>
        [Input("consumerId", required: true)]
        public Input<string> ConsumerId { get; set; } = null!;

        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
        /// </summary>
        [Input("controlPlaneId", required: true)]
        public Input<string> ControlPlaneId { get; set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GatewayAclArgs()
        {
        }
        public static new GatewayAclArgs Empty => new GatewayAclArgs();
    }

    public sealed class GatewayAclState : global::Pulumi.ResourceArgs
    {
        [Input("consumer")]
        public Input<Inputs.GatewayAclConsumerGetArgs>? Consumer { get; set; }

        /// <summary>
        /// Consumer ID for nested entities. Requires replacement if changed.
        /// </summary>
        [Input("consumerId")]
        public Input<string>? ConsumerId { get; set; }

        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
        /// </summary>
        [Input("controlPlaneId")]
        public Input<string>? ControlPlaneId { get; set; }

        /// <summary>
        /// Unix epoch when the resource was created.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GatewayAclState()
        {
        }
        public static new GatewayAclState Empty => new GatewayAclState();
    }
}
