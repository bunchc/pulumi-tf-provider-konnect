// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    public static class GetGatewayCertificate
    {
        public static Task<GetGatewayCertificateResult> InvokeAsync(GetGatewayCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayCertificateResult>("konnect:index/getGatewayCertificate:getGatewayCertificate", args ?? new GetGatewayCertificateArgs(), options.WithDefaults());

        public static Output<GetGatewayCertificateResult> Invoke(GetGatewayCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayCertificateResult>("konnect:index/getGatewayCertificate:getGatewayCertificate", args ?? new GetGatewayCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlPlaneId", required: true)]
        public string ControlPlaneId { get; set; } = null!;

        public GetGatewayCertificateArgs()
        {
        }
        public static new GetGatewayCertificateArgs Empty => new GetGatewayCertificateArgs();
    }

    public sealed class GetGatewayCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlPlaneId", required: true)]
        public Input<string> ControlPlaneId { get; set; } = null!;

        public GetGatewayCertificateInvokeArgs()
        {
        }
        public static new GetGatewayCertificateInvokeArgs Empty => new GetGatewayCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayCertificateResult
    {
        public readonly string Cert;
        public readonly string CertAlt;
        public readonly string ControlPlaneId;
        public readonly int CreatedAt;
        public readonly string Id;
        public readonly string Key;
        public readonly string KeyAlt;
        public readonly ImmutableArray<string> Tags;
        public readonly int UpdatedAt;

        [OutputConstructor]
        private GetGatewayCertificateResult(
            string cert,

            string certAlt,

            string controlPlaneId,

            int createdAt,

            string id,

            string key,

            string keyAlt,

            ImmutableArray<string> tags,

            int updatedAt)
        {
            Cert = cert;
            CertAlt = certAlt;
            ControlPlaneId = controlPlaneId;
            CreatedAt = createdAt;
            Id = id;
            Key = key;
            KeyAlt = keyAlt;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
