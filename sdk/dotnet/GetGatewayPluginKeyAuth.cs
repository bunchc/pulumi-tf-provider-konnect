// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    public static class GetGatewayPluginKeyAuth
    {
        public static Task<GetGatewayPluginKeyAuthResult> InvokeAsync(GetGatewayPluginKeyAuthArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayPluginKeyAuthResult>("konnect:index/getGatewayPluginKeyAuth:getGatewayPluginKeyAuth", args ?? new GetGatewayPluginKeyAuthArgs(), options.WithDefaults());

        public static Output<GetGatewayPluginKeyAuthResult> Invoke(GetGatewayPluginKeyAuthInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayPluginKeyAuthResult>("konnect:index/getGatewayPluginKeyAuth:getGatewayPluginKeyAuth", args ?? new GetGatewayPluginKeyAuthInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayPluginKeyAuthArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlPlaneId", required: true)]
        public string ControlPlaneId { get; set; } = null!;

        public GetGatewayPluginKeyAuthArgs()
        {
        }
        public static new GetGatewayPluginKeyAuthArgs Empty => new GetGatewayPluginKeyAuthArgs();
    }

    public sealed class GetGatewayPluginKeyAuthInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("controlPlaneId", required: true)]
        public Input<string> ControlPlaneId { get; set; } = null!;

        public GetGatewayPluginKeyAuthInvokeArgs()
        {
        }
        public static new GetGatewayPluginKeyAuthInvokeArgs Empty => new GetGatewayPluginKeyAuthInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayPluginKeyAuthResult
    {
        public readonly Outputs.GetGatewayPluginKeyAuthConfigResult Config;
        public readonly Outputs.GetGatewayPluginKeyAuthConsumerResult Consumer;
        public readonly Outputs.GetGatewayPluginKeyAuthConsumerGroupResult ConsumerGroup;
        public readonly string ControlPlaneId;
        public readonly int CreatedAt;
        public readonly bool Enabled;
        public readonly string Id;
        public readonly string InstanceName;
        public readonly ImmutableArray<string> Protocols;
        public readonly Outputs.GetGatewayPluginKeyAuthRouteResult Route;
        public readonly Outputs.GetGatewayPluginKeyAuthServiceResult Service;
        public readonly ImmutableArray<string> Tags;
        public readonly int UpdatedAt;

        [OutputConstructor]
        private GetGatewayPluginKeyAuthResult(
            Outputs.GetGatewayPluginKeyAuthConfigResult config,

            Outputs.GetGatewayPluginKeyAuthConsumerResult consumer,

            Outputs.GetGatewayPluginKeyAuthConsumerGroupResult consumerGroup,

            string controlPlaneId,

            int createdAt,

            bool enabled,

            string id,

            string instanceName,

            ImmutableArray<string> protocols,

            Outputs.GetGatewayPluginKeyAuthRouteResult route,

            Outputs.GetGatewayPluginKeyAuthServiceResult service,

            ImmutableArray<string> tags,

            int updatedAt)
        {
            Config = config;
            Consumer = consumer;
            ConsumerGroup = consumerGroup;
            ControlPlaneId = controlPlaneId;
            CreatedAt = createdAt;
            Enabled = enabled;
            Id = id;
            InstanceName = instanceName;
            Protocols = protocols;
            Route = route;
            Service = service;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
