// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    /// <summary>
    /// GatewayCustomPluginSchema Resource
    /// </summary>
    [KonnectResourceType("konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema")]
    public partial class GatewayCustomPluginSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager
        /// </summary>
        [Output("controlPlaneId")]
        public Output<string> ControlPlaneId { get; private set; } = null!;

        /// <summary>
        /// An ISO-8604 timestamp representation of custom plugin schema creation date.
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The custom plugin schema; `jq -Rs '.' schema.lua`.
        /// </summary>
        [Output("luaSchema")]
        public Output<string> LuaSchema { get; private set; } = null!;

        /// <summary>
        /// The custom plugin name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An ISO-8604 timestamp representation of custom plugin schema update date.
        /// </summary>
        [Output("updatedAt")]
        public Output<int> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayCustomPluginSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayCustomPluginSchema(string name, GatewayCustomPluginSchemaArgs args, CustomResourceOptions? options = null)
            : base("konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema", name, args ?? new GatewayCustomPluginSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayCustomPluginSchema(string name, Input<string> id, GatewayCustomPluginSchemaState? state = null, CustomResourceOptions? options = null)
            : base("konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayCustomPluginSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayCustomPluginSchema Get(string name, Input<string> id, GatewayCustomPluginSchemaState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayCustomPluginSchema(name, id, state, options);
        }
    }

    public sealed class GatewayCustomPluginSchemaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager
        /// </summary>
        [Input("controlPlaneId", required: true)]
        public Input<string> ControlPlaneId { get; set; } = null!;

        /// <summary>
        /// The custom plugin schema; `jq -Rs '.' schema.lua`.
        /// </summary>
        [Input("luaSchema", required: true)]
        public Input<string> LuaSchema { get; set; } = null!;

        public GatewayCustomPluginSchemaArgs()
        {
        }
        public static new GatewayCustomPluginSchemaArgs Empty => new GatewayCustomPluginSchemaArgs();
    }

    public sealed class GatewayCustomPluginSchemaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of your control plane. This variable is available in the Konnect manager
        /// </summary>
        [Input("controlPlaneId")]
        public Input<string>? ControlPlaneId { get; set; }

        /// <summary>
        /// An ISO-8604 timestamp representation of custom plugin schema creation date.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// The custom plugin schema; `jq -Rs '.' schema.lua`.
        /// </summary>
        [Input("luaSchema")]
        public Input<string>? LuaSchema { get; set; }

        /// <summary>
        /// The custom plugin name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An ISO-8604 timestamp representation of custom plugin schema update date.
        /// </summary>
        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        public GatewayCustomPluginSchemaState()
        {
        }
        public static new GatewayCustomPluginSchemaState Empty => new GatewayCustomPluginSchemaState();
    }
}
