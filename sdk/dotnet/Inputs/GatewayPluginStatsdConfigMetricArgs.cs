// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect.Inputs
{

    public sealed class GatewayPluginStatsdConfigMetricArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authenticated user detail. must be one of ["consumer*id", "custom*id", "username"]
        /// </summary>
        [Input("consumerIdentifier")]
        public Input<string>? ConsumerIdentifier { get; set; }

        /// <summary>
        /// StatsD metricâ€™s name. Not Null; must be one of ["kong*latency", "latency", "request*count", "request*per*user", "request*size", "response*size", "status*count", "status*count*per*user", "unique*users", "upstream*latency", "status*count*per*workspace", "status*count*per*user*per*route", "shdict*usage", "cache*datastore*hits*total", "cache*datastore*misses_total"]
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Sampling rate
        /// </summary>
        [Input("sampleRate")]
        public Input<double>? SampleRate { get; set; }

        /// <summary>
        /// Service detail. must be one of ["service*id", "service*name", "service*host", "service*name*or*host"]
        /// </summary>
        [Input("serviceIdentifier")]
        public Input<string>? ServiceIdentifier { get; set; }

        /// <summary>
        /// Determines what sort of event a metric represents. Not Null; must be one of ["counter", "gauge", "histogram", "meter", "set", "timer"]
        /// </summary>
        [Input("statType")]
        public Input<string>? StatType { get; set; }

        /// <summary>
        /// Workspace detail. must be one of ["workspace*id", "workspace*name"]
        /// </summary>
        [Input("workspaceIdentifier")]
        public Input<string>? WorkspaceIdentifier { get; set; }

        public GatewayPluginStatsdConfigMetricArgs()
        {
        }
        public static new GatewayPluginStatsdConfigMetricArgs Empty => new GatewayPluginStatsdConfigMetricArgs();
    }
}
