// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect.Inputs
{

    public sealed class GatewayPluginPrometheusConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value that determines if bandwidth metrics should be collected. If enabled, `bandwidth_bytes` and `stream_sessions_total` metrics will be exported.
        /// </summary>
        [Input("bandwidthMetrics")]
        public Input<bool>? BandwidthMetrics { get; set; }

        /// <summary>
        /// A boolean value that determines if latency metrics should be collected. If enabled, `kong_latency_ms`, `upstream_latency_ms` and `request_latency_ms` metrics will be exported.
        /// </summary>
        [Input("latencyMetrics")]
        public Input<bool>? LatencyMetrics { get; set; }

        /// <summary>
        /// A boolean value that determines if per-consumer metrics should be collected. If enabled, the `kong_http_requests_total` and `kong_bandwidth_bytes` metrics fill in the consumer label when available.
        /// </summary>
        [Input("perConsumer")]
        public Input<bool>? PerConsumer { get; set; }

        /// <summary>
        /// A boolean value that determines if status code metrics should be collected. If enabled, `http_requests_total`, `stream_sessions_total` metrics will be exported.
        /// </summary>
        [Input("statusCodeMetrics")]
        public Input<bool>? StatusCodeMetrics { get; set; }

        /// <summary>
        /// A boolean value that determines if upstream metrics should be collected. If enabled, `upstream_target_health` metric will be exported.
        /// </summary>
        [Input("upstreamHealthMetrics")]
        public Input<bool>? UpstreamHealthMetrics { get; set; }

        public GatewayPluginPrometheusConfigGetArgs()
        {
        }
        public static new GatewayPluginPrometheusConfigGetArgs Empty => new GatewayPluginPrometheusConfigGetArgs();
    }
}
