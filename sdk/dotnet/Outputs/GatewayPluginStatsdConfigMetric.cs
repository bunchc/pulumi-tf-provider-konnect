// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect.Outputs
{

    [OutputType]
    public sealed class GatewayPluginStatsdConfigMetric
    {
        /// <summary>
        /// Authenticated user detail. must be one of ["consumer*id", "custom*id", "username"]
        /// </summary>
        public readonly string? ConsumerIdentifier;
        /// <summary>
        /// StatsD metricâ€™s name. Not Null; must be one of ["kong*latency", "latency", "request*count", "request*per*user", "request*size", "response*size", "status*count", "status*count*per*user", "unique*users", "upstream*latency", "status*count*per*workspace", "status*count*per*user*per*route", "shdict*usage", "cache*datastore*hits*total", "cache*datastore*misses_total"]
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Sampling rate
        /// </summary>
        public readonly double? SampleRate;
        /// <summary>
        /// Service detail. must be one of ["service*id", "service*name", "service*host", "service*name*or*host"]
        /// </summary>
        public readonly string? ServiceIdentifier;
        /// <summary>
        /// Determines what sort of event a metric represents. Not Null; must be one of ["counter", "gauge", "histogram", "meter", "set", "timer"]
        /// </summary>
        public readonly string? StatType;
        /// <summary>
        /// Workspace detail. must be one of ["workspace*id", "workspace*name"]
        /// </summary>
        public readonly string? WorkspaceIdentifier;

        [OutputConstructor]
        private GatewayPluginStatsdConfigMetric(
            string? consumerIdentifier,

            string? name,

            double? sampleRate,

            string? serviceIdentifier,

            string? statType,

            string? workspaceIdentifier)
        {
            ConsumerIdentifier = consumerIdentifier;
            Name = name;
            SampleRate = sampleRate;
            ServiceIdentifier = serviceIdentifier;
            StatType = statType;
            WorkspaceIdentifier = workspaceIdentifier;
        }
    }
}
