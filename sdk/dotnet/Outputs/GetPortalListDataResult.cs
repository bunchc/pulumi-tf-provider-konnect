// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect.Outputs
{

    [OutputType]
    public sealed class GetPortalListDataResult
    {
        /// <summary>
        /// Number of applications created in the portal.
        /// </summary>
        public readonly double ApplicationCount;
        /// <summary>
        /// Whether the requests from applications to register for products will be automatically approved, or if they will be set to pending until approved by an admin.
        /// </summary>
        public readonly bool AutoApproveApplications;
        /// <summary>
        /// Whether the developer account registrations will be automatically approved, or if they will be set to pending until approved by an admin.
        /// </summary>
        public readonly bool AutoApproveDevelopers;
        /// <summary>
        /// An ISO-8601 timestamp representation of entity creation date.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The custom domain to access a self-hosted customized developer portal client. If this is set, the Konnect-hosted portal client will no longer be available. `custom_domain` must be also set for this value to be set. See https://github.com/Kong/konnect-portal for information on how to get started deploying and customizing your own Konnect portal.
        /// </summary>
        public readonly string CustomClientDomain;
        /// <summary>
        /// The custom domain to access the developer portal. A CNAME for the portal's default domain must be able to be set for the custom domain for it to be valid. After setting a valid CNAME, an SSL/TLS certificate will be automatically manged for the custom domain, and traffic will be able to use the custom domain to route to the portal's web client and API.
        /// </summary>
        public readonly string CustomDomain;
        /// <summary>
        /// Default strategy ID applied on applications for the portal
        /// </summary>
        public readonly string DefaultApplicationAuthStrategyId;
        /// <summary>
        /// The domain assigned to the portal by Konnect. This is the default place to access the portal and its API if not using a `custom_domain``.
        /// </summary>
        public readonly string DefaultDomain;
        /// <summary>
        /// The description of the portal.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Number of developers using the portal.
        /// </summary>
        public readonly double DeveloperCount;
        /// <summary>
        /// The display name of the portal. This value will be the portal's `name` in Portal API.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Contains a unique identifier used for this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether the portal catalog can be accessed publicly without any developer authentication. Developer accounts and applications cannot be created if the portal is public.
        /// </summary>
        public readonly bool IsPublic;
        /// <summary>
        /// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types. 
        /// 
        /// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The name of the portal, used to distinguish it from other portals. Name must be unique.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Number of api products published to the portal
        /// </summary>
        public readonly double PublishedProductCount;
        /// <summary>
        /// Whether the portal resources are protected by Role Based Access Control (RBAC). If enabled, developers view or register for products until unless assigned to teams with access to view and consume specific products.
        /// </summary>
        public readonly bool RbacEnabled;
        /// <summary>
        /// An ISO-8601 timestamp representation of entity update date.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetPortalListDataResult(
            double applicationCount,

            bool autoApproveApplications,

            bool autoApproveDevelopers,

            string createdAt,

            string customClientDomain,

            string customDomain,

            string defaultApplicationAuthStrategyId,

            string defaultDomain,

            string description,

            double developerCount,

            string displayName,

            string id,

            bool isPublic,

            ImmutableDictionary<string, string> labels,

            string name,

            double publishedProductCount,

            bool rbacEnabled,

            string updatedAt)
        {
            ApplicationCount = applicationCount;
            AutoApproveApplications = autoApproveApplications;
            AutoApproveDevelopers = autoApproveDevelopers;
            CreatedAt = createdAt;
            CustomClientDomain = customClientDomain;
            CustomDomain = customDomain;
            DefaultApplicationAuthStrategyId = defaultApplicationAuthStrategyId;
            DefaultDomain = defaultDomain;
            Description = description;
            DeveloperCount = developerCount;
            DisplayName = displayName;
            Id = id;
            IsPublic = isPublic;
            Labels = labels;
            Name = name;
            PublishedProductCount = publishedProductCount;
            RbacEnabled = rbacEnabled;
            UpdatedAt = updatedAt;
        }
    }
}
