// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    /// <summary>
    /// ServerlessCloudGateway Resource
    /// </summary>
    [KonnectResourceType("konnect:index/serverlessCloudGateway:ServerlessCloudGateway")]
    public partial class ServerlessCloudGateway : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The cluster certificate (public key). Requires replacement if changed.
        /// </summary>
        [Output("clusterCert")]
        public Output<string> ClusterCert { get; private set; } = null!;

        /// <summary>
        /// The cluster certificate key (private key). Requires replacement if changed.
        /// </summary>
        [Output("clusterCertKey")]
        public Output<string> ClusterCertKey { get; private set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Output("controlPlane")]
        public Output<Outputs.ServerlessCloudGatewayControlPlane> ControlPlane { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Endpoint for the serverless cloud gateway.
        /// </summary>
        [Output("gatewayEndpoint")]
        public Output<string> GatewayEndpoint { get; private set; } = null!;

        /// <summary>
        /// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a ServerlessCloudGateway resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerlessCloudGateway(string name, ServerlessCloudGatewayArgs args, CustomResourceOptions? options = null)
            : base("konnect:index/serverlessCloudGateway:ServerlessCloudGateway", name, args ?? new ServerlessCloudGatewayArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerlessCloudGateway(string name, Input<string> id, ServerlessCloudGatewayState? state = null, CustomResourceOptions? options = null)
            : base("konnect:index/serverlessCloudGateway:ServerlessCloudGateway", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerlessCloudGateway resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerlessCloudGateway Get(string name, Input<string> id, ServerlessCloudGatewayState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerlessCloudGateway(name, id, state, options);
        }
    }

    public sealed class ServerlessCloudGatewayArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cluster certificate (public key). Requires replacement if changed.
        /// </summary>
        [Input("clusterCert", required: true)]
        public Input<string> ClusterCert { get; set; } = null!;

        /// <summary>
        /// The cluster certificate key (private key). Requires replacement if changed.
        /// </summary>
        [Input("clusterCertKey", required: true)]
        public Input<string> ClusterCertKey { get; set; } = null!;

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("controlPlane", required: true)]
        public Input<Inputs.ServerlessCloudGatewayControlPlaneArgs> ControlPlane { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        public ServerlessCloudGatewayArgs()
        {
        }
        public static new ServerlessCloudGatewayArgs Empty => new ServerlessCloudGatewayArgs();
    }

    public sealed class ServerlessCloudGatewayState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cluster certificate (public key). Requires replacement if changed.
        /// </summary>
        [Input("clusterCert")]
        public Input<string>? ClusterCert { get; set; }

        /// <summary>
        /// The cluster certificate key (private key). Requires replacement if changed.
        /// </summary>
        [Input("clusterCertKey")]
        public Input<string>? ClusterCertKey { get; set; }

        /// <summary>
        /// Requires replacement if changed.
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.ServerlessCloudGatewayControlPlaneGetArgs>? ControlPlane { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Endpoint for the serverless cloud gateway.
        /// </summary>
        [Input("gatewayEndpoint")]
        public Input<string>? GatewayEndpoint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public ServerlessCloudGatewayState()
        {
        }
        public static new ServerlessCloudGatewayState Empty => new ServerlessCloudGatewayState();
    }
}
