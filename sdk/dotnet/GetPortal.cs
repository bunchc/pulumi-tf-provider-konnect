// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    public static class GetPortal
    {
        public static Task<GetPortalResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPortalResult>("konnect:index/getPortal:getPortal", InvokeArgs.Empty, options.WithDefaults());

        public static Output<GetPortalResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortalResult>("konnect:index/getPortal:getPortal", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetPortalResult
    {
        public readonly double ApplicationCount;
        public readonly bool AutoApproveApplications;
        public readonly bool AutoApproveDevelopers;
        public readonly string CreatedAt;
        public readonly string CustomClientDomain;
        public readonly string CustomDomain;
        public readonly string DefaultApplicationAuthStrategyId;
        public readonly string DefaultDomain;
        public readonly string Description;
        public readonly double DeveloperCount;
        public readonly string DisplayName;
        public readonly string Id;
        public readonly bool IsPublic;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        public readonly double PublishedProductCount;
        public readonly bool RbacEnabled;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetPortalResult(
            double applicationCount,

            bool autoApproveApplications,

            bool autoApproveDevelopers,

            string createdAt,

            string customClientDomain,

            string customDomain,

            string defaultApplicationAuthStrategyId,

            string defaultDomain,

            string description,

            double developerCount,

            string displayName,

            string id,

            bool isPublic,

            ImmutableDictionary<string, string> labels,

            string name,

            double publishedProductCount,

            bool rbacEnabled,

            string updatedAt)
        {
            ApplicationCount = applicationCount;
            AutoApproveApplications = autoApproveApplications;
            AutoApproveDevelopers = autoApproveDevelopers;
            CreatedAt = createdAt;
            CustomClientDomain = customClientDomain;
            CustomDomain = customDomain;
            DefaultApplicationAuthStrategyId = defaultApplicationAuthStrategyId;
            DefaultDomain = defaultDomain;
            Description = description;
            DeveloperCount = developerCount;
            DisplayName = displayName;
            Id = id;
            IsPublic = isPublic;
            Labels = labels;
            Name = name;
            PublishedProductCount = publishedProductCount;
            RbacEnabled = rbacEnabled;
            UpdatedAt = updatedAt;
        }
    }
}
