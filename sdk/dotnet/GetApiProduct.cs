// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    public static class GetApiProduct
    {
        public static Task<GetApiProductResult> InvokeAsync(GetApiProductArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiProductResult>("konnect:index/getApiProduct:getApiProduct", args ?? new GetApiProductArgs(), options.WithDefaults());

        public static Output<GetApiProductResult> Invoke(GetApiProductInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiProductResult>("konnect:index/getApiProduct:getApiProduct", args ?? new GetApiProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiProductArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetApiProductArgs()
        {
        }
        public static new GetApiProductArgs Empty => new GetApiProductArgs();
    }

    public sealed class GetApiProductInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetApiProductInvokeArgs()
        {
        }
        public static new GetApiProductInvokeArgs Empty => new GetApiProductInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiProductResult
    {
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        public readonly ImmutableArray<string> PortalIds;
        public readonly ImmutableArray<Outputs.GetApiProductPortalResult> Portals;
        public readonly string UpdatedAt;
        public readonly double VersionCount;

        [OutputConstructor]
        private GetApiProductResult(
            string createdAt,

            string description,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            ImmutableArray<string> portalIds,

            ImmutableArray<Outputs.GetApiProductPortalResult> portals,

            string updatedAt,

            double versionCount)
        {
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
            PortalIds = portalIds;
            Portals = portals;
            UpdatedAt = updatedAt;
            VersionCount = versionCount;
        }
    }
}
