// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Konnect
{
    public static class GetGatewayControlPlane
    {
        public static Task<GetGatewayControlPlaneResult> InvokeAsync(GetGatewayControlPlaneArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayControlPlaneResult>("konnect:index/getGatewayControlPlane:getGatewayControlPlane", args ?? new GetGatewayControlPlaneArgs(), options.WithDefaults());

        public static Output<GetGatewayControlPlaneResult> Invoke(GetGatewayControlPlaneInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayControlPlaneResult>("konnect:index/getGatewayControlPlane:getGatewayControlPlane", args ?? new GetGatewayControlPlaneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayControlPlaneArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGatewayControlPlaneArgs()
        {
        }
        public static new GetGatewayControlPlaneArgs Empty => new GetGatewayControlPlaneArgs();
    }

    public sealed class GetGatewayControlPlaneInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGatewayControlPlaneInvokeArgs()
        {
        }
        public static new GetGatewayControlPlaneInvokeArgs Empty => new GetGatewayControlPlaneInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayControlPlaneResult
    {
        public readonly Outputs.GetGatewayControlPlaneConfigResult Config;
        public readonly string Description;
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;

        [OutputConstructor]
        private GetGatewayControlPlaneResult(
            Outputs.GetGatewayControlPlaneConfigResult config,

            string description,

            string id,

            ImmutableDictionary<string, string> labels,

            string name)
        {
            Config = config;
            Description = description;
            Id = id;
            Labels = labels;
            Name = name;
        }
    }
}
