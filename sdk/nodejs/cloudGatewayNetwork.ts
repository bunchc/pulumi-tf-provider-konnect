// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * CloudGatewayNetwork Resource
 */
export class CloudGatewayNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CloudGatewayNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudGatewayNetworkState, opts?: pulumi.CustomResourceOptions): CloudGatewayNetwork {
        return new CloudGatewayNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/cloudGatewayNetwork:CloudGatewayNetwork';

    /**
     * Returns true if the given object is an instance of CloudGatewayNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudGatewayNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudGatewayNetwork.__pulumiType;
    }

    /**
     * List of availability zones that the network is attached to. Requires replacement if changed.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * CIDR block configuration for the network. Requires replacement if changed.
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly cloudGatewayProviderAccountId!: pulumi.Output<string>;
    /**
     * The number of configurations that reference this network.
     */
    public /*out*/ readonly configurationReferenceCount!: pulumi.Output<number>;
    /**
     * An RFC-3339 timestamp representation of network creation date.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Whether DDOS protection is enabled for the network. Requires replacement if changed.
     */
    public readonly ddosProtection!: pulumi.Output<boolean>;
    /**
     * Whether the network is a default network or not. Default networks are Networks that are created
     * automatically by Konnect when an organization is linked to a provider account.
     */
    public /*out*/ readonly default!: pulumi.Output<boolean>;
    /**
     * Monotonically-increasing version count of the network, to indicate the order of updates to the network.
     */
    public /*out*/ readonly entityVersion!: pulumi.Output<number>;
    /**
     * Firewall configuration for a network.
     */
    public readonly firewall!: pulumi.Output<outputs.CloudGatewayNetworkFirewall>;
    /**
     * Human-readable name of the network.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Metadata describing attributes returned by cloud-provider for the network.
     */
    public /*out*/ readonly providerMetadata!: pulumi.Output<outputs.CloudGatewayNetworkProviderMetadata>;
    /**
     * Region ID for cloud provider region. Requires replacement if changed.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The number of transit gateways attached to this network.
     */
    public /*out*/ readonly transitGatewayCount!: pulumi.Output<number>;
    /**
     * An RFC-3339 timestamp representation of network update date.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a CloudGatewayNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudGatewayNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudGatewayNetworkArgs | CloudGatewayNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudGatewayNetworkState | undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["cloudGatewayProviderAccountId"] = state ? state.cloudGatewayProviderAccountId : undefined;
            resourceInputs["configurationReferenceCount"] = state ? state.configurationReferenceCount : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["ddosProtection"] = state ? state.ddosProtection : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["entityVersion"] = state ? state.entityVersion : undefined;
            resourceInputs["firewall"] = state ? state.firewall : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["providerMetadata"] = state ? state.providerMetadata : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["transitGatewayCount"] = state ? state.transitGatewayCount : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as CloudGatewayNetworkArgs | undefined;
            if ((!args || args.availabilityZones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZones'");
            }
            if ((!args || args.cidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if ((!args || args.cloudGatewayProviderAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudGatewayProviderAccountId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["cloudGatewayProviderAccountId"] = args ? args.cloudGatewayProviderAccountId : undefined;
            resourceInputs["ddosProtection"] = args ? args.ddosProtection : undefined;
            resourceInputs["firewall"] = args ? args.firewall : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["configurationReferenceCount"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["default"] = undefined /*out*/;
            resourceInputs["entityVersion"] = undefined /*out*/;
            resourceInputs["providerMetadata"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["transitGatewayCount"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudGatewayNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudGatewayNetwork resources.
 */
export interface CloudGatewayNetworkState {
    /**
     * List of availability zones that the network is attached to. Requires replacement if changed.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * CIDR block configuration for the network. Requires replacement if changed.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    cloudGatewayProviderAccountId?: pulumi.Input<string>;
    /**
     * The number of configurations that reference this network.
     */
    configurationReferenceCount?: pulumi.Input<number>;
    /**
     * An RFC-3339 timestamp representation of network creation date.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Whether DDOS protection is enabled for the network. Requires replacement if changed.
     */
    ddosProtection?: pulumi.Input<boolean>;
    /**
     * Whether the network is a default network or not. Default networks are Networks that are created
     * automatically by Konnect when an organization is linked to a provider account.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Monotonically-increasing version count of the network, to indicate the order of updates to the network.
     */
    entityVersion?: pulumi.Input<number>;
    /**
     * Firewall configuration for a network.
     */
    firewall?: pulumi.Input<inputs.CloudGatewayNetworkFirewall>;
    /**
     * Human-readable name of the network.
     */
    name?: pulumi.Input<string>;
    /**
     * Metadata describing attributes returned by cloud-provider for the network.
     */
    providerMetadata?: pulumi.Input<inputs.CloudGatewayNetworkProviderMetadata>;
    /**
     * Region ID for cloud provider region. Requires replacement if changed.
     */
    region?: pulumi.Input<string>;
    /**
     * State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
     */
    state?: pulumi.Input<string>;
    /**
     * The number of transit gateways attached to this network.
     */
    transitGatewayCount?: pulumi.Input<number>;
    /**
     * An RFC-3339 timestamp representation of network update date.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudGatewayNetwork resource.
 */
export interface CloudGatewayNetworkArgs {
    /**
     * List of availability zones that the network is attached to. Requires replacement if changed.
     */
    availabilityZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * CIDR block configuration for the network. Requires replacement if changed.
     */
    cidrBlock: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    cloudGatewayProviderAccountId: pulumi.Input<string>;
    /**
     * Whether DDOS protection is enabled for the network. Requires replacement if changed.
     */
    ddosProtection?: pulumi.Input<boolean>;
    /**
     * Firewall configuration for a network.
     */
    firewall?: pulumi.Input<inputs.CloudGatewayNetworkFirewall>;
    /**
     * Human-readable name of the network.
     */
    name?: pulumi.Input<string>;
    /**
     * Region ID for cloud provider region. Requires replacement if changed.
     */
    region: pulumi.Input<string>;
}
