// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Team Resource
 */
export class Team extends pulumi.CustomResource {
    /**
     * Get an existing Team resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamState, opts?: pulumi.CustomResourceOptions): Team {
        return new Team(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/team:Team';

    /**
     * Returns true if the given object is an instance of Team.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Team {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Team.__pulumiType;
    }

    /**
     * A Unix timestamp representation of team creation.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the new team.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A name for the team being created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Returns True if a user belongs to a `systemTeam`. System teams are teams that can manage Konnect objects, like
     * "Organization Admin", or "Service"
     */
    public /*out*/ readonly systemTeam!: pulumi.Output<boolean>;
    /**
     * A Unix timestamp representation of the most recent change to the team object in Konnect.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a Team resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TeamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TeamArgs | TeamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TeamState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["systemTeam"] = state ? state.systemTeam : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as TeamArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["systemTeam"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Team.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Team resources.
 */
export interface TeamState {
    /**
     * A Unix timestamp representation of team creation.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the new team.
     */
    description?: pulumi.Input<string>;
    /**
     * Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A name for the team being created.
     */
    name?: pulumi.Input<string>;
    /**
     * Returns True if a user belongs to a `systemTeam`. System teams are teams that can manage Konnect objects, like
     * "Organization Admin", or "Service"
     */
    systemTeam?: pulumi.Input<boolean>;
    /**
     * A Unix timestamp representation of the most recent change to the team object in Konnect.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Team resource.
 */
export interface TeamArgs {
    /**
     * The description of the new team.
     */
    description?: pulumi.Input<string>;
    /**
     * Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A name for the team being created.
     */
    name?: pulumi.Input<string>;
}
