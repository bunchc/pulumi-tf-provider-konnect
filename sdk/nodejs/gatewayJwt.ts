// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * GatewayJWT Resource
 */
export class GatewayJwt extends pulumi.CustomResource {
    /**
     * Get an existing GatewayJwt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayJwtState, opts?: pulumi.CustomResourceOptions): GatewayJwt {
        return new GatewayJwt(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/gatewayJwt:GatewayJwt';

    /**
     * Returns true if the given object is an instance of GatewayJwt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GatewayJwt {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayJwt.__pulumiType;
    }

    /**
     * Requires replacement if changed. ; must be one of ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "PS256", "PS384", "PS512", "EdDSA"]
     */
    public readonly algorithm!: pulumi.Output<string>;
    public /*out*/ readonly consumer!: pulumi.Output<outputs.GatewayJwtConsumer>;
    /**
     * Consumer ID for nested entities. Requires replacement if changed.
     */
    public readonly consumerId!: pulumi.Output<string>;
    /**
     * The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
     */
    public readonly controlPlaneId!: pulumi.Output<string>;
    /**
     * Unix epoch when the resource was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    /**
     * Requires replacement if changed.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly rsaPublicKey!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly secret!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly tags!: pulumi.Output<string[]>;

    /**
     * Create a GatewayJwt resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayJwtArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GatewayJwtArgs | GatewayJwtState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GatewayJwtState | undefined;
            resourceInputs["algorithm"] = state ? state.algorithm : undefined;
            resourceInputs["consumer"] = state ? state.consumer : undefined;
            resourceInputs["consumerId"] = state ? state.consumerId : undefined;
            resourceInputs["controlPlaneId"] = state ? state.controlPlaneId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["rsaPublicKey"] = state ? state.rsaPublicKey : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as GatewayJwtArgs | undefined;
            if ((!args || args.consumerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumerId'");
            }
            if ((!args || args.controlPlaneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlPlaneId'");
            }
            resourceInputs["algorithm"] = args ? args.algorithm : undefined;
            resourceInputs["consumerId"] = args ? args.consumerId : undefined;
            resourceInputs["controlPlaneId"] = args ? args.controlPlaneId : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["rsaPublicKey"] = args ? args.rsaPublicKey : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["consumer"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GatewayJwt.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GatewayJwt resources.
 */
export interface GatewayJwtState {
    /**
     * Requires replacement if changed. ; must be one of ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "PS256", "PS384", "PS512", "EdDSA"]
     */
    algorithm?: pulumi.Input<string>;
    consumer?: pulumi.Input<inputs.GatewayJwtConsumer>;
    /**
     * Consumer ID for nested entities. Requires replacement if changed.
     */
    consumerId?: pulumi.Input<string>;
    /**
     * The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
     */
    controlPlaneId?: pulumi.Input<string>;
    /**
     * Unix epoch when the resource was created.
     */
    createdAt?: pulumi.Input<number>;
    /**
     * Requires replacement if changed.
     */
    key?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    rsaPublicKey?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    secret?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a GatewayJwt resource.
 */
export interface GatewayJwtArgs {
    /**
     * Requires replacement if changed. ; must be one of ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "PS256", "PS384", "PS512", "EdDSA"]
     */
    algorithm?: pulumi.Input<string>;
    /**
     * Consumer ID for nested entities. Requires replacement if changed.
     */
    consumerId: pulumi.Input<string>;
    /**
     * The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
     */
    controlPlaneId: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    key?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    rsaPublicKey?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    secret?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
