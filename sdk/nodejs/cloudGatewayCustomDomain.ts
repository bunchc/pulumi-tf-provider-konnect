// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * CloudGatewayCustomDomain Resource
 */
export class CloudGatewayCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing CloudGatewayCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudGatewayCustomDomainState, opts?: pulumi.CustomResourceOptions): CloudGatewayCustomDomain {
        return new CloudGatewayCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/cloudGatewayCustomDomain:CloudGatewayCustomDomain';

    /**
     * Returns true if the given object is an instance of CloudGatewayCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudGatewayCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudGatewayCustomDomain.__pulumiType;
    }

    /**
     * Certificate ID for the certificate representing this domain and stored on data-planes for this
     * control-plane. Can be retrieved via the control-planes API for this custom domain's control-plane.
     */
    public /*out*/ readonly certificateId!: pulumi.Output<string>;
    /**
     * Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
     */
    public readonly controlPlaneGeo!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly controlPlaneId!: pulumi.Output<string>;
    /**
     * An RFC-3339 timestamp representation of custom domain creation date.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Domain name of the custom domain. Requires replacement if changed.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Monotonically-increasing version count of the custom domain, to indicate the order of updates to the custom
     * domain.
     */
    public /*out*/ readonly entityVersion!: pulumi.Output<number>;
    /**
     * Server Name Indication ID for this domain and stored on data-planes for this control-plane. Can be retrieved
     * via the control-planes API for this custom domain's control-plane.
     */
    public /*out*/ readonly sniId!: pulumi.Output<string>;
    /**
     * State of the custom domain. must be one of ["created", "initializing", "ready", "terminating", "terminated", "error"]
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Metadata describing the backing state of the custom domain and why it may be in an erroneous state.
     */
    public /*out*/ readonly stateMetadata!: pulumi.Output<outputs.CloudGatewayCustomDomainStateMetadata>;
    /**
     * An RFC-3339 timestamp representation of custom domain update date.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a CloudGatewayCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudGatewayCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudGatewayCustomDomainArgs | CloudGatewayCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudGatewayCustomDomainState | undefined;
            resourceInputs["certificateId"] = state ? state.certificateId : undefined;
            resourceInputs["controlPlaneGeo"] = state ? state.controlPlaneGeo : undefined;
            resourceInputs["controlPlaneId"] = state ? state.controlPlaneId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["entityVersion"] = state ? state.entityVersion : undefined;
            resourceInputs["sniId"] = state ? state.sniId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMetadata"] = state ? state.stateMetadata : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as CloudGatewayCustomDomainArgs | undefined;
            if ((!args || args.controlPlaneGeo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlPlaneGeo'");
            }
            if ((!args || args.controlPlaneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlPlaneId'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["controlPlaneGeo"] = args ? args.controlPlaneGeo : undefined;
            resourceInputs["controlPlaneId"] = args ? args.controlPlaneId : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["certificateId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["entityVersion"] = undefined /*out*/;
            resourceInputs["sniId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMetadata"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudGatewayCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudGatewayCustomDomain resources.
 */
export interface CloudGatewayCustomDomainState {
    /**
     * Certificate ID for the certificate representing this domain and stored on data-planes for this
     * control-plane. Can be retrieved via the control-planes API for this custom domain's control-plane.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
     */
    controlPlaneGeo?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    controlPlaneId?: pulumi.Input<string>;
    /**
     * An RFC-3339 timestamp representation of custom domain creation date.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Domain name of the custom domain. Requires replacement if changed.
     */
    domain?: pulumi.Input<string>;
    /**
     * Monotonically-increasing version count of the custom domain, to indicate the order of updates to the custom
     * domain.
     */
    entityVersion?: pulumi.Input<number>;
    /**
     * Server Name Indication ID for this domain and stored on data-planes for this control-plane. Can be retrieved
     * via the control-planes API for this custom domain's control-plane.
     */
    sniId?: pulumi.Input<string>;
    /**
     * State of the custom domain. must be one of ["created", "initializing", "ready", "terminating", "terminated", "error"]
     */
    state?: pulumi.Input<string>;
    /**
     * Metadata describing the backing state of the custom domain and why it may be in an erroneous state.
     */
    stateMetadata?: pulumi.Input<inputs.CloudGatewayCustomDomainStateMetadata>;
    /**
     * An RFC-3339 timestamp representation of custom domain update date.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudGatewayCustomDomain resource.
 */
export interface CloudGatewayCustomDomainArgs {
    /**
     * Set of control-plane geos supported for deploying cloud-gateways configurations. Requires replacement if changed. ; must be one of ["us", "eu", "au"]
     */
    controlPlaneGeo: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    controlPlaneId: pulumi.Input<string>;
    /**
     * Domain name of the custom domain. Requires replacement if changed.
     */
    domain: pulumi.Input<string>;
}
