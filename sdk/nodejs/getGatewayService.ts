// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGatewayService(args: GetGatewayServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("konnect:index/getGatewayService:getGatewayService", {
        "controlPlaneId": args.controlPlaneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGatewayService.
 */
export interface GetGatewayServiceArgs {
    controlPlaneId: string;
}

/**
 * A collection of values returned by getGatewayService.
 */
export interface GetGatewayServiceResult {
    readonly caCertificates: string[];
    readonly clientCertificate: outputs.GetGatewayServiceClientCertificate;
    readonly connectTimeout: number;
    readonly controlPlaneId: string;
    readonly createdAt: number;
    readonly enabled: boolean;
    readonly host: string;
    readonly id: string;
    readonly name: string;
    readonly path: string;
    readonly port: number;
    readonly protocol: string;
    readonly readTimeout: number;
    readonly retries: number;
    readonly tags: string[];
    readonly tlsVerify: boolean;
    readonly tlsVerifyDepth: number;
    readonly updatedAt: number;
    readonly writeTimeout: number;
}
export function getGatewayServiceOutput(args: GetGatewayServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayServiceResult> {
    return pulumi.output(args).apply((a: any) => getGatewayService(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayService.
 */
export interface GetGatewayServiceOutputArgs {
    controlPlaneId: pulumi.Input<string>;
}
