// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * CloudGatewayTransitGateway Resource
 */
export class CloudGatewayTransitGateway extends pulumi.CustomResource {
    /**
     * Get an existing CloudGatewayTransitGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudGatewayTransitGatewayState, opts?: pulumi.CustomResourceOptions): CloudGatewayTransitGateway {
        return new CloudGatewayTransitGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/cloudGatewayTransitGateway:CloudGatewayTransitGateway';

    /**
     * Returns true if the given object is an instance of CloudGatewayTransitGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudGatewayTransitGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudGatewayTransitGateway.__pulumiType;
    }

    /**
     * CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning
     * network.
     */
    public readonly cidrBlocks!: pulumi.Output<string[]>;
    /**
     * An RFC-3339 timestamp representation of transit gateway creation date.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway attachment.
     * Requires replacement if changed.
     */
    public readonly dnsConfigs!: pulumi.Output<outputs.CloudGatewayTransitGatewayDnsConfig[]>;
    /**
     * Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the transit gateway.
     */
    public /*out*/ readonly entityVersion!: pulumi.Output<number>;
    /**
     * Human-readable name of the transit gateway. Requires replacement if changed.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The network to operate on. Requires replacement if changed.
     */
    public readonly networkId!: pulumi.Output<string>;
    /**
     * State of the transit gateway. must be one of ["created", "initializing", "ready", "terminating", "terminated"]
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly transitGatewayAttachmentConfig!: pulumi.Output<outputs.CloudGatewayTransitGatewayTransitGatewayAttachmentConfig>;
    /**
     * An RFC-3339 timestamp representation of transit gateway update date.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a CloudGatewayTransitGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudGatewayTransitGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudGatewayTransitGatewayArgs | CloudGatewayTransitGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudGatewayTransitGatewayState | undefined;
            resourceInputs["cidrBlocks"] = state ? state.cidrBlocks : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dnsConfigs"] = state ? state.dnsConfigs : undefined;
            resourceInputs["entityVersion"] = state ? state.entityVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["transitGatewayAttachmentConfig"] = state ? state.transitGatewayAttachmentConfig : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as CloudGatewayTransitGatewayArgs | undefined;
            if ((!args || args.cidrBlocks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlocks'");
            }
            if ((!args || args.networkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkId'");
            }
            if ((!args || args.transitGatewayAttachmentConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayAttachmentConfig'");
            }
            resourceInputs["cidrBlocks"] = args ? args.cidrBlocks : undefined;
            resourceInputs["dnsConfigs"] = args ? args.dnsConfigs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkId"] = args ? args.networkId : undefined;
            resourceInputs["transitGatewayAttachmentConfig"] = args ? args.transitGatewayAttachmentConfig : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["entityVersion"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudGatewayTransitGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudGatewayTransitGateway resources.
 */
export interface CloudGatewayTransitGatewayState {
    /**
     * CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning
     * network.
     */
    cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An RFC-3339 timestamp representation of transit gateway creation date.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway attachment.
     * Requires replacement if changed.
     */
    dnsConfigs?: pulumi.Input<pulumi.Input<inputs.CloudGatewayTransitGatewayDnsConfig>[]>;
    /**
     * Monotonically-increasing version count of the transit gateway, to indicate the order of updates to the transit gateway.
     */
    entityVersion?: pulumi.Input<number>;
    /**
     * Human-readable name of the transit gateway. Requires replacement if changed.
     */
    name?: pulumi.Input<string>;
    /**
     * The network to operate on. Requires replacement if changed.
     */
    networkId?: pulumi.Input<string>;
    /**
     * State of the transit gateway. must be one of ["created", "initializing", "ready", "terminating", "terminated"]
     */
    state?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    transitGatewayAttachmentConfig?: pulumi.Input<inputs.CloudGatewayTransitGatewayTransitGatewayAttachmentConfig>;
    /**
     * An RFC-3339 timestamp representation of transit gateway update date.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudGatewayTransitGateway resource.
 */
export interface CloudGatewayTransitGatewayArgs {
    /**
     * CIDR blocks for constructing a route table for the transit gateway, when attaching to the owning
     * network.
     */
    cidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of mappings from remote DNS server IP address sets to proxied internal domains, for a transit gateway attachment.
     * Requires replacement if changed.
     */
    dnsConfigs?: pulumi.Input<pulumi.Input<inputs.CloudGatewayTransitGatewayDnsConfig>[]>;
    /**
     * Human-readable name of the transit gateway. Requires replacement if changed.
     */
    name?: pulumi.Input<string>;
    /**
     * The network to operate on. Requires replacement if changed.
     */
    networkId: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    transitGatewayAttachmentConfig: pulumi.Input<inputs.CloudGatewayTransitGatewayTransitGatewayAttachmentConfig>;
}
