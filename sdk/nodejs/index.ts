// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ApiProductArgs, ApiProductState } from "./apiProduct";
export type ApiProduct = import("./apiProduct").ApiProduct;
export const ApiProduct: typeof import("./apiProduct").ApiProduct = null as any;
utilities.lazyLoad(exports, ["ApiProduct"], () => require("./apiProduct"));

export { ApiProductDocumentArgs, ApiProductDocumentState } from "./apiProductDocument";
export type ApiProductDocument = import("./apiProductDocument").ApiProductDocument;
export const ApiProductDocument: typeof import("./apiProductDocument").ApiProductDocument = null as any;
utilities.lazyLoad(exports, ["ApiProductDocument"], () => require("./apiProductDocument"));

export { ApiProductSpecificationArgs, ApiProductSpecificationState } from "./apiProductSpecification";
export type ApiProductSpecification = import("./apiProductSpecification").ApiProductSpecification;
export const ApiProductSpecification: typeof import("./apiProductSpecification").ApiProductSpecification = null as any;
utilities.lazyLoad(exports, ["ApiProductSpecification"], () => require("./apiProductSpecification"));

export { ApiProductVersionArgs, ApiProductVersionState } from "./apiProductVersion";
export type ApiProductVersion = import("./apiProductVersion").ApiProductVersion;
export const ApiProductVersion: typeof import("./apiProductVersion").ApiProductVersion = null as any;
utilities.lazyLoad(exports, ["ApiProductVersion"], () => require("./apiProductVersion"));

export { ApplicationAuthStrategyArgs, ApplicationAuthStrategyState } from "./applicationAuthStrategy";
export type ApplicationAuthStrategy = import("./applicationAuthStrategy").ApplicationAuthStrategy;
export const ApplicationAuthStrategy: typeof import("./applicationAuthStrategy").ApplicationAuthStrategy = null as any;
utilities.lazyLoad(exports, ["ApplicationAuthStrategy"], () => require("./applicationAuthStrategy"));

export { CloudGatewayConfigurationArgs, CloudGatewayConfigurationState } from "./cloudGatewayConfiguration";
export type CloudGatewayConfiguration = import("./cloudGatewayConfiguration").CloudGatewayConfiguration;
export const CloudGatewayConfiguration: typeof import("./cloudGatewayConfiguration").CloudGatewayConfiguration = null as any;
utilities.lazyLoad(exports, ["CloudGatewayConfiguration"], () => require("./cloudGatewayConfiguration"));

export { CloudGatewayCustomDomainArgs, CloudGatewayCustomDomainState } from "./cloudGatewayCustomDomain";
export type CloudGatewayCustomDomain = import("./cloudGatewayCustomDomain").CloudGatewayCustomDomain;
export const CloudGatewayCustomDomain: typeof import("./cloudGatewayCustomDomain").CloudGatewayCustomDomain = null as any;
utilities.lazyLoad(exports, ["CloudGatewayCustomDomain"], () => require("./cloudGatewayCustomDomain"));

export { CloudGatewayNetworkArgs, CloudGatewayNetworkState } from "./cloudGatewayNetwork";
export type CloudGatewayNetwork = import("./cloudGatewayNetwork").CloudGatewayNetwork;
export const CloudGatewayNetwork: typeof import("./cloudGatewayNetwork").CloudGatewayNetwork = null as any;
utilities.lazyLoad(exports, ["CloudGatewayNetwork"], () => require("./cloudGatewayNetwork"));

export { CloudGatewayTransitGatewayArgs, CloudGatewayTransitGatewayState } from "./cloudGatewayTransitGateway";
export type CloudGatewayTransitGateway = import("./cloudGatewayTransitGateway").CloudGatewayTransitGateway;
export const CloudGatewayTransitGateway: typeof import("./cloudGatewayTransitGateway").CloudGatewayTransitGateway = null as any;
utilities.lazyLoad(exports, ["CloudGatewayTransitGateway"], () => require("./cloudGatewayTransitGateway"));

export { GatewayAclArgs, GatewayAclState } from "./gatewayAcl";
export type GatewayAcl = import("./gatewayAcl").GatewayAcl;
export const GatewayAcl: typeof import("./gatewayAcl").GatewayAcl = null as any;
utilities.lazyLoad(exports, ["GatewayAcl"], () => require("./gatewayAcl"));

export { GatewayBasicAuthArgs, GatewayBasicAuthState } from "./gatewayBasicAuth";
export type GatewayBasicAuth = import("./gatewayBasicAuth").GatewayBasicAuth;
export const GatewayBasicAuth: typeof import("./gatewayBasicAuth").GatewayBasicAuth = null as any;
utilities.lazyLoad(exports, ["GatewayBasicAuth"], () => require("./gatewayBasicAuth"));

export { GatewayCaCertificateArgs, GatewayCaCertificateState } from "./gatewayCaCertificate";
export type GatewayCaCertificate = import("./gatewayCaCertificate").GatewayCaCertificate;
export const GatewayCaCertificate: typeof import("./gatewayCaCertificate").GatewayCaCertificate = null as any;
utilities.lazyLoad(exports, ["GatewayCaCertificate"], () => require("./gatewayCaCertificate"));

export { GatewayCertificateArgs, GatewayCertificateState } from "./gatewayCertificate";
export type GatewayCertificate = import("./gatewayCertificate").GatewayCertificate;
export const GatewayCertificate: typeof import("./gatewayCertificate").GatewayCertificate = null as any;
utilities.lazyLoad(exports, ["GatewayCertificate"], () => require("./gatewayCertificate"));

export { GatewayConsumerArgs, GatewayConsumerState } from "./gatewayConsumer";
export type GatewayConsumer = import("./gatewayConsumer").GatewayConsumer;
export const GatewayConsumer: typeof import("./gatewayConsumer").GatewayConsumer = null as any;
utilities.lazyLoad(exports, ["GatewayConsumer"], () => require("./gatewayConsumer"));

export { GatewayConsumerGroupArgs, GatewayConsumerGroupState } from "./gatewayConsumerGroup";
export type GatewayConsumerGroup = import("./gatewayConsumerGroup").GatewayConsumerGroup;
export const GatewayConsumerGroup: typeof import("./gatewayConsumerGroup").GatewayConsumerGroup = null as any;
utilities.lazyLoad(exports, ["GatewayConsumerGroup"], () => require("./gatewayConsumerGroup"));

export { GatewayConsumerGroupMemberArgs, GatewayConsumerGroupMemberState } from "./gatewayConsumerGroupMember";
export type GatewayConsumerGroupMember = import("./gatewayConsumerGroupMember").GatewayConsumerGroupMember;
export const GatewayConsumerGroupMember: typeof import("./gatewayConsumerGroupMember").GatewayConsumerGroupMember = null as any;
utilities.lazyLoad(exports, ["GatewayConsumerGroupMember"], () => require("./gatewayConsumerGroupMember"));

export { GatewayControlPlaneArgs, GatewayControlPlaneState } from "./gatewayControlPlane";
export type GatewayControlPlane = import("./gatewayControlPlane").GatewayControlPlane;
export const GatewayControlPlane: typeof import("./gatewayControlPlane").GatewayControlPlane = null as any;
utilities.lazyLoad(exports, ["GatewayControlPlane"], () => require("./gatewayControlPlane"));

export { GatewayControlPlaneMembershipArgs, GatewayControlPlaneMembershipState } from "./gatewayControlPlaneMembership";
export type GatewayControlPlaneMembership = import("./gatewayControlPlaneMembership").GatewayControlPlaneMembership;
export const GatewayControlPlaneMembership: typeof import("./gatewayControlPlaneMembership").GatewayControlPlaneMembership = null as any;
utilities.lazyLoad(exports, ["GatewayControlPlaneMembership"], () => require("./gatewayControlPlaneMembership"));

export { GatewayCustomPluginSchemaArgs, GatewayCustomPluginSchemaState } from "./gatewayCustomPluginSchema";
export type GatewayCustomPluginSchema = import("./gatewayCustomPluginSchema").GatewayCustomPluginSchema;
export const GatewayCustomPluginSchema: typeof import("./gatewayCustomPluginSchema").GatewayCustomPluginSchema = null as any;
utilities.lazyLoad(exports, ["GatewayCustomPluginSchema"], () => require("./gatewayCustomPluginSchema"));

export { GatewayDataPlaneClientCertificateArgs, GatewayDataPlaneClientCertificateState } from "./gatewayDataPlaneClientCertificate";
export type GatewayDataPlaneClientCertificate = import("./gatewayDataPlaneClientCertificate").GatewayDataPlaneClientCertificate;
export const GatewayDataPlaneClientCertificate: typeof import("./gatewayDataPlaneClientCertificate").GatewayDataPlaneClientCertificate = null as any;
utilities.lazyLoad(exports, ["GatewayDataPlaneClientCertificate"], () => require("./gatewayDataPlaneClientCertificate"));

export { GatewayHmacAuthArgs, GatewayHmacAuthState } from "./gatewayHmacAuth";
export type GatewayHmacAuth = import("./gatewayHmacAuth").GatewayHmacAuth;
export const GatewayHmacAuth: typeof import("./gatewayHmacAuth").GatewayHmacAuth = null as any;
utilities.lazyLoad(exports, ["GatewayHmacAuth"], () => require("./gatewayHmacAuth"));

export { GatewayJwtArgs, GatewayJwtState } from "./gatewayJwt";
export type GatewayJwt = import("./gatewayJwt").GatewayJwt;
export const GatewayJwt: typeof import("./gatewayJwt").GatewayJwt = null as any;
utilities.lazyLoad(exports, ["GatewayJwt"], () => require("./gatewayJwt"));

export { GatewayKeyArgs, GatewayKeyState } from "./gatewayKey";
export type GatewayKey = import("./gatewayKey").GatewayKey;
export const GatewayKey: typeof import("./gatewayKey").GatewayKey = null as any;
utilities.lazyLoad(exports, ["GatewayKey"], () => require("./gatewayKey"));

export { GatewayKeyAuthArgs, GatewayKeyAuthState } from "./gatewayKeyAuth";
export type GatewayKeyAuth = import("./gatewayKeyAuth").GatewayKeyAuth;
export const GatewayKeyAuth: typeof import("./gatewayKeyAuth").GatewayKeyAuth = null as any;
utilities.lazyLoad(exports, ["GatewayKeyAuth"], () => require("./gatewayKeyAuth"));

export { GatewayKeySetArgs, GatewayKeySetState } from "./gatewayKeySet";
export type GatewayKeySet = import("./gatewayKeySet").GatewayKeySet;
export const GatewayKeySet: typeof import("./gatewayKeySet").GatewayKeySet = null as any;
utilities.lazyLoad(exports, ["GatewayKeySet"], () => require("./gatewayKeySet"));

export { GatewayPluginAclArgs, GatewayPluginAclState } from "./gatewayPluginAcl";
export type GatewayPluginAcl = import("./gatewayPluginAcl").GatewayPluginAcl;
export const GatewayPluginAcl: typeof import("./gatewayPluginAcl").GatewayPluginAcl = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAcl"], () => require("./gatewayPluginAcl"));

export { GatewayPluginAiPromptDecoratorArgs, GatewayPluginAiPromptDecoratorState } from "./gatewayPluginAiPromptDecorator";
export type GatewayPluginAiPromptDecorator = import("./gatewayPluginAiPromptDecorator").GatewayPluginAiPromptDecorator;
export const GatewayPluginAiPromptDecorator: typeof import("./gatewayPluginAiPromptDecorator").GatewayPluginAiPromptDecorator = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAiPromptDecorator"], () => require("./gatewayPluginAiPromptDecorator"));

export { GatewayPluginAiPromptGuardArgs, GatewayPluginAiPromptGuardState } from "./gatewayPluginAiPromptGuard";
export type GatewayPluginAiPromptGuard = import("./gatewayPluginAiPromptGuard").GatewayPluginAiPromptGuard;
export const GatewayPluginAiPromptGuard: typeof import("./gatewayPluginAiPromptGuard").GatewayPluginAiPromptGuard = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAiPromptGuard"], () => require("./gatewayPluginAiPromptGuard"));

export { GatewayPluginAiPromptTemplateArgs, GatewayPluginAiPromptTemplateState } from "./gatewayPluginAiPromptTemplate";
export type GatewayPluginAiPromptTemplate = import("./gatewayPluginAiPromptTemplate").GatewayPluginAiPromptTemplate;
export const GatewayPluginAiPromptTemplate: typeof import("./gatewayPluginAiPromptTemplate").GatewayPluginAiPromptTemplate = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAiPromptTemplate"], () => require("./gatewayPluginAiPromptTemplate"));

export { GatewayPluginAiProxyArgs, GatewayPluginAiProxyState } from "./gatewayPluginAiProxy";
export type GatewayPluginAiProxy = import("./gatewayPluginAiProxy").GatewayPluginAiProxy;
export const GatewayPluginAiProxy: typeof import("./gatewayPluginAiProxy").GatewayPluginAiProxy = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAiProxy"], () => require("./gatewayPluginAiProxy"));

export { GatewayPluginAwsLambdaArgs, GatewayPluginAwsLambdaState } from "./gatewayPluginAwsLambda";
export type GatewayPluginAwsLambda = import("./gatewayPluginAwsLambda").GatewayPluginAwsLambda;
export const GatewayPluginAwsLambda: typeof import("./gatewayPluginAwsLambda").GatewayPluginAwsLambda = null as any;
utilities.lazyLoad(exports, ["GatewayPluginAwsLambda"], () => require("./gatewayPluginAwsLambda"));

export { GatewayPluginBasicAuthArgs, GatewayPluginBasicAuthState } from "./gatewayPluginBasicAuth";
export type GatewayPluginBasicAuth = import("./gatewayPluginBasicAuth").GatewayPluginBasicAuth;
export const GatewayPluginBasicAuth: typeof import("./gatewayPluginBasicAuth").GatewayPluginBasicAuth = null as any;
utilities.lazyLoad(exports, ["GatewayPluginBasicAuth"], () => require("./gatewayPluginBasicAuth"));

export { GatewayPluginCorrelationIdArgs, GatewayPluginCorrelationIdState } from "./gatewayPluginCorrelationId";
export type GatewayPluginCorrelationId = import("./gatewayPluginCorrelationId").GatewayPluginCorrelationId;
export const GatewayPluginCorrelationId: typeof import("./gatewayPluginCorrelationId").GatewayPluginCorrelationId = null as any;
utilities.lazyLoad(exports, ["GatewayPluginCorrelationId"], () => require("./gatewayPluginCorrelationId"));

export { GatewayPluginCorsArgs, GatewayPluginCorsState } from "./gatewayPluginCors";
export type GatewayPluginCors = import("./gatewayPluginCors").GatewayPluginCors;
export const GatewayPluginCors: typeof import("./gatewayPluginCors").GatewayPluginCors = null as any;
utilities.lazyLoad(exports, ["GatewayPluginCors"], () => require("./gatewayPluginCors"));

export { GatewayPluginExitTransformerArgs, GatewayPluginExitTransformerState } from "./gatewayPluginExitTransformer";
export type GatewayPluginExitTransformer = import("./gatewayPluginExitTransformer").GatewayPluginExitTransformer;
export const GatewayPluginExitTransformer: typeof import("./gatewayPluginExitTransformer").GatewayPluginExitTransformer = null as any;
utilities.lazyLoad(exports, ["GatewayPluginExitTransformer"], () => require("./gatewayPluginExitTransformer"));

export { GatewayPluginFileLogArgs, GatewayPluginFileLogState } from "./gatewayPluginFileLog";
export type GatewayPluginFileLog = import("./gatewayPluginFileLog").GatewayPluginFileLog;
export const GatewayPluginFileLog: typeof import("./gatewayPluginFileLog").GatewayPluginFileLog = null as any;
utilities.lazyLoad(exports, ["GatewayPluginFileLog"], () => require("./gatewayPluginFileLog"));

export { GatewayPluginIpRestrictionArgs, GatewayPluginIpRestrictionState } from "./gatewayPluginIpRestriction";
export type GatewayPluginIpRestriction = import("./gatewayPluginIpRestriction").GatewayPluginIpRestriction;
export const GatewayPluginIpRestriction: typeof import("./gatewayPluginIpRestriction").GatewayPluginIpRestriction = null as any;
utilities.lazyLoad(exports, ["GatewayPluginIpRestriction"], () => require("./gatewayPluginIpRestriction"));

export { GatewayPluginJqArgs, GatewayPluginJqState } from "./gatewayPluginJq";
export type GatewayPluginJq = import("./gatewayPluginJq").GatewayPluginJq;
export const GatewayPluginJq: typeof import("./gatewayPluginJq").GatewayPluginJq = null as any;
utilities.lazyLoad(exports, ["GatewayPluginJq"], () => require("./gatewayPluginJq"));

export { GatewayPluginJwtArgs, GatewayPluginJwtState } from "./gatewayPluginJwt";
export type GatewayPluginJwt = import("./gatewayPluginJwt").GatewayPluginJwt;
export const GatewayPluginJwt: typeof import("./gatewayPluginJwt").GatewayPluginJwt = null as any;
utilities.lazyLoad(exports, ["GatewayPluginJwt"], () => require("./gatewayPluginJwt"));

export { GatewayPluginJwtSignerArgs, GatewayPluginJwtSignerState } from "./gatewayPluginJwtSigner";
export type GatewayPluginJwtSigner = import("./gatewayPluginJwtSigner").GatewayPluginJwtSigner;
export const GatewayPluginJwtSigner: typeof import("./gatewayPluginJwtSigner").GatewayPluginJwtSigner = null as any;
utilities.lazyLoad(exports, ["GatewayPluginJwtSigner"], () => require("./gatewayPluginJwtSigner"));

export { GatewayPluginKeyAuthArgs, GatewayPluginKeyAuthState } from "./gatewayPluginKeyAuth";
export type GatewayPluginKeyAuth = import("./gatewayPluginKeyAuth").GatewayPluginKeyAuth;
export const GatewayPluginKeyAuth: typeof import("./gatewayPluginKeyAuth").GatewayPluginKeyAuth = null as any;
utilities.lazyLoad(exports, ["GatewayPluginKeyAuth"], () => require("./gatewayPluginKeyAuth"));

export { GatewayPluginOauth2Args, GatewayPluginOauth2State } from "./gatewayPluginOauth2";
export type GatewayPluginOauth2 = import("./gatewayPluginOauth2").GatewayPluginOauth2;
export const GatewayPluginOauth2: typeof import("./gatewayPluginOauth2").GatewayPluginOauth2 = null as any;
utilities.lazyLoad(exports, ["GatewayPluginOauth2"], () => require("./gatewayPluginOauth2"));

export { GatewayPluginOpenidConnectArgs, GatewayPluginOpenidConnectState } from "./gatewayPluginOpenidConnect";
export type GatewayPluginOpenidConnect = import("./gatewayPluginOpenidConnect").GatewayPluginOpenidConnect;
export const GatewayPluginOpenidConnect: typeof import("./gatewayPluginOpenidConnect").GatewayPluginOpenidConnect = null as any;
utilities.lazyLoad(exports, ["GatewayPluginOpenidConnect"], () => require("./gatewayPluginOpenidConnect"));

export { GatewayPluginOpentelemetryArgs, GatewayPluginOpentelemetryState } from "./gatewayPluginOpentelemetry";
export type GatewayPluginOpentelemetry = import("./gatewayPluginOpentelemetry").GatewayPluginOpentelemetry;
export const GatewayPluginOpentelemetry: typeof import("./gatewayPluginOpentelemetry").GatewayPluginOpentelemetry = null as any;
utilities.lazyLoad(exports, ["GatewayPluginOpentelemetry"], () => require("./gatewayPluginOpentelemetry"));

export { GatewayPluginPostFunctionArgs, GatewayPluginPostFunctionState } from "./gatewayPluginPostFunction";
export type GatewayPluginPostFunction = import("./gatewayPluginPostFunction").GatewayPluginPostFunction;
export const GatewayPluginPostFunction: typeof import("./gatewayPluginPostFunction").GatewayPluginPostFunction = null as any;
utilities.lazyLoad(exports, ["GatewayPluginPostFunction"], () => require("./gatewayPluginPostFunction"));

export { GatewayPluginPreFunctionArgs, GatewayPluginPreFunctionState } from "./gatewayPluginPreFunction";
export type GatewayPluginPreFunction = import("./gatewayPluginPreFunction").GatewayPluginPreFunction;
export const GatewayPluginPreFunction: typeof import("./gatewayPluginPreFunction").GatewayPluginPreFunction = null as any;
utilities.lazyLoad(exports, ["GatewayPluginPreFunction"], () => require("./gatewayPluginPreFunction"));

export { GatewayPluginPrometheusArgs, GatewayPluginPrometheusState } from "./gatewayPluginPrometheus";
export type GatewayPluginPrometheus = import("./gatewayPluginPrometheus").GatewayPluginPrometheus;
export const GatewayPluginPrometheus: typeof import("./gatewayPluginPrometheus").GatewayPluginPrometheus = null as any;
utilities.lazyLoad(exports, ["GatewayPluginPrometheus"], () => require("./gatewayPluginPrometheus"));

export { GatewayPluginProxyCacheArgs, GatewayPluginProxyCacheState } from "./gatewayPluginProxyCache";
export type GatewayPluginProxyCache = import("./gatewayPluginProxyCache").GatewayPluginProxyCache;
export const GatewayPluginProxyCache: typeof import("./gatewayPluginProxyCache").GatewayPluginProxyCache = null as any;
utilities.lazyLoad(exports, ["GatewayPluginProxyCache"], () => require("./gatewayPluginProxyCache"));

export { GatewayPluginRateLimitingArgs, GatewayPluginRateLimitingState } from "./gatewayPluginRateLimiting";
export type GatewayPluginRateLimiting = import("./gatewayPluginRateLimiting").GatewayPluginRateLimiting;
export const GatewayPluginRateLimiting: typeof import("./gatewayPluginRateLimiting").GatewayPluginRateLimiting = null as any;
utilities.lazyLoad(exports, ["GatewayPluginRateLimiting"], () => require("./gatewayPluginRateLimiting"));

export { GatewayPluginRateLimitingAdvancedArgs, GatewayPluginRateLimitingAdvancedState } from "./gatewayPluginRateLimitingAdvanced";
export type GatewayPluginRateLimitingAdvanced = import("./gatewayPluginRateLimitingAdvanced").GatewayPluginRateLimitingAdvanced;
export const GatewayPluginRateLimitingAdvanced: typeof import("./gatewayPluginRateLimitingAdvanced").GatewayPluginRateLimitingAdvanced = null as any;
utilities.lazyLoad(exports, ["GatewayPluginRateLimitingAdvanced"], () => require("./gatewayPluginRateLimitingAdvanced"));

export { GatewayPluginRequestTerminationArgs, GatewayPluginRequestTerminationState } from "./gatewayPluginRequestTermination";
export type GatewayPluginRequestTermination = import("./gatewayPluginRequestTermination").GatewayPluginRequestTermination;
export const GatewayPluginRequestTermination: typeof import("./gatewayPluginRequestTermination").GatewayPluginRequestTermination = null as any;
utilities.lazyLoad(exports, ["GatewayPluginRequestTermination"], () => require("./gatewayPluginRequestTermination"));

export { GatewayPluginRequestTransformerArgs, GatewayPluginRequestTransformerState } from "./gatewayPluginRequestTransformer";
export type GatewayPluginRequestTransformer = import("./gatewayPluginRequestTransformer").GatewayPluginRequestTransformer;
export const GatewayPluginRequestTransformer: typeof import("./gatewayPluginRequestTransformer").GatewayPluginRequestTransformer = null as any;
utilities.lazyLoad(exports, ["GatewayPluginRequestTransformer"], () => require("./gatewayPluginRequestTransformer"));

export { GatewayPluginRequestTransformerAdvancedArgs, GatewayPluginRequestTransformerAdvancedState } from "./gatewayPluginRequestTransformerAdvanced";
export type GatewayPluginRequestTransformerAdvanced = import("./gatewayPluginRequestTransformerAdvanced").GatewayPluginRequestTransformerAdvanced;
export const GatewayPluginRequestTransformerAdvanced: typeof import("./gatewayPluginRequestTransformerAdvanced").GatewayPluginRequestTransformerAdvanced = null as any;
utilities.lazyLoad(exports, ["GatewayPluginRequestTransformerAdvanced"], () => require("./gatewayPluginRequestTransformerAdvanced"));

export { GatewayPluginResponseTransformerArgs, GatewayPluginResponseTransformerState } from "./gatewayPluginResponseTransformer";
export type GatewayPluginResponseTransformer = import("./gatewayPluginResponseTransformer").GatewayPluginResponseTransformer;
export const GatewayPluginResponseTransformer: typeof import("./gatewayPluginResponseTransformer").GatewayPluginResponseTransformer = null as any;
utilities.lazyLoad(exports, ["GatewayPluginResponseTransformer"], () => require("./gatewayPluginResponseTransformer"));

export { GatewayPluginResponseTransformerAdvancedArgs, GatewayPluginResponseTransformerAdvancedState } from "./gatewayPluginResponseTransformerAdvanced";
export type GatewayPluginResponseTransformerAdvanced = import("./gatewayPluginResponseTransformerAdvanced").GatewayPluginResponseTransformerAdvanced;
export const GatewayPluginResponseTransformerAdvanced: typeof import("./gatewayPluginResponseTransformerAdvanced").GatewayPluginResponseTransformerAdvanced = null as any;
utilities.lazyLoad(exports, ["GatewayPluginResponseTransformerAdvanced"], () => require("./gatewayPluginResponseTransformerAdvanced"));

export { GatewayPluginSamlArgs, GatewayPluginSamlState } from "./gatewayPluginSaml";
export type GatewayPluginSaml = import("./gatewayPluginSaml").GatewayPluginSaml;
export const GatewayPluginSaml: typeof import("./gatewayPluginSaml").GatewayPluginSaml = null as any;
utilities.lazyLoad(exports, ["GatewayPluginSaml"], () => require("./gatewayPluginSaml"));

export { GatewayPluginStatsdArgs, GatewayPluginStatsdState } from "./gatewayPluginStatsd";
export type GatewayPluginStatsd = import("./gatewayPluginStatsd").GatewayPluginStatsd;
export const GatewayPluginStatsd: typeof import("./gatewayPluginStatsd").GatewayPluginStatsd = null as any;
utilities.lazyLoad(exports, ["GatewayPluginStatsd"], () => require("./gatewayPluginStatsd"));

export { GatewayRouteArgs, GatewayRouteState } from "./gatewayRoute";
export type GatewayRoute = import("./gatewayRoute").GatewayRoute;
export const GatewayRoute: typeof import("./gatewayRoute").GatewayRoute = null as any;
utilities.lazyLoad(exports, ["GatewayRoute"], () => require("./gatewayRoute"));

export { GatewayServiceArgs, GatewayServiceState } from "./gatewayService";
export type GatewayService = import("./gatewayService").GatewayService;
export const GatewayService: typeof import("./gatewayService").GatewayService = null as any;
utilities.lazyLoad(exports, ["GatewayService"], () => require("./gatewayService"));

export { GatewaySniArgs, GatewaySniState } from "./gatewaySni";
export type GatewaySni = import("./gatewaySni").GatewaySni;
export const GatewaySni: typeof import("./gatewaySni").GatewaySni = null as any;
utilities.lazyLoad(exports, ["GatewaySni"], () => require("./gatewaySni"));

export { GatewayTargetArgs, GatewayTargetState } from "./gatewayTarget";
export type GatewayTarget = import("./gatewayTarget").GatewayTarget;
export const GatewayTarget: typeof import("./gatewayTarget").GatewayTarget = null as any;
utilities.lazyLoad(exports, ["GatewayTarget"], () => require("./gatewayTarget"));

export { GatewayUpstreamArgs, GatewayUpstreamState } from "./gatewayUpstream";
export type GatewayUpstream = import("./gatewayUpstream").GatewayUpstream;
export const GatewayUpstream: typeof import("./gatewayUpstream").GatewayUpstream = null as any;
utilities.lazyLoad(exports, ["GatewayUpstream"], () => require("./gatewayUpstream"));

export { GatewayVaultArgs, GatewayVaultState } from "./gatewayVault";
export type GatewayVault = import("./gatewayVault").GatewayVault;
export const GatewayVault: typeof import("./gatewayVault").GatewayVault = null as any;
utilities.lazyLoad(exports, ["GatewayVault"], () => require("./gatewayVault"));

export { GetApiProductArgs, GetApiProductResult, GetApiProductOutputArgs } from "./getApiProduct";
export const getApiProduct: typeof import("./getApiProduct").getApiProduct = null as any;
export const getApiProductOutput: typeof import("./getApiProduct").getApiProductOutput = null as any;
utilities.lazyLoad(exports, ["getApiProduct","getApiProductOutput"], () => require("./getApiProduct"));

export { GetApiProductDocumentArgs, GetApiProductDocumentResult, GetApiProductDocumentOutputArgs } from "./getApiProductDocument";
export const getApiProductDocument: typeof import("./getApiProductDocument").getApiProductDocument = null as any;
export const getApiProductDocumentOutput: typeof import("./getApiProductDocument").getApiProductDocumentOutput = null as any;
utilities.lazyLoad(exports, ["getApiProductDocument","getApiProductDocumentOutput"], () => require("./getApiProductDocument"));

export { GetApiProductSpecificationArgs, GetApiProductSpecificationResult, GetApiProductSpecificationOutputArgs } from "./getApiProductSpecification";
export const getApiProductSpecification: typeof import("./getApiProductSpecification").getApiProductSpecification = null as any;
export const getApiProductSpecificationOutput: typeof import("./getApiProductSpecification").getApiProductSpecificationOutput = null as any;
utilities.lazyLoad(exports, ["getApiProductSpecification","getApiProductSpecificationOutput"], () => require("./getApiProductSpecification"));

export { GetApiProductVersionArgs, GetApiProductVersionResult, GetApiProductVersionOutputArgs } from "./getApiProductVersion";
export const getApiProductVersion: typeof import("./getApiProductVersion").getApiProductVersion = null as any;
export const getApiProductVersionOutput: typeof import("./getApiProductVersion").getApiProductVersionOutput = null as any;
utilities.lazyLoad(exports, ["getApiProductVersion","getApiProductVersionOutput"], () => require("./getApiProductVersion"));

export { GetApplicationAuthStrategyResult } from "./getApplicationAuthStrategy";
export const getApplicationAuthStrategy: typeof import("./getApplicationAuthStrategy").getApplicationAuthStrategy = null as any;
export const getApplicationAuthStrategyOutput: typeof import("./getApplicationAuthStrategy").getApplicationAuthStrategyOutput = null as any;
utilities.lazyLoad(exports, ["getApplicationAuthStrategy","getApplicationAuthStrategyOutput"], () => require("./getApplicationAuthStrategy"));

export { GetCloudGatewayConfigurationResult } from "./getCloudGatewayConfiguration";
export const getCloudGatewayConfiguration: typeof import("./getCloudGatewayConfiguration").getCloudGatewayConfiguration = null as any;
export const getCloudGatewayConfigurationOutput: typeof import("./getCloudGatewayConfiguration").getCloudGatewayConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getCloudGatewayConfiguration","getCloudGatewayConfigurationOutput"], () => require("./getCloudGatewayConfiguration"));

export { GetCloudGatewayCustomDomainResult } from "./getCloudGatewayCustomDomain";
export const getCloudGatewayCustomDomain: typeof import("./getCloudGatewayCustomDomain").getCloudGatewayCustomDomain = null as any;
export const getCloudGatewayCustomDomainOutput: typeof import("./getCloudGatewayCustomDomain").getCloudGatewayCustomDomainOutput = null as any;
utilities.lazyLoad(exports, ["getCloudGatewayCustomDomain","getCloudGatewayCustomDomainOutput"], () => require("./getCloudGatewayCustomDomain"));

export { GetCloudGatewayNetworkResult } from "./getCloudGatewayNetwork";
export const getCloudGatewayNetwork: typeof import("./getCloudGatewayNetwork").getCloudGatewayNetwork = null as any;
export const getCloudGatewayNetworkOutput: typeof import("./getCloudGatewayNetwork").getCloudGatewayNetworkOutput = null as any;
utilities.lazyLoad(exports, ["getCloudGatewayNetwork","getCloudGatewayNetworkOutput"], () => require("./getCloudGatewayNetwork"));

export { GetCloudGatewayProviderAccountListArgs, GetCloudGatewayProviderAccountListResult, GetCloudGatewayProviderAccountListOutputArgs } from "./getCloudGatewayProviderAccountList";
export const getCloudGatewayProviderAccountList: typeof import("./getCloudGatewayProviderAccountList").getCloudGatewayProviderAccountList = null as any;
export const getCloudGatewayProviderAccountListOutput: typeof import("./getCloudGatewayProviderAccountList").getCloudGatewayProviderAccountListOutput = null as any;
utilities.lazyLoad(exports, ["getCloudGatewayProviderAccountList","getCloudGatewayProviderAccountListOutput"], () => require("./getCloudGatewayProviderAccountList"));

export { GetCloudGatewayTransitGatewayArgs, GetCloudGatewayTransitGatewayResult, GetCloudGatewayTransitGatewayOutputArgs } from "./getCloudGatewayTransitGateway";
export const getCloudGatewayTransitGateway: typeof import("./getCloudGatewayTransitGateway").getCloudGatewayTransitGateway = null as any;
export const getCloudGatewayTransitGatewayOutput: typeof import("./getCloudGatewayTransitGateway").getCloudGatewayTransitGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getCloudGatewayTransitGateway","getCloudGatewayTransitGatewayOutput"], () => require("./getCloudGatewayTransitGateway"));

export { GetGatewayAclArgs, GetGatewayAclResult, GetGatewayAclOutputArgs } from "./getGatewayAcl";
export const getGatewayAcl: typeof import("./getGatewayAcl").getGatewayAcl = null as any;
export const getGatewayAclOutput: typeof import("./getGatewayAcl").getGatewayAclOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayAcl","getGatewayAclOutput"], () => require("./getGatewayAcl"));

export { GetGatewayBasicAuthArgs, GetGatewayBasicAuthResult, GetGatewayBasicAuthOutputArgs } from "./getGatewayBasicAuth";
export const getGatewayBasicAuth: typeof import("./getGatewayBasicAuth").getGatewayBasicAuth = null as any;
export const getGatewayBasicAuthOutput: typeof import("./getGatewayBasicAuth").getGatewayBasicAuthOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayBasicAuth","getGatewayBasicAuthOutput"], () => require("./getGatewayBasicAuth"));

export { GetGatewayCaCertificateArgs, GetGatewayCaCertificateResult, GetGatewayCaCertificateOutputArgs } from "./getGatewayCaCertificate";
export const getGatewayCaCertificate: typeof import("./getGatewayCaCertificate").getGatewayCaCertificate = null as any;
export const getGatewayCaCertificateOutput: typeof import("./getGatewayCaCertificate").getGatewayCaCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayCaCertificate","getGatewayCaCertificateOutput"], () => require("./getGatewayCaCertificate"));

export { GetGatewayCertificateArgs, GetGatewayCertificateResult, GetGatewayCertificateOutputArgs } from "./getGatewayCertificate";
export const getGatewayCertificate: typeof import("./getGatewayCertificate").getGatewayCertificate = null as any;
export const getGatewayCertificateOutput: typeof import("./getGatewayCertificate").getGatewayCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayCertificate","getGatewayCertificateOutput"], () => require("./getGatewayCertificate"));

export { GetGatewayConsumerArgs, GetGatewayConsumerResult, GetGatewayConsumerOutputArgs } from "./getGatewayConsumer";
export const getGatewayConsumer: typeof import("./getGatewayConsumer").getGatewayConsumer = null as any;
export const getGatewayConsumerOutput: typeof import("./getGatewayConsumer").getGatewayConsumerOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayConsumer","getGatewayConsumerOutput"], () => require("./getGatewayConsumer"));

export { GetGatewayConsumerGroupArgs, GetGatewayConsumerGroupResult, GetGatewayConsumerGroupOutputArgs } from "./getGatewayConsumerGroup";
export const getGatewayConsumerGroup: typeof import("./getGatewayConsumerGroup").getGatewayConsumerGroup = null as any;
export const getGatewayConsumerGroupOutput: typeof import("./getGatewayConsumerGroup").getGatewayConsumerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayConsumerGroup","getGatewayConsumerGroupOutput"], () => require("./getGatewayConsumerGroup"));

export { GetGatewayControlPlaneArgs, GetGatewayControlPlaneResult, GetGatewayControlPlaneOutputArgs } from "./getGatewayControlPlane";
export const getGatewayControlPlane: typeof import("./getGatewayControlPlane").getGatewayControlPlane = null as any;
export const getGatewayControlPlaneOutput: typeof import("./getGatewayControlPlane").getGatewayControlPlaneOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayControlPlane","getGatewayControlPlaneOutput"], () => require("./getGatewayControlPlane"));

export { GetGatewayCustomPluginSchemaArgs, GetGatewayCustomPluginSchemaResult, GetGatewayCustomPluginSchemaOutputArgs } from "./getGatewayCustomPluginSchema";
export const getGatewayCustomPluginSchema: typeof import("./getGatewayCustomPluginSchema").getGatewayCustomPluginSchema = null as any;
export const getGatewayCustomPluginSchemaOutput: typeof import("./getGatewayCustomPluginSchema").getGatewayCustomPluginSchemaOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayCustomPluginSchema","getGatewayCustomPluginSchemaOutput"], () => require("./getGatewayCustomPluginSchema"));

export { GetGatewayDataPlaneClientCertificateArgs, GetGatewayDataPlaneClientCertificateResult, GetGatewayDataPlaneClientCertificateOutputArgs } from "./getGatewayDataPlaneClientCertificate";
export const getGatewayDataPlaneClientCertificate: typeof import("./getGatewayDataPlaneClientCertificate").getGatewayDataPlaneClientCertificate = null as any;
export const getGatewayDataPlaneClientCertificateOutput: typeof import("./getGatewayDataPlaneClientCertificate").getGatewayDataPlaneClientCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayDataPlaneClientCertificate","getGatewayDataPlaneClientCertificateOutput"], () => require("./getGatewayDataPlaneClientCertificate"));

export { GetGatewayHmacAuthArgs, GetGatewayHmacAuthResult, GetGatewayHmacAuthOutputArgs } from "./getGatewayHmacAuth";
export const getGatewayHmacAuth: typeof import("./getGatewayHmacAuth").getGatewayHmacAuth = null as any;
export const getGatewayHmacAuthOutput: typeof import("./getGatewayHmacAuth").getGatewayHmacAuthOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayHmacAuth","getGatewayHmacAuthOutput"], () => require("./getGatewayHmacAuth"));

export { GetGatewayJwtArgs, GetGatewayJwtResult, GetGatewayJwtOutputArgs } from "./getGatewayJwt";
export const getGatewayJwt: typeof import("./getGatewayJwt").getGatewayJwt = null as any;
export const getGatewayJwtOutput: typeof import("./getGatewayJwt").getGatewayJwtOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayJwt","getGatewayJwtOutput"], () => require("./getGatewayJwt"));

export { GetGatewayKeyArgs, GetGatewayKeyResult, GetGatewayKeyOutputArgs } from "./getGatewayKey";
export const getGatewayKey: typeof import("./getGatewayKey").getGatewayKey = null as any;
export const getGatewayKeyOutput: typeof import("./getGatewayKey").getGatewayKeyOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayKey","getGatewayKeyOutput"], () => require("./getGatewayKey"));

export { GetGatewayKeyAuthArgs, GetGatewayKeyAuthResult, GetGatewayKeyAuthOutputArgs } from "./getGatewayKeyAuth";
export const getGatewayKeyAuth: typeof import("./getGatewayKeyAuth").getGatewayKeyAuth = null as any;
export const getGatewayKeyAuthOutput: typeof import("./getGatewayKeyAuth").getGatewayKeyAuthOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayKeyAuth","getGatewayKeyAuthOutput"], () => require("./getGatewayKeyAuth"));

export { GetGatewayKeySetArgs, GetGatewayKeySetResult, GetGatewayKeySetOutputArgs } from "./getGatewayKeySet";
export const getGatewayKeySet: typeof import("./getGatewayKeySet").getGatewayKeySet = null as any;
export const getGatewayKeySetOutput: typeof import("./getGatewayKeySet").getGatewayKeySetOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayKeySet","getGatewayKeySetOutput"], () => require("./getGatewayKeySet"));

export { GetGatewayPluginAclArgs, GetGatewayPluginAclResult, GetGatewayPluginAclOutputArgs } from "./getGatewayPluginAcl";
export const getGatewayPluginAcl: typeof import("./getGatewayPluginAcl").getGatewayPluginAcl = null as any;
export const getGatewayPluginAclOutput: typeof import("./getGatewayPluginAcl").getGatewayPluginAclOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAcl","getGatewayPluginAclOutput"], () => require("./getGatewayPluginAcl"));

export { GetGatewayPluginAiPromptDecoratorArgs, GetGatewayPluginAiPromptDecoratorResult, GetGatewayPluginAiPromptDecoratorOutputArgs } from "./getGatewayPluginAiPromptDecorator";
export const getGatewayPluginAiPromptDecorator: typeof import("./getGatewayPluginAiPromptDecorator").getGatewayPluginAiPromptDecorator = null as any;
export const getGatewayPluginAiPromptDecoratorOutput: typeof import("./getGatewayPluginAiPromptDecorator").getGatewayPluginAiPromptDecoratorOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAiPromptDecorator","getGatewayPluginAiPromptDecoratorOutput"], () => require("./getGatewayPluginAiPromptDecorator"));

export { GetGatewayPluginAiPromptGuardArgs, GetGatewayPluginAiPromptGuardResult, GetGatewayPluginAiPromptGuardOutputArgs } from "./getGatewayPluginAiPromptGuard";
export const getGatewayPluginAiPromptGuard: typeof import("./getGatewayPluginAiPromptGuard").getGatewayPluginAiPromptGuard = null as any;
export const getGatewayPluginAiPromptGuardOutput: typeof import("./getGatewayPluginAiPromptGuard").getGatewayPluginAiPromptGuardOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAiPromptGuard","getGatewayPluginAiPromptGuardOutput"], () => require("./getGatewayPluginAiPromptGuard"));

export { GetGatewayPluginAiPromptTemplateArgs, GetGatewayPluginAiPromptTemplateResult, GetGatewayPluginAiPromptTemplateOutputArgs } from "./getGatewayPluginAiPromptTemplate";
export const getGatewayPluginAiPromptTemplate: typeof import("./getGatewayPluginAiPromptTemplate").getGatewayPluginAiPromptTemplate = null as any;
export const getGatewayPluginAiPromptTemplateOutput: typeof import("./getGatewayPluginAiPromptTemplate").getGatewayPluginAiPromptTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAiPromptTemplate","getGatewayPluginAiPromptTemplateOutput"], () => require("./getGatewayPluginAiPromptTemplate"));

export { GetGatewayPluginAiProxyArgs, GetGatewayPluginAiProxyResult, GetGatewayPluginAiProxyOutputArgs } from "./getGatewayPluginAiProxy";
export const getGatewayPluginAiProxy: typeof import("./getGatewayPluginAiProxy").getGatewayPluginAiProxy = null as any;
export const getGatewayPluginAiProxyOutput: typeof import("./getGatewayPluginAiProxy").getGatewayPluginAiProxyOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAiProxy","getGatewayPluginAiProxyOutput"], () => require("./getGatewayPluginAiProxy"));

export { GetGatewayPluginAwsLambdaArgs, GetGatewayPluginAwsLambdaResult, GetGatewayPluginAwsLambdaOutputArgs } from "./getGatewayPluginAwsLambda";
export const getGatewayPluginAwsLambda: typeof import("./getGatewayPluginAwsLambda").getGatewayPluginAwsLambda = null as any;
export const getGatewayPluginAwsLambdaOutput: typeof import("./getGatewayPluginAwsLambda").getGatewayPluginAwsLambdaOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginAwsLambda","getGatewayPluginAwsLambdaOutput"], () => require("./getGatewayPluginAwsLambda"));

export { GetGatewayPluginBasicAuthArgs, GetGatewayPluginBasicAuthResult, GetGatewayPluginBasicAuthOutputArgs } from "./getGatewayPluginBasicAuth";
export const getGatewayPluginBasicAuth: typeof import("./getGatewayPluginBasicAuth").getGatewayPluginBasicAuth = null as any;
export const getGatewayPluginBasicAuthOutput: typeof import("./getGatewayPluginBasicAuth").getGatewayPluginBasicAuthOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginBasicAuth","getGatewayPluginBasicAuthOutput"], () => require("./getGatewayPluginBasicAuth"));

export { GetGatewayPluginCorrelationIdArgs, GetGatewayPluginCorrelationIdResult, GetGatewayPluginCorrelationIdOutputArgs } from "./getGatewayPluginCorrelationId";
export const getGatewayPluginCorrelationId: typeof import("./getGatewayPluginCorrelationId").getGatewayPluginCorrelationId = null as any;
export const getGatewayPluginCorrelationIdOutput: typeof import("./getGatewayPluginCorrelationId").getGatewayPluginCorrelationIdOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginCorrelationId","getGatewayPluginCorrelationIdOutput"], () => require("./getGatewayPluginCorrelationId"));

export { GetGatewayPluginCorsArgs, GetGatewayPluginCorsResult, GetGatewayPluginCorsOutputArgs } from "./getGatewayPluginCors";
export const getGatewayPluginCors: typeof import("./getGatewayPluginCors").getGatewayPluginCors = null as any;
export const getGatewayPluginCorsOutput: typeof import("./getGatewayPluginCors").getGatewayPluginCorsOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginCors","getGatewayPluginCorsOutput"], () => require("./getGatewayPluginCors"));

export { GetGatewayPluginExitTransformerArgs, GetGatewayPluginExitTransformerResult, GetGatewayPluginExitTransformerOutputArgs } from "./getGatewayPluginExitTransformer";
export const getGatewayPluginExitTransformer: typeof import("./getGatewayPluginExitTransformer").getGatewayPluginExitTransformer = null as any;
export const getGatewayPluginExitTransformerOutput: typeof import("./getGatewayPluginExitTransformer").getGatewayPluginExitTransformerOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginExitTransformer","getGatewayPluginExitTransformerOutput"], () => require("./getGatewayPluginExitTransformer"));

export { GetGatewayPluginFileLogArgs, GetGatewayPluginFileLogResult, GetGatewayPluginFileLogOutputArgs } from "./getGatewayPluginFileLog";
export const getGatewayPluginFileLog: typeof import("./getGatewayPluginFileLog").getGatewayPluginFileLog = null as any;
export const getGatewayPluginFileLogOutput: typeof import("./getGatewayPluginFileLog").getGatewayPluginFileLogOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginFileLog","getGatewayPluginFileLogOutput"], () => require("./getGatewayPluginFileLog"));

export { GetGatewayPluginIpRestrictionArgs, GetGatewayPluginIpRestrictionResult, GetGatewayPluginIpRestrictionOutputArgs } from "./getGatewayPluginIpRestriction";
export const getGatewayPluginIpRestriction: typeof import("./getGatewayPluginIpRestriction").getGatewayPluginIpRestriction = null as any;
export const getGatewayPluginIpRestrictionOutput: typeof import("./getGatewayPluginIpRestriction").getGatewayPluginIpRestrictionOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginIpRestriction","getGatewayPluginIpRestrictionOutput"], () => require("./getGatewayPluginIpRestriction"));

export { GetGatewayPluginJqArgs, GetGatewayPluginJqResult, GetGatewayPluginJqOutputArgs } from "./getGatewayPluginJq";
export const getGatewayPluginJq: typeof import("./getGatewayPluginJq").getGatewayPluginJq = null as any;
export const getGatewayPluginJqOutput: typeof import("./getGatewayPluginJq").getGatewayPluginJqOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginJq","getGatewayPluginJqOutput"], () => require("./getGatewayPluginJq"));

export { GetGatewayPluginJwtArgs, GetGatewayPluginJwtResult, GetGatewayPluginJwtOutputArgs } from "./getGatewayPluginJwt";
export const getGatewayPluginJwt: typeof import("./getGatewayPluginJwt").getGatewayPluginJwt = null as any;
export const getGatewayPluginJwtOutput: typeof import("./getGatewayPluginJwt").getGatewayPluginJwtOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginJwt","getGatewayPluginJwtOutput"], () => require("./getGatewayPluginJwt"));

export { GetGatewayPluginJwtSignerArgs, GetGatewayPluginJwtSignerResult, GetGatewayPluginJwtSignerOutputArgs } from "./getGatewayPluginJwtSigner";
export const getGatewayPluginJwtSigner: typeof import("./getGatewayPluginJwtSigner").getGatewayPluginJwtSigner = null as any;
export const getGatewayPluginJwtSignerOutput: typeof import("./getGatewayPluginJwtSigner").getGatewayPluginJwtSignerOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginJwtSigner","getGatewayPluginJwtSignerOutput"], () => require("./getGatewayPluginJwtSigner"));

export { GetGatewayPluginKeyAuthArgs, GetGatewayPluginKeyAuthResult, GetGatewayPluginKeyAuthOutputArgs } from "./getGatewayPluginKeyAuth";
export const getGatewayPluginKeyAuth: typeof import("./getGatewayPluginKeyAuth").getGatewayPluginKeyAuth = null as any;
export const getGatewayPluginKeyAuthOutput: typeof import("./getGatewayPluginKeyAuth").getGatewayPluginKeyAuthOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginKeyAuth","getGatewayPluginKeyAuthOutput"], () => require("./getGatewayPluginKeyAuth"));

export { GetGatewayPluginOauth2Args, GetGatewayPluginOauth2Result, GetGatewayPluginOauth2OutputArgs } from "./getGatewayPluginOauth2";
export const getGatewayPluginOauth2: typeof import("./getGatewayPluginOauth2").getGatewayPluginOauth2 = null as any;
export const getGatewayPluginOauth2Output: typeof import("./getGatewayPluginOauth2").getGatewayPluginOauth2Output = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginOauth2","getGatewayPluginOauth2Output"], () => require("./getGatewayPluginOauth2"));

export { GetGatewayPluginOpenidConnectArgs, GetGatewayPluginOpenidConnectResult, GetGatewayPluginOpenidConnectOutputArgs } from "./getGatewayPluginOpenidConnect";
export const getGatewayPluginOpenidConnect: typeof import("./getGatewayPluginOpenidConnect").getGatewayPluginOpenidConnect = null as any;
export const getGatewayPluginOpenidConnectOutput: typeof import("./getGatewayPluginOpenidConnect").getGatewayPluginOpenidConnectOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginOpenidConnect","getGatewayPluginOpenidConnectOutput"], () => require("./getGatewayPluginOpenidConnect"));

export { GetGatewayPluginOpentelemetryArgs, GetGatewayPluginOpentelemetryResult, GetGatewayPluginOpentelemetryOutputArgs } from "./getGatewayPluginOpentelemetry";
export const getGatewayPluginOpentelemetry: typeof import("./getGatewayPluginOpentelemetry").getGatewayPluginOpentelemetry = null as any;
export const getGatewayPluginOpentelemetryOutput: typeof import("./getGatewayPluginOpentelemetry").getGatewayPluginOpentelemetryOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginOpentelemetry","getGatewayPluginOpentelemetryOutput"], () => require("./getGatewayPluginOpentelemetry"));

export { GetGatewayPluginPostFunctionArgs, GetGatewayPluginPostFunctionResult, GetGatewayPluginPostFunctionOutputArgs } from "./getGatewayPluginPostFunction";
export const getGatewayPluginPostFunction: typeof import("./getGatewayPluginPostFunction").getGatewayPluginPostFunction = null as any;
export const getGatewayPluginPostFunctionOutput: typeof import("./getGatewayPluginPostFunction").getGatewayPluginPostFunctionOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginPostFunction","getGatewayPluginPostFunctionOutput"], () => require("./getGatewayPluginPostFunction"));

export { GetGatewayPluginPreFunctionArgs, GetGatewayPluginPreFunctionResult, GetGatewayPluginPreFunctionOutputArgs } from "./getGatewayPluginPreFunction";
export const getGatewayPluginPreFunction: typeof import("./getGatewayPluginPreFunction").getGatewayPluginPreFunction = null as any;
export const getGatewayPluginPreFunctionOutput: typeof import("./getGatewayPluginPreFunction").getGatewayPluginPreFunctionOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginPreFunction","getGatewayPluginPreFunctionOutput"], () => require("./getGatewayPluginPreFunction"));

export { GetGatewayPluginPrometheusArgs, GetGatewayPluginPrometheusResult, GetGatewayPluginPrometheusOutputArgs } from "./getGatewayPluginPrometheus";
export const getGatewayPluginPrometheus: typeof import("./getGatewayPluginPrometheus").getGatewayPluginPrometheus = null as any;
export const getGatewayPluginPrometheusOutput: typeof import("./getGatewayPluginPrometheus").getGatewayPluginPrometheusOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginPrometheus","getGatewayPluginPrometheusOutput"], () => require("./getGatewayPluginPrometheus"));

export { GetGatewayPluginProxyCacheArgs, GetGatewayPluginProxyCacheResult, GetGatewayPluginProxyCacheOutputArgs } from "./getGatewayPluginProxyCache";
export const getGatewayPluginProxyCache: typeof import("./getGatewayPluginProxyCache").getGatewayPluginProxyCache = null as any;
export const getGatewayPluginProxyCacheOutput: typeof import("./getGatewayPluginProxyCache").getGatewayPluginProxyCacheOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginProxyCache","getGatewayPluginProxyCacheOutput"], () => require("./getGatewayPluginProxyCache"));

export { GetGatewayPluginRateLimitingArgs, GetGatewayPluginRateLimitingResult, GetGatewayPluginRateLimitingOutputArgs } from "./getGatewayPluginRateLimiting";
export const getGatewayPluginRateLimiting: typeof import("./getGatewayPluginRateLimiting").getGatewayPluginRateLimiting = null as any;
export const getGatewayPluginRateLimitingOutput: typeof import("./getGatewayPluginRateLimiting").getGatewayPluginRateLimitingOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginRateLimiting","getGatewayPluginRateLimitingOutput"], () => require("./getGatewayPluginRateLimiting"));

export { GetGatewayPluginRateLimitingAdvancedArgs, GetGatewayPluginRateLimitingAdvancedResult, GetGatewayPluginRateLimitingAdvancedOutputArgs } from "./getGatewayPluginRateLimitingAdvanced";
export const getGatewayPluginRateLimitingAdvanced: typeof import("./getGatewayPluginRateLimitingAdvanced").getGatewayPluginRateLimitingAdvanced = null as any;
export const getGatewayPluginRateLimitingAdvancedOutput: typeof import("./getGatewayPluginRateLimitingAdvanced").getGatewayPluginRateLimitingAdvancedOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginRateLimitingAdvanced","getGatewayPluginRateLimitingAdvancedOutput"], () => require("./getGatewayPluginRateLimitingAdvanced"));

export { GetGatewayPluginRequestTerminationArgs, GetGatewayPluginRequestTerminationResult, GetGatewayPluginRequestTerminationOutputArgs } from "./getGatewayPluginRequestTermination";
export const getGatewayPluginRequestTermination: typeof import("./getGatewayPluginRequestTermination").getGatewayPluginRequestTermination = null as any;
export const getGatewayPluginRequestTerminationOutput: typeof import("./getGatewayPluginRequestTermination").getGatewayPluginRequestTerminationOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginRequestTermination","getGatewayPluginRequestTerminationOutput"], () => require("./getGatewayPluginRequestTermination"));

export { GetGatewayPluginRequestTransformerArgs, GetGatewayPluginRequestTransformerResult, GetGatewayPluginRequestTransformerOutputArgs } from "./getGatewayPluginRequestTransformer";
export const getGatewayPluginRequestTransformer: typeof import("./getGatewayPluginRequestTransformer").getGatewayPluginRequestTransformer = null as any;
export const getGatewayPluginRequestTransformerOutput: typeof import("./getGatewayPluginRequestTransformer").getGatewayPluginRequestTransformerOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginRequestTransformer","getGatewayPluginRequestTransformerOutput"], () => require("./getGatewayPluginRequestTransformer"));

export { GetGatewayPluginRequestTransformerAdvancedArgs, GetGatewayPluginRequestTransformerAdvancedResult, GetGatewayPluginRequestTransformerAdvancedOutputArgs } from "./getGatewayPluginRequestTransformerAdvanced";
export const getGatewayPluginRequestTransformerAdvanced: typeof import("./getGatewayPluginRequestTransformerAdvanced").getGatewayPluginRequestTransformerAdvanced = null as any;
export const getGatewayPluginRequestTransformerAdvancedOutput: typeof import("./getGatewayPluginRequestTransformerAdvanced").getGatewayPluginRequestTransformerAdvancedOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginRequestTransformerAdvanced","getGatewayPluginRequestTransformerAdvancedOutput"], () => require("./getGatewayPluginRequestTransformerAdvanced"));

export { GetGatewayPluginResponseTransformerArgs, GetGatewayPluginResponseTransformerResult, GetGatewayPluginResponseTransformerOutputArgs } from "./getGatewayPluginResponseTransformer";
export const getGatewayPluginResponseTransformer: typeof import("./getGatewayPluginResponseTransformer").getGatewayPluginResponseTransformer = null as any;
export const getGatewayPluginResponseTransformerOutput: typeof import("./getGatewayPluginResponseTransformer").getGatewayPluginResponseTransformerOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginResponseTransformer","getGatewayPluginResponseTransformerOutput"], () => require("./getGatewayPluginResponseTransformer"));

export { GetGatewayPluginResponseTransformerAdvancedArgs, GetGatewayPluginResponseTransformerAdvancedResult, GetGatewayPluginResponseTransformerAdvancedOutputArgs } from "./getGatewayPluginResponseTransformerAdvanced";
export const getGatewayPluginResponseTransformerAdvanced: typeof import("./getGatewayPluginResponseTransformerAdvanced").getGatewayPluginResponseTransformerAdvanced = null as any;
export const getGatewayPluginResponseTransformerAdvancedOutput: typeof import("./getGatewayPluginResponseTransformerAdvanced").getGatewayPluginResponseTransformerAdvancedOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginResponseTransformerAdvanced","getGatewayPluginResponseTransformerAdvancedOutput"], () => require("./getGatewayPluginResponseTransformerAdvanced"));

export { GetGatewayPluginSamlArgs, GetGatewayPluginSamlResult, GetGatewayPluginSamlOutputArgs } from "./getGatewayPluginSaml";
export const getGatewayPluginSaml: typeof import("./getGatewayPluginSaml").getGatewayPluginSaml = null as any;
export const getGatewayPluginSamlOutput: typeof import("./getGatewayPluginSaml").getGatewayPluginSamlOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginSaml","getGatewayPluginSamlOutput"], () => require("./getGatewayPluginSaml"));

export { GetGatewayPluginStatsdArgs, GetGatewayPluginStatsdResult, GetGatewayPluginStatsdOutputArgs } from "./getGatewayPluginStatsd";
export const getGatewayPluginStatsd: typeof import("./getGatewayPluginStatsd").getGatewayPluginStatsd = null as any;
export const getGatewayPluginStatsdOutput: typeof import("./getGatewayPluginStatsd").getGatewayPluginStatsdOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayPluginStatsd","getGatewayPluginStatsdOutput"], () => require("./getGatewayPluginStatsd"));

export { GetGatewayRouteArgs, GetGatewayRouteResult, GetGatewayRouteOutputArgs } from "./getGatewayRoute";
export const getGatewayRoute: typeof import("./getGatewayRoute").getGatewayRoute = null as any;
export const getGatewayRouteOutput: typeof import("./getGatewayRoute").getGatewayRouteOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayRoute","getGatewayRouteOutput"], () => require("./getGatewayRoute"));

export { GetGatewayServiceArgs, GetGatewayServiceResult, GetGatewayServiceOutputArgs } from "./getGatewayService";
export const getGatewayService: typeof import("./getGatewayService").getGatewayService = null as any;
export const getGatewayServiceOutput: typeof import("./getGatewayService").getGatewayServiceOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayService","getGatewayServiceOutput"], () => require("./getGatewayService"));

export { GetGatewaySniArgs, GetGatewaySniResult, GetGatewaySniOutputArgs } from "./getGatewaySni";
export const getGatewaySni: typeof import("./getGatewaySni").getGatewaySni = null as any;
export const getGatewaySniOutput: typeof import("./getGatewaySni").getGatewaySniOutput = null as any;
utilities.lazyLoad(exports, ["getGatewaySni","getGatewaySniOutput"], () => require("./getGatewaySni"));

export { GetGatewayTargetArgs, GetGatewayTargetResult, GetGatewayTargetOutputArgs } from "./getGatewayTarget";
export const getGatewayTarget: typeof import("./getGatewayTarget").getGatewayTarget = null as any;
export const getGatewayTargetOutput: typeof import("./getGatewayTarget").getGatewayTargetOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayTarget","getGatewayTargetOutput"], () => require("./getGatewayTarget"));

export { GetGatewayUpstreamArgs, GetGatewayUpstreamResult, GetGatewayUpstreamOutputArgs } from "./getGatewayUpstream";
export const getGatewayUpstream: typeof import("./getGatewayUpstream").getGatewayUpstream = null as any;
export const getGatewayUpstreamOutput: typeof import("./getGatewayUpstream").getGatewayUpstreamOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayUpstream","getGatewayUpstreamOutput"], () => require("./getGatewayUpstream"));

export { GetGatewayVaultArgs, GetGatewayVaultResult, GetGatewayVaultOutputArgs } from "./getGatewayVault";
export const getGatewayVault: typeof import("./getGatewayVault").getGatewayVault = null as any;
export const getGatewayVaultOutput: typeof import("./getGatewayVault").getGatewayVaultOutput = null as any;
utilities.lazyLoad(exports, ["getGatewayVault","getGatewayVaultOutput"], () => require("./getGatewayVault"));

export { GetMeshControlPlaneResult } from "./getMeshControlPlane";
export const getMeshControlPlane: typeof import("./getMeshControlPlane").getMeshControlPlane = null as any;
export const getMeshControlPlaneOutput: typeof import("./getMeshControlPlane").getMeshControlPlaneOutput = null as any;
utilities.lazyLoad(exports, ["getMeshControlPlane","getMeshControlPlaneOutput"], () => require("./getMeshControlPlane"));

export { GetPortalResult } from "./getPortal";
export const getPortal: typeof import("./getPortal").getPortal = null as any;
export const getPortalOutput: typeof import("./getPortal").getPortalOutput = null as any;
utilities.lazyLoad(exports, ["getPortal","getPortalOutput"], () => require("./getPortal"));

export { GetPortalAppearanceArgs, GetPortalAppearanceResult, GetPortalAppearanceOutputArgs } from "./getPortalAppearance";
export const getPortalAppearance: typeof import("./getPortalAppearance").getPortalAppearance = null as any;
export const getPortalAppearanceOutput: typeof import("./getPortalAppearance").getPortalAppearanceOutput = null as any;
utilities.lazyLoad(exports, ["getPortalAppearance","getPortalAppearanceOutput"], () => require("./getPortalAppearance"));

export { GetPortalAuthArgs, GetPortalAuthResult, GetPortalAuthOutputArgs } from "./getPortalAuth";
export const getPortalAuth: typeof import("./getPortalAuth").getPortalAuth = null as any;
export const getPortalAuthOutput: typeof import("./getPortalAuth").getPortalAuthOutput = null as any;
utilities.lazyLoad(exports, ["getPortalAuth","getPortalAuthOutput"], () => require("./getPortalAuth"));

export { GetPortalListArgs, GetPortalListResult, GetPortalListOutputArgs } from "./getPortalList";
export const getPortalList: typeof import("./getPortalList").getPortalList = null as any;
export const getPortalListOutput: typeof import("./getPortalList").getPortalListOutput = null as any;
utilities.lazyLoad(exports, ["getPortalList","getPortalListOutput"], () => require("./getPortalList"));

export { GetPortalProductVersionArgs, GetPortalProductVersionResult, GetPortalProductVersionOutputArgs } from "./getPortalProductVersion";
export const getPortalProductVersion: typeof import("./getPortalProductVersion").getPortalProductVersion = null as any;
export const getPortalProductVersionOutput: typeof import("./getPortalProductVersion").getPortalProductVersionOutput = null as any;
utilities.lazyLoad(exports, ["getPortalProductVersion","getPortalProductVersionOutput"], () => require("./getPortalProductVersion"));

export { GetServerlessCloudGatewayResult } from "./getServerlessCloudGateway";
export const getServerlessCloudGateway: typeof import("./getServerlessCloudGateway").getServerlessCloudGateway = null as any;
export const getServerlessCloudGatewayOutput: typeof import("./getServerlessCloudGateway").getServerlessCloudGatewayOutput = null as any;
utilities.lazyLoad(exports, ["getServerlessCloudGateway","getServerlessCloudGatewayOutput"], () => require("./getServerlessCloudGateway"));

export { GetSystemAccountResult } from "./getSystemAccount";
export const getSystemAccount: typeof import("./getSystemAccount").getSystemAccount = null as any;
export const getSystemAccountOutput: typeof import("./getSystemAccount").getSystemAccountOutput = null as any;
utilities.lazyLoad(exports, ["getSystemAccount","getSystemAccountOutput"], () => require("./getSystemAccount"));

export { GetSystemAccountAccessTokenArgs, GetSystemAccountAccessTokenResult, GetSystemAccountAccessTokenOutputArgs } from "./getSystemAccountAccessToken";
export const getSystemAccountAccessToken: typeof import("./getSystemAccountAccessToken").getSystemAccountAccessToken = null as any;
export const getSystemAccountAccessTokenOutput: typeof import("./getSystemAccountAccessToken").getSystemAccountAccessTokenOutput = null as any;
utilities.lazyLoad(exports, ["getSystemAccountAccessToken","getSystemAccountAccessTokenOutput"], () => require("./getSystemAccountAccessToken"));

export { GetTeamResult } from "./getTeam";
export const getTeam: typeof import("./getTeam").getTeam = null as any;
export const getTeamOutput: typeof import("./getTeam").getTeamOutput = null as any;
utilities.lazyLoad(exports, ["getTeam","getTeamOutput"], () => require("./getTeam"));

export { MeshControlPlaneArgs, MeshControlPlaneState } from "./meshControlPlane";
export type MeshControlPlane = import("./meshControlPlane").MeshControlPlane;
export const MeshControlPlane: typeof import("./meshControlPlane").MeshControlPlane = null as any;
utilities.lazyLoad(exports, ["MeshControlPlane"], () => require("./meshControlPlane"));

export { PortalArgs, PortalState } from "./portal";
export type Portal = import("./portal").Portal;
export const Portal: typeof import("./portal").Portal = null as any;
utilities.lazyLoad(exports, ["Portal"], () => require("./portal"));

export { PortalAppearanceArgs, PortalAppearanceState } from "./portalAppearance";
export type PortalAppearance = import("./portalAppearance").PortalAppearance;
export const PortalAppearance: typeof import("./portalAppearance").PortalAppearance = null as any;
utilities.lazyLoad(exports, ["PortalAppearance"], () => require("./portalAppearance"));

export { PortalAuthArgs, PortalAuthState } from "./portalAuth";
export type PortalAuth = import("./portalAuth").PortalAuth;
export const PortalAuth: typeof import("./portalAuth").PortalAuth = null as any;
utilities.lazyLoad(exports, ["PortalAuth"], () => require("./portalAuth"));

export { PortalProductVersionArgs, PortalProductVersionState } from "./portalProductVersion";
export type PortalProductVersion = import("./portalProductVersion").PortalProductVersion;
export const PortalProductVersion: typeof import("./portalProductVersion").PortalProductVersion = null as any;
utilities.lazyLoad(exports, ["PortalProductVersion"], () => require("./portalProductVersion"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { ServerlessCloudGatewayArgs, ServerlessCloudGatewayState } from "./serverlessCloudGateway";
export type ServerlessCloudGateway = import("./serverlessCloudGateway").ServerlessCloudGateway;
export const ServerlessCloudGateway: typeof import("./serverlessCloudGateway").ServerlessCloudGateway = null as any;
utilities.lazyLoad(exports, ["ServerlessCloudGateway"], () => require("./serverlessCloudGateway"));

export { SystemAccountArgs, SystemAccountState } from "./systemAccount";
export type SystemAccount = import("./systemAccount").SystemAccount;
export const SystemAccount: typeof import("./systemAccount").SystemAccount = null as any;
utilities.lazyLoad(exports, ["SystemAccount"], () => require("./systemAccount"));

export { SystemAccountAccessTokenArgs, SystemAccountAccessTokenState } from "./systemAccountAccessToken";
export type SystemAccountAccessToken = import("./systemAccountAccessToken").SystemAccountAccessToken;
export const SystemAccountAccessToken: typeof import("./systemAccountAccessToken").SystemAccountAccessToken = null as any;
utilities.lazyLoad(exports, ["SystemAccountAccessToken"], () => require("./systemAccountAccessToken"));

export { SystemAccountRoleArgs, SystemAccountRoleState } from "./systemAccountRole";
export type SystemAccountRole = import("./systemAccountRole").SystemAccountRole;
export const SystemAccountRole: typeof import("./systemAccountRole").SystemAccountRole = null as any;
utilities.lazyLoad(exports, ["SystemAccountRole"], () => require("./systemAccountRole"));

export { SystemAccountTeamArgs, SystemAccountTeamState } from "./systemAccountTeam";
export type SystemAccountTeam = import("./systemAccountTeam").SystemAccountTeam;
export const SystemAccountTeam: typeof import("./systemAccountTeam").SystemAccountTeam = null as any;
utilities.lazyLoad(exports, ["SystemAccountTeam"], () => require("./systemAccountTeam"));

export { TeamArgs, TeamState } from "./team";
export type Team = import("./team").Team;
export const Team: typeof import("./team").Team = null as any;
utilities.lazyLoad(exports, ["Team"], () => require("./team"));

export { TeamRoleArgs, TeamRoleState } from "./teamRole";
export type TeamRole = import("./teamRole").TeamRole;
export const TeamRole: typeof import("./teamRole").TeamRole = null as any;
utilities.lazyLoad(exports, ["TeamRole"], () => require("./teamRole"));

export { TeamUserArgs, TeamUserState } from "./teamUser";
export type TeamUser = import("./teamUser").TeamUser;
export const TeamUser: typeof import("./teamUser").TeamUser = null as any;
utilities.lazyLoad(exports, ["TeamUser"], () => require("./teamUser"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "konnect:index/apiProduct:ApiProduct":
                return new ApiProduct(name, <any>undefined, { urn })
            case "konnect:index/apiProductDocument:ApiProductDocument":
                return new ApiProductDocument(name, <any>undefined, { urn })
            case "konnect:index/apiProductSpecification:ApiProductSpecification":
                return new ApiProductSpecification(name, <any>undefined, { urn })
            case "konnect:index/apiProductVersion:ApiProductVersion":
                return new ApiProductVersion(name, <any>undefined, { urn })
            case "konnect:index/applicationAuthStrategy:ApplicationAuthStrategy":
                return new ApplicationAuthStrategy(name, <any>undefined, { urn })
            case "konnect:index/cloudGatewayConfiguration:CloudGatewayConfiguration":
                return new CloudGatewayConfiguration(name, <any>undefined, { urn })
            case "konnect:index/cloudGatewayCustomDomain:CloudGatewayCustomDomain":
                return new CloudGatewayCustomDomain(name, <any>undefined, { urn })
            case "konnect:index/cloudGatewayNetwork:CloudGatewayNetwork":
                return new CloudGatewayNetwork(name, <any>undefined, { urn })
            case "konnect:index/cloudGatewayTransitGateway:CloudGatewayTransitGateway":
                return new CloudGatewayTransitGateway(name, <any>undefined, { urn })
            case "konnect:index/gatewayAcl:GatewayAcl":
                return new GatewayAcl(name, <any>undefined, { urn })
            case "konnect:index/gatewayBasicAuth:GatewayBasicAuth":
                return new GatewayBasicAuth(name, <any>undefined, { urn })
            case "konnect:index/gatewayCaCertificate:GatewayCaCertificate":
                return new GatewayCaCertificate(name, <any>undefined, { urn })
            case "konnect:index/gatewayCertificate:GatewayCertificate":
                return new GatewayCertificate(name, <any>undefined, { urn })
            case "konnect:index/gatewayConsumer:GatewayConsumer":
                return new GatewayConsumer(name, <any>undefined, { urn })
            case "konnect:index/gatewayConsumerGroup:GatewayConsumerGroup":
                return new GatewayConsumerGroup(name, <any>undefined, { urn })
            case "konnect:index/gatewayConsumerGroupMember:GatewayConsumerGroupMember":
                return new GatewayConsumerGroupMember(name, <any>undefined, { urn })
            case "konnect:index/gatewayControlPlane:GatewayControlPlane":
                return new GatewayControlPlane(name, <any>undefined, { urn })
            case "konnect:index/gatewayControlPlaneMembership:GatewayControlPlaneMembership":
                return new GatewayControlPlaneMembership(name, <any>undefined, { urn })
            case "konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema":
                return new GatewayCustomPluginSchema(name, <any>undefined, { urn })
            case "konnect:index/gatewayDataPlaneClientCertificate:GatewayDataPlaneClientCertificate":
                return new GatewayDataPlaneClientCertificate(name, <any>undefined, { urn })
            case "konnect:index/gatewayHmacAuth:GatewayHmacAuth":
                return new GatewayHmacAuth(name, <any>undefined, { urn })
            case "konnect:index/gatewayJwt:GatewayJwt":
                return new GatewayJwt(name, <any>undefined, { urn })
            case "konnect:index/gatewayKey:GatewayKey":
                return new GatewayKey(name, <any>undefined, { urn })
            case "konnect:index/gatewayKeyAuth:GatewayKeyAuth":
                return new GatewayKeyAuth(name, <any>undefined, { urn })
            case "konnect:index/gatewayKeySet:GatewayKeySet":
                return new GatewayKeySet(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAcl:GatewayPluginAcl":
                return new GatewayPluginAcl(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAiPromptDecorator:GatewayPluginAiPromptDecorator":
                return new GatewayPluginAiPromptDecorator(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAiPromptGuard:GatewayPluginAiPromptGuard":
                return new GatewayPluginAiPromptGuard(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAiPromptTemplate:GatewayPluginAiPromptTemplate":
                return new GatewayPluginAiPromptTemplate(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAiProxy:GatewayPluginAiProxy":
                return new GatewayPluginAiProxy(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginAwsLambda:GatewayPluginAwsLambda":
                return new GatewayPluginAwsLambda(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginBasicAuth:GatewayPluginBasicAuth":
                return new GatewayPluginBasicAuth(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginCorrelationId:GatewayPluginCorrelationId":
                return new GatewayPluginCorrelationId(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginCors:GatewayPluginCors":
                return new GatewayPluginCors(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginExitTransformer:GatewayPluginExitTransformer":
                return new GatewayPluginExitTransformer(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginFileLog:GatewayPluginFileLog":
                return new GatewayPluginFileLog(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginIpRestriction:GatewayPluginIpRestriction":
                return new GatewayPluginIpRestriction(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginJq:GatewayPluginJq":
                return new GatewayPluginJq(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginJwt:GatewayPluginJwt":
                return new GatewayPluginJwt(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginJwtSigner:GatewayPluginJwtSigner":
                return new GatewayPluginJwtSigner(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginKeyAuth:GatewayPluginKeyAuth":
                return new GatewayPluginKeyAuth(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginOauth2:GatewayPluginOauth2":
                return new GatewayPluginOauth2(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginOpenidConnect:GatewayPluginOpenidConnect":
                return new GatewayPluginOpenidConnect(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginOpentelemetry:GatewayPluginOpentelemetry":
                return new GatewayPluginOpentelemetry(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginPostFunction:GatewayPluginPostFunction":
                return new GatewayPluginPostFunction(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginPreFunction:GatewayPluginPreFunction":
                return new GatewayPluginPreFunction(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginPrometheus:GatewayPluginPrometheus":
                return new GatewayPluginPrometheus(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginProxyCache:GatewayPluginProxyCache":
                return new GatewayPluginProxyCache(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginRateLimiting:GatewayPluginRateLimiting":
                return new GatewayPluginRateLimiting(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginRateLimitingAdvanced:GatewayPluginRateLimitingAdvanced":
                return new GatewayPluginRateLimitingAdvanced(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginRequestTermination:GatewayPluginRequestTermination":
                return new GatewayPluginRequestTermination(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginRequestTransformer:GatewayPluginRequestTransformer":
                return new GatewayPluginRequestTransformer(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginRequestTransformerAdvanced:GatewayPluginRequestTransformerAdvanced":
                return new GatewayPluginRequestTransformerAdvanced(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginResponseTransformer:GatewayPluginResponseTransformer":
                return new GatewayPluginResponseTransformer(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginResponseTransformerAdvanced:GatewayPluginResponseTransformerAdvanced":
                return new GatewayPluginResponseTransformerAdvanced(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginSaml:GatewayPluginSaml":
                return new GatewayPluginSaml(name, <any>undefined, { urn })
            case "konnect:index/gatewayPluginStatsd:GatewayPluginStatsd":
                return new GatewayPluginStatsd(name, <any>undefined, { urn })
            case "konnect:index/gatewayRoute:GatewayRoute":
                return new GatewayRoute(name, <any>undefined, { urn })
            case "konnect:index/gatewayService:GatewayService":
                return new GatewayService(name, <any>undefined, { urn })
            case "konnect:index/gatewaySni:GatewaySni":
                return new GatewaySni(name, <any>undefined, { urn })
            case "konnect:index/gatewayTarget:GatewayTarget":
                return new GatewayTarget(name, <any>undefined, { urn })
            case "konnect:index/gatewayUpstream:GatewayUpstream":
                return new GatewayUpstream(name, <any>undefined, { urn })
            case "konnect:index/gatewayVault:GatewayVault":
                return new GatewayVault(name, <any>undefined, { urn })
            case "konnect:index/meshControlPlane:MeshControlPlane":
                return new MeshControlPlane(name, <any>undefined, { urn })
            case "konnect:index/portal:Portal":
                return new Portal(name, <any>undefined, { urn })
            case "konnect:index/portalAppearance:PortalAppearance":
                return new PortalAppearance(name, <any>undefined, { urn })
            case "konnect:index/portalAuth:PortalAuth":
                return new PortalAuth(name, <any>undefined, { urn })
            case "konnect:index/portalProductVersion:PortalProductVersion":
                return new PortalProductVersion(name, <any>undefined, { urn })
            case "konnect:index/serverlessCloudGateway:ServerlessCloudGateway":
                return new ServerlessCloudGateway(name, <any>undefined, { urn })
            case "konnect:index/systemAccount:SystemAccount":
                return new SystemAccount(name, <any>undefined, { urn })
            case "konnect:index/systemAccountAccessToken:SystemAccountAccessToken":
                return new SystemAccountAccessToken(name, <any>undefined, { urn })
            case "konnect:index/systemAccountRole:SystemAccountRole":
                return new SystemAccountRole(name, <any>undefined, { urn })
            case "konnect:index/systemAccountTeam:SystemAccountTeam":
                return new SystemAccountTeam(name, <any>undefined, { urn })
            case "konnect:index/team:Team":
                return new Team(name, <any>undefined, { urn })
            case "konnect:index/teamRole:TeamRole":
                return new TeamRole(name, <any>undefined, { urn })
            case "konnect:index/teamUser:TeamUser":
                return new TeamUser(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("konnect", "index/apiProduct", _module)
pulumi.runtime.registerResourceModule("konnect", "index/apiProductDocument", _module)
pulumi.runtime.registerResourceModule("konnect", "index/apiProductSpecification", _module)
pulumi.runtime.registerResourceModule("konnect", "index/apiProductVersion", _module)
pulumi.runtime.registerResourceModule("konnect", "index/applicationAuthStrategy", _module)
pulumi.runtime.registerResourceModule("konnect", "index/cloudGatewayConfiguration", _module)
pulumi.runtime.registerResourceModule("konnect", "index/cloudGatewayCustomDomain", _module)
pulumi.runtime.registerResourceModule("konnect", "index/cloudGatewayNetwork", _module)
pulumi.runtime.registerResourceModule("konnect", "index/cloudGatewayTransitGateway", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayAcl", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayBasicAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayCaCertificate", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayCertificate", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayConsumer", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayConsumerGroup", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayConsumerGroupMember", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayControlPlane", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayControlPlaneMembership", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayCustomPluginSchema", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayDataPlaneClientCertificate", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayHmacAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayJwt", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayKey", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayKeyAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayKeySet", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAcl", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAiPromptDecorator", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAiPromptGuard", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAiPromptTemplate", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAiProxy", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginAwsLambda", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginBasicAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginCorrelationId", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginCors", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginExitTransformer", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginFileLog", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginIpRestriction", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginJq", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginJwt", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginJwtSigner", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginKeyAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginOauth2", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginOpenidConnect", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginOpentelemetry", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginPostFunction", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginPreFunction", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginPrometheus", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginProxyCache", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginRateLimiting", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginRateLimitingAdvanced", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginRequestTermination", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginRequestTransformer", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginRequestTransformerAdvanced", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginResponseTransformer", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginResponseTransformerAdvanced", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginSaml", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayPluginStatsd", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayRoute", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayService", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewaySni", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayTarget", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayUpstream", _module)
pulumi.runtime.registerResourceModule("konnect", "index/gatewayVault", _module)
pulumi.runtime.registerResourceModule("konnect", "index/meshControlPlane", _module)
pulumi.runtime.registerResourceModule("konnect", "index/portal", _module)
pulumi.runtime.registerResourceModule("konnect", "index/portalAppearance", _module)
pulumi.runtime.registerResourceModule("konnect", "index/portalAuth", _module)
pulumi.runtime.registerResourceModule("konnect", "index/portalProductVersion", _module)
pulumi.runtime.registerResourceModule("konnect", "index/serverlessCloudGateway", _module)
pulumi.runtime.registerResourceModule("konnect", "index/systemAccount", _module)
pulumi.runtime.registerResourceModule("konnect", "index/systemAccountAccessToken", _module)
pulumi.runtime.registerResourceModule("konnect", "index/systemAccountRole", _module)
pulumi.runtime.registerResourceModule("konnect", "index/systemAccountTeam", _module)
pulumi.runtime.registerResourceModule("konnect", "index/team", _module)
pulumi.runtime.registerResourceModule("konnect", "index/teamRole", _module)
pulumi.runtime.registerResourceModule("konnect", "index/teamUser", _module)
pulumi.runtime.registerResourcePackage("konnect", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:konnect") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
