// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ServerlessCloudGateway Resource
 */
export class ServerlessCloudGateway extends pulumi.CustomResource {
    /**
     * Get an existing ServerlessCloudGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerlessCloudGatewayState, opts?: pulumi.CustomResourceOptions): ServerlessCloudGateway {
        return new ServerlessCloudGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'konnect:index/serverlessCloudGateway:ServerlessCloudGateway';

    /**
     * Returns true if the given object is an instance of ServerlessCloudGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerlessCloudGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerlessCloudGateway.__pulumiType;
    }

    /**
     * The cluster certificate (public key). Requires replacement if changed.
     */
    public readonly clusterCert!: pulumi.Output<string>;
    /**
     * The cluster certificate key (private key). Requires replacement if changed.
     */
    public readonly clusterCertKey!: pulumi.Output<string>;
    /**
     * Requires replacement if changed.
     */
    public readonly controlPlane!: pulumi.Output<outputs.ServerlessCloudGatewayControlPlane>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Endpoint for the serverless cloud gateway.
     */
    public /*out*/ readonly gatewayEndpoint!: pulumi.Output<string>;
    /**
     * Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ServerlessCloudGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerlessCloudGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerlessCloudGatewayArgs | ServerlessCloudGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerlessCloudGatewayState | undefined;
            resourceInputs["clusterCert"] = state ? state.clusterCert : undefined;
            resourceInputs["clusterCertKey"] = state ? state.clusterCertKey : undefined;
            resourceInputs["controlPlane"] = state ? state.controlPlane : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["gatewayEndpoint"] = state ? state.gatewayEndpoint : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ServerlessCloudGatewayArgs | undefined;
            if ((!args || args.clusterCert === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterCert'");
            }
            if ((!args || args.clusterCertKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterCertKey'");
            }
            if ((!args || args.controlPlane === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controlPlane'");
            }
            resourceInputs["clusterCert"] = args ? args.clusterCert : undefined;
            resourceInputs["clusterCertKey"] = args ? args.clusterCertKey : undefined;
            resourceInputs["controlPlane"] = args ? args.controlPlane : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["gatewayEndpoint"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerlessCloudGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerlessCloudGateway resources.
 */
export interface ServerlessCloudGatewayState {
    /**
     * The cluster certificate (public key). Requires replacement if changed.
     */
    clusterCert?: pulumi.Input<string>;
    /**
     * The cluster certificate key (private key). Requires replacement if changed.
     */
    clusterCertKey?: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    controlPlane?: pulumi.Input<inputs.ServerlessCloudGatewayControlPlane>;
    createdAt?: pulumi.Input<string>;
    /**
     * Endpoint for the serverless cloud gateway.
     */
    gatewayEndpoint?: pulumi.Input<string>;
    /**
     * Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerlessCloudGateway resource.
 */
export interface ServerlessCloudGatewayArgs {
    /**
     * The cluster certificate (public key). Requires replacement if changed.
     */
    clusterCert: pulumi.Input<string>;
    /**
     * The cluster certificate key (private key). Requires replacement if changed.
     */
    clusterCertKey: pulumi.Input<string>;
    /**
     * Requires replacement if changed.
     */
    controlPlane: pulumi.Input<inputs.ServerlessCloudGatewayControlPlane>;
    /**
     * Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
