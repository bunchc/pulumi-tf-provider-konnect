# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CloudGatewayNetworkArgs', 'CloudGatewayNetwork']

@pulumi.input_type
class CloudGatewayNetworkArgs:
    def __init__(__self__, *,
                 availability_zones: pulumi.Input[Sequence[pulumi.Input[str]]],
                 cidr_block: pulumi.Input[str],
                 cloud_gateway_provider_account_id: pulumi.Input[str],
                 region: pulumi.Input[str],
                 ddos_protection: Optional[pulumi.Input[bool]] = None,
                 firewall: Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a CloudGatewayNetwork resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] availability_zones: List of availability zones that the network is attached to. Requires replacement if changed.
        :param pulumi.Input[str] cidr_block: CIDR block configuration for the network. Requires replacement if changed.
        :param pulumi.Input[str] cloud_gateway_provider_account_id: Requires replacement if changed.
        :param pulumi.Input[str] region: Region ID for cloud provider region. Requires replacement if changed.
        :param pulumi.Input[bool] ddos_protection: Whether DDOS protection is enabled for the network. Requires replacement if changed.
        :param pulumi.Input['CloudGatewayNetworkFirewallArgs'] firewall: Firewall configuration for a network.
        :param pulumi.Input[str] name: Human-readable name of the network.
        """
        pulumi.set(__self__, "availability_zones", availability_zones)
        pulumi.set(__self__, "cidr_block", cidr_block)
        pulumi.set(__self__, "cloud_gateway_provider_account_id", cloud_gateway_provider_account_id)
        pulumi.set(__self__, "region", region)
        if ddos_protection is not None:
            pulumi.set(__self__, "ddos_protection", ddos_protection)
        if firewall is not None:
            pulumi.set(__self__, "firewall", firewall)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="availabilityZones")
    def availability_zones(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        List of availability zones that the network is attached to. Requires replacement if changed.
        """
        return pulumi.get(self, "availability_zones")

    @availability_zones.setter
    def availability_zones(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "availability_zones", value)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> pulumi.Input[str]:
        """
        CIDR block configuration for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "cidr_block")

    @cidr_block.setter
    def cidr_block(self, value: pulumi.Input[str]):
        pulumi.set(self, "cidr_block", value)

    @property
    @pulumi.getter(name="cloudGatewayProviderAccountId")
    def cloud_gateway_provider_account_id(self) -> pulumi.Input[str]:
        """
        Requires replacement if changed.
        """
        return pulumi.get(self, "cloud_gateway_provider_account_id")

    @cloud_gateway_provider_account_id.setter
    def cloud_gateway_provider_account_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "cloud_gateway_provider_account_id", value)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        """
        Region ID for cloud provider region. Requires replacement if changed.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="ddosProtection")
    def ddos_protection(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether DDOS protection is enabled for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "ddos_protection")

    @ddos_protection.setter
    def ddos_protection(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ddos_protection", value)

    @property
    @pulumi.getter
    def firewall(self) -> Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']]:
        """
        Firewall configuration for a network.
        """
        return pulumi.get(self, "firewall")

    @firewall.setter
    def firewall(self, value: Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']]):
        pulumi.set(self, "firewall", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Human-readable name of the network.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _CloudGatewayNetworkState:
    def __init__(__self__, *,
                 availability_zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 cloud_gateway_provider_account_id: Optional[pulumi.Input[str]] = None,
                 configuration_reference_count: Optional[pulumi.Input[int]] = None,
                 created_at: Optional[pulumi.Input[str]] = None,
                 ddos_protection: Optional[pulumi.Input[bool]] = None,
                 default: Optional[pulumi.Input[bool]] = None,
                 entity_version: Optional[pulumi.Input[int]] = None,
                 firewall: Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 provider_metadata: Optional[pulumi.Input['CloudGatewayNetworkProviderMetadataArgs']] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 transit_gateway_count: Optional[pulumi.Input[int]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CloudGatewayNetwork resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] availability_zones: List of availability zones that the network is attached to. Requires replacement if changed.
        :param pulumi.Input[str] cidr_block: CIDR block configuration for the network. Requires replacement if changed.
        :param pulumi.Input[str] cloud_gateway_provider_account_id: Requires replacement if changed.
        :param pulumi.Input[int] configuration_reference_count: The number of configurations that reference this network.
        :param pulumi.Input[str] created_at: An RFC-3339 timestamp representation of network creation date.
        :param pulumi.Input[bool] ddos_protection: Whether DDOS protection is enabled for the network. Requires replacement if changed.
        :param pulumi.Input[bool] default: Whether the network is a default network or not. Default networks are Networks that are created
               automatically by Konnect when an organization is linked to a provider account.
        :param pulumi.Input[int] entity_version: Monotonically-increasing version count of the network, to indicate the order of updates to the network.
        :param pulumi.Input['CloudGatewayNetworkFirewallArgs'] firewall: Firewall configuration for a network.
        :param pulumi.Input[str] name: Human-readable name of the network.
        :param pulumi.Input['CloudGatewayNetworkProviderMetadataArgs'] provider_metadata: Metadata describing attributes returned by cloud-provider for the network.
        :param pulumi.Input[str] region: Region ID for cloud provider region. Requires replacement if changed.
        :param pulumi.Input[str] state: State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
        :param pulumi.Input[int] transit_gateway_count: The number of transit gateways attached to this network.
        :param pulumi.Input[str] updated_at: An RFC-3339 timestamp representation of network update date.
        """
        if availability_zones is not None:
            pulumi.set(__self__, "availability_zones", availability_zones)
        if cidr_block is not None:
            pulumi.set(__self__, "cidr_block", cidr_block)
        if cloud_gateway_provider_account_id is not None:
            pulumi.set(__self__, "cloud_gateway_provider_account_id", cloud_gateway_provider_account_id)
        if configuration_reference_count is not None:
            pulumi.set(__self__, "configuration_reference_count", configuration_reference_count)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if ddos_protection is not None:
            pulumi.set(__self__, "ddos_protection", ddos_protection)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if entity_version is not None:
            pulumi.set(__self__, "entity_version", entity_version)
        if firewall is not None:
            pulumi.set(__self__, "firewall", firewall)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if provider_metadata is not None:
            pulumi.set(__self__, "provider_metadata", provider_metadata)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if transit_gateway_count is not None:
            pulumi.set(__self__, "transit_gateway_count", transit_gateway_count)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="availabilityZones")
    def availability_zones(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of availability zones that the network is attached to. Requires replacement if changed.
        """
        return pulumi.get(self, "availability_zones")

    @availability_zones.setter
    def availability_zones(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "availability_zones", value)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> Optional[pulumi.Input[str]]:
        """
        CIDR block configuration for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "cidr_block")

    @cidr_block.setter
    def cidr_block(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cidr_block", value)

    @property
    @pulumi.getter(name="cloudGatewayProviderAccountId")
    def cloud_gateway_provider_account_id(self) -> Optional[pulumi.Input[str]]:
        """
        Requires replacement if changed.
        """
        return pulumi.get(self, "cloud_gateway_provider_account_id")

    @cloud_gateway_provider_account_id.setter
    def cloud_gateway_provider_account_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cloud_gateway_provider_account_id", value)

    @property
    @pulumi.getter(name="configurationReferenceCount")
    def configuration_reference_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of configurations that reference this network.
        """
        return pulumi.get(self, "configuration_reference_count")

    @configuration_reference_count.setter
    def configuration_reference_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "configuration_reference_count", value)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[str]]:
        """
        An RFC-3339 timestamp representation of network creation date.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter(name="ddosProtection")
    def ddos_protection(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether DDOS protection is enabled for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "ddos_protection")

    @ddos_protection.setter
    def ddos_protection(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ddos_protection", value)

    @property
    @pulumi.getter
    def default(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the network is a default network or not. Default networks are Networks that are created
        automatically by Konnect when an organization is linked to a provider account.
        """
        return pulumi.get(self, "default")

    @default.setter
    def default(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "default", value)

    @property
    @pulumi.getter(name="entityVersion")
    def entity_version(self) -> Optional[pulumi.Input[int]]:
        """
        Monotonically-increasing version count of the network, to indicate the order of updates to the network.
        """
        return pulumi.get(self, "entity_version")

    @entity_version.setter
    def entity_version(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "entity_version", value)

    @property
    @pulumi.getter
    def firewall(self) -> Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']]:
        """
        Firewall configuration for a network.
        """
        return pulumi.get(self, "firewall")

    @firewall.setter
    def firewall(self, value: Optional[pulumi.Input['CloudGatewayNetworkFirewallArgs']]):
        pulumi.set(self, "firewall", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Human-readable name of the network.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="providerMetadata")
    def provider_metadata(self) -> Optional[pulumi.Input['CloudGatewayNetworkProviderMetadataArgs']]:
        """
        Metadata describing attributes returned by cloud-provider for the network.
        """
        return pulumi.get(self, "provider_metadata")

    @provider_metadata.setter
    def provider_metadata(self, value: Optional[pulumi.Input['CloudGatewayNetworkProviderMetadataArgs']]):
        pulumi.set(self, "provider_metadata", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        Region ID for cloud provider region. Requires replacement if changed.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter(name="transitGatewayCount")
    def transit_gateway_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of transit gateways attached to this network.
        """
        return pulumi.get(self, "transit_gateway_count")

    @transit_gateway_count.setter
    def transit_gateway_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "transit_gateway_count", value)

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[str]]:
        """
        An RFC-3339 timestamp representation of network update date.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_at", value)


class CloudGatewayNetwork(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 cloud_gateway_provider_account_id: Optional[pulumi.Input[str]] = None,
                 ddos_protection: Optional[pulumi.Input[bool]] = None,
                 firewall: Optional[pulumi.Input[pulumi.InputType['CloudGatewayNetworkFirewallArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        CloudGatewayNetwork Resource

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] availability_zones: List of availability zones that the network is attached to. Requires replacement if changed.
        :param pulumi.Input[str] cidr_block: CIDR block configuration for the network. Requires replacement if changed.
        :param pulumi.Input[str] cloud_gateway_provider_account_id: Requires replacement if changed.
        :param pulumi.Input[bool] ddos_protection: Whether DDOS protection is enabled for the network. Requires replacement if changed.
        :param pulumi.Input[pulumi.InputType['CloudGatewayNetworkFirewallArgs']] firewall: Firewall configuration for a network.
        :param pulumi.Input[str] name: Human-readable name of the network.
        :param pulumi.Input[str] region: Region ID for cloud provider region. Requires replacement if changed.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CloudGatewayNetworkArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        CloudGatewayNetwork Resource

        :param str resource_name: The name of the resource.
        :param CloudGatewayNetworkArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CloudGatewayNetworkArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 availability_zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cidr_block: Optional[pulumi.Input[str]] = None,
                 cloud_gateway_provider_account_id: Optional[pulumi.Input[str]] = None,
                 ddos_protection: Optional[pulumi.Input[bool]] = None,
                 firewall: Optional[pulumi.Input[pulumi.InputType['CloudGatewayNetworkFirewallArgs']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CloudGatewayNetworkArgs.__new__(CloudGatewayNetworkArgs)

            if availability_zones is None and not opts.urn:
                raise TypeError("Missing required property 'availability_zones'")
            __props__.__dict__["availability_zones"] = availability_zones
            if cidr_block is None and not opts.urn:
                raise TypeError("Missing required property 'cidr_block'")
            __props__.__dict__["cidr_block"] = cidr_block
            if cloud_gateway_provider_account_id is None and not opts.urn:
                raise TypeError("Missing required property 'cloud_gateway_provider_account_id'")
            __props__.__dict__["cloud_gateway_provider_account_id"] = cloud_gateway_provider_account_id
            __props__.__dict__["ddos_protection"] = ddos_protection
            __props__.__dict__["firewall"] = firewall
            __props__.__dict__["name"] = name
            if region is None and not opts.urn:
                raise TypeError("Missing required property 'region'")
            __props__.__dict__["region"] = region
            __props__.__dict__["configuration_reference_count"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["default"] = None
            __props__.__dict__["entity_version"] = None
            __props__.__dict__["provider_metadata"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["transit_gateway_count"] = None
            __props__.__dict__["updated_at"] = None
        super(CloudGatewayNetwork, __self__).__init__(
            'konnect:index/cloudGatewayNetwork:CloudGatewayNetwork',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            availability_zones: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            cidr_block: Optional[pulumi.Input[str]] = None,
            cloud_gateway_provider_account_id: Optional[pulumi.Input[str]] = None,
            configuration_reference_count: Optional[pulumi.Input[int]] = None,
            created_at: Optional[pulumi.Input[str]] = None,
            ddos_protection: Optional[pulumi.Input[bool]] = None,
            default: Optional[pulumi.Input[bool]] = None,
            entity_version: Optional[pulumi.Input[int]] = None,
            firewall: Optional[pulumi.Input[pulumi.InputType['CloudGatewayNetworkFirewallArgs']]] = None,
            name: Optional[pulumi.Input[str]] = None,
            provider_metadata: Optional[pulumi.Input[pulumi.InputType['CloudGatewayNetworkProviderMetadataArgs']]] = None,
            region: Optional[pulumi.Input[str]] = None,
            state: Optional[pulumi.Input[str]] = None,
            transit_gateway_count: Optional[pulumi.Input[int]] = None,
            updated_at: Optional[pulumi.Input[str]] = None) -> 'CloudGatewayNetwork':
        """
        Get an existing CloudGatewayNetwork resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] availability_zones: List of availability zones that the network is attached to. Requires replacement if changed.
        :param pulumi.Input[str] cidr_block: CIDR block configuration for the network. Requires replacement if changed.
        :param pulumi.Input[str] cloud_gateway_provider_account_id: Requires replacement if changed.
        :param pulumi.Input[int] configuration_reference_count: The number of configurations that reference this network.
        :param pulumi.Input[str] created_at: An RFC-3339 timestamp representation of network creation date.
        :param pulumi.Input[bool] ddos_protection: Whether DDOS protection is enabled for the network. Requires replacement if changed.
        :param pulumi.Input[bool] default: Whether the network is a default network or not. Default networks are Networks that are created
               automatically by Konnect when an organization is linked to a provider account.
        :param pulumi.Input[int] entity_version: Monotonically-increasing version count of the network, to indicate the order of updates to the network.
        :param pulumi.Input[pulumi.InputType['CloudGatewayNetworkFirewallArgs']] firewall: Firewall configuration for a network.
        :param pulumi.Input[str] name: Human-readable name of the network.
        :param pulumi.Input[pulumi.InputType['CloudGatewayNetworkProviderMetadataArgs']] provider_metadata: Metadata describing attributes returned by cloud-provider for the network.
        :param pulumi.Input[str] region: Region ID for cloud provider region. Requires replacement if changed.
        :param pulumi.Input[str] state: State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
        :param pulumi.Input[int] transit_gateway_count: The number of transit gateways attached to this network.
        :param pulumi.Input[str] updated_at: An RFC-3339 timestamp representation of network update date.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CloudGatewayNetworkState.__new__(_CloudGatewayNetworkState)

        __props__.__dict__["availability_zones"] = availability_zones
        __props__.__dict__["cidr_block"] = cidr_block
        __props__.__dict__["cloud_gateway_provider_account_id"] = cloud_gateway_provider_account_id
        __props__.__dict__["configuration_reference_count"] = configuration_reference_count
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["ddos_protection"] = ddos_protection
        __props__.__dict__["default"] = default
        __props__.__dict__["entity_version"] = entity_version
        __props__.__dict__["firewall"] = firewall
        __props__.__dict__["name"] = name
        __props__.__dict__["provider_metadata"] = provider_metadata
        __props__.__dict__["region"] = region
        __props__.__dict__["state"] = state
        __props__.__dict__["transit_gateway_count"] = transit_gateway_count
        __props__.__dict__["updated_at"] = updated_at
        return CloudGatewayNetwork(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="availabilityZones")
    def availability_zones(self) -> pulumi.Output[Sequence[str]]:
        """
        List of availability zones that the network is attached to. Requires replacement if changed.
        """
        return pulumi.get(self, "availability_zones")

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> pulumi.Output[str]:
        """
        CIDR block configuration for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "cidr_block")

    @property
    @pulumi.getter(name="cloudGatewayProviderAccountId")
    def cloud_gateway_provider_account_id(self) -> pulumi.Output[str]:
        """
        Requires replacement if changed.
        """
        return pulumi.get(self, "cloud_gateway_provider_account_id")

    @property
    @pulumi.getter(name="configurationReferenceCount")
    def configuration_reference_count(self) -> pulumi.Output[int]:
        """
        The number of configurations that reference this network.
        """
        return pulumi.get(self, "configuration_reference_count")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[str]:
        """
        An RFC-3339 timestamp representation of network creation date.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="ddosProtection")
    def ddos_protection(self) -> pulumi.Output[bool]:
        """
        Whether DDOS protection is enabled for the network. Requires replacement if changed.
        """
        return pulumi.get(self, "ddos_protection")

    @property
    @pulumi.getter
    def default(self) -> pulumi.Output[bool]:
        """
        Whether the network is a default network or not. Default networks are Networks that are created
        automatically by Konnect when an organization is linked to a provider account.
        """
        return pulumi.get(self, "default")

    @property
    @pulumi.getter(name="entityVersion")
    def entity_version(self) -> pulumi.Output[int]:
        """
        Monotonically-increasing version count of the network, to indicate the order of updates to the network.
        """
        return pulumi.get(self, "entity_version")

    @property
    @pulumi.getter
    def firewall(self) -> pulumi.Output['outputs.CloudGatewayNetworkFirewall']:
        """
        Firewall configuration for a network.
        """
        return pulumi.get(self, "firewall")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Human-readable name of the network.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="providerMetadata")
    def provider_metadata(self) -> pulumi.Output['outputs.CloudGatewayNetworkProviderMetadata']:
        """
        Metadata describing attributes returned by cloud-provider for the network.
        """
        return pulumi.get(self, "provider_metadata")

    @property
    @pulumi.getter
    def region(self) -> pulumi.Output[str]:
        """
        Region ID for cloud provider region. Requires replacement if changed.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        State of the network. must be one of ["created", "initializing", "offline", "ready", "terminating", "terminated"]
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="transitGatewayCount")
    def transit_gateway_count(self) -> pulumi.Output[int]:
        """
        The number of transit gateways attached to this network.
        """
        return pulumi.get(self, "transit_gateway_count")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[str]:
        """
        An RFC-3339 timestamp representation of network update date.
        """
        return pulumi.get(self, "updated_at")

