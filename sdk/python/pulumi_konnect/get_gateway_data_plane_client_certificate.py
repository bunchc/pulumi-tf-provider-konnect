# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetGatewayDataPlaneClientCertificateResult',
    'AwaitableGetGatewayDataPlaneClientCertificateResult',
    'get_gateway_data_plane_client_certificate',
    'get_gateway_data_plane_client_certificate_output',
]

@pulumi.output_type
class GetGatewayDataPlaneClientCertificateResult:
    """
    A collection of values returned by getGatewayDataPlaneClientCertificate.
    """
    def __init__(__self__, cert=None, control_plane_id=None, created_at=None, id=None, updated_at=None):
        if cert and not isinstance(cert, str):
            raise TypeError("Expected argument 'cert' to be a str")
        pulumi.set(__self__, "cert", cert)
        if control_plane_id and not isinstance(control_plane_id, str):
            raise TypeError("Expected argument 'control_plane_id' to be a str")
        pulumi.set(__self__, "control_plane_id", control_plane_id)
        if created_at and not isinstance(created_at, int):
            raise TypeError("Expected argument 'created_at' to be a int")
        pulumi.set(__self__, "created_at", created_at)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if updated_at and not isinstance(updated_at, int):
            raise TypeError("Expected argument 'updated_at' to be a int")
        pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter
    def cert(self) -> str:
        return pulumi.get(self, "cert")

    @property
    @pulumi.getter(name="controlPlaneId")
    def control_plane_id(self) -> str:
        return pulumi.get(self, "control_plane_id")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> int:
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> int:
        return pulumi.get(self, "updated_at")


class AwaitableGetGatewayDataPlaneClientCertificateResult(GetGatewayDataPlaneClientCertificateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGatewayDataPlaneClientCertificateResult(
            cert=self.cert,
            control_plane_id=self.control_plane_id,
            created_at=self.created_at,
            id=self.id,
            updated_at=self.updated_at)


def get_gateway_data_plane_client_certificate(control_plane_id: Optional[str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGatewayDataPlaneClientCertificateResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['controlPlaneId'] = control_plane_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('konnect:index/getGatewayDataPlaneClientCertificate:getGatewayDataPlaneClientCertificate', __args__, opts=opts, typ=GetGatewayDataPlaneClientCertificateResult).value

    return AwaitableGetGatewayDataPlaneClientCertificateResult(
        cert=pulumi.get(__ret__, 'cert'),
        control_plane_id=pulumi.get(__ret__, 'control_plane_id'),
        created_at=pulumi.get(__ret__, 'created_at'),
        id=pulumi.get(__ret__, 'id'),
        updated_at=pulumi.get(__ret__, 'updated_at'))


@_utilities.lift_output_func(get_gateway_data_plane_client_certificate)
def get_gateway_data_plane_client_certificate_output(control_plane_id: Optional[pulumi.Input[str]] = None,
                                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGatewayDataPlaneClientCertificateResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
