// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ServerlessCloudGateway Resource
type ServerlessCloudGateway struct {
	pulumi.CustomResourceState

	// The cluster certificate (public key). Requires replacement if changed.
	ClusterCert pulumi.StringOutput `pulumi:"clusterCert"`
	// The cluster certificate key (private key). Requires replacement if changed.
	ClusterCertKey pulumi.StringOutput `pulumi:"clusterCertKey"`
	// Requires replacement if changed.
	ControlPlane ServerlessCloudGatewayControlPlaneOutput `pulumi:"controlPlane"`
	CreatedAt    pulumi.StringOutput                      `pulumi:"createdAt"`
	// Endpoint for the serverless cloud gateway.
	GatewayEndpoint pulumi.StringOutput `pulumi:"gatewayEndpoint"`
	// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
	Labels    pulumi.StringMapOutput `pulumi:"labels"`
	UpdatedAt pulumi.StringOutput    `pulumi:"updatedAt"`
}

// NewServerlessCloudGateway registers a new resource with the given unique name, arguments, and options.
func NewServerlessCloudGateway(ctx *pulumi.Context,
	name string, args *ServerlessCloudGatewayArgs, opts ...pulumi.ResourceOption) (*ServerlessCloudGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterCert == nil {
		return nil, errors.New("invalid value for required argument 'ClusterCert'")
	}
	if args.ClusterCertKey == nil {
		return nil, errors.New("invalid value for required argument 'ClusterCertKey'")
	}
	if args.ControlPlane == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlane'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessCloudGateway
	err := ctx.RegisterResource("konnect:index/serverlessCloudGateway:ServerlessCloudGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessCloudGateway gets an existing ServerlessCloudGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessCloudGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessCloudGatewayState, opts ...pulumi.ResourceOption) (*ServerlessCloudGateway, error) {
	var resource ServerlessCloudGateway
	err := ctx.ReadResource("konnect:index/serverlessCloudGateway:ServerlessCloudGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessCloudGateway resources.
type serverlessCloudGatewayState struct {
	// The cluster certificate (public key). Requires replacement if changed.
	ClusterCert *string `pulumi:"clusterCert"`
	// The cluster certificate key (private key). Requires replacement if changed.
	ClusterCertKey *string `pulumi:"clusterCertKey"`
	// Requires replacement if changed.
	ControlPlane *ServerlessCloudGatewayControlPlane `pulumi:"controlPlane"`
	CreatedAt    *string                             `pulumi:"createdAt"`
	// Endpoint for the serverless cloud gateway.
	GatewayEndpoint *string `pulumi:"gatewayEndpoint"`
	// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
	Labels    map[string]string `pulumi:"labels"`
	UpdatedAt *string           `pulumi:"updatedAt"`
}

type ServerlessCloudGatewayState struct {
	// The cluster certificate (public key). Requires replacement if changed.
	ClusterCert pulumi.StringPtrInput
	// The cluster certificate key (private key). Requires replacement if changed.
	ClusterCertKey pulumi.StringPtrInput
	// Requires replacement if changed.
	ControlPlane ServerlessCloudGatewayControlPlanePtrInput
	CreatedAt    pulumi.StringPtrInput
	// Endpoint for the serverless cloud gateway.
	GatewayEndpoint pulumi.StringPtrInput
	// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
	Labels    pulumi.StringMapInput
	UpdatedAt pulumi.StringPtrInput
}

func (ServerlessCloudGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessCloudGatewayState)(nil)).Elem()
}

type serverlessCloudGatewayArgs struct {
	// The cluster certificate (public key). Requires replacement if changed.
	ClusterCert string `pulumi:"clusterCert"`
	// The cluster certificate key (private key). Requires replacement if changed.
	ClusterCertKey string `pulumi:"clusterCertKey"`
	// Requires replacement if changed.
	ControlPlane ServerlessCloudGatewayControlPlane `pulumi:"controlPlane"`
	// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
	Labels map[string]string `pulumi:"labels"`
}

// The set of arguments for constructing a ServerlessCloudGateway resource.
type ServerlessCloudGatewayArgs struct {
	// The cluster certificate (public key). Requires replacement if changed.
	ClusterCert pulumi.StringInput
	// The cluster certificate key (private key). Requires replacement if changed.
	ClusterCertKey pulumi.StringInput
	// Requires replacement if changed.
	ControlPlane ServerlessCloudGatewayControlPlaneInput
	// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
	Labels pulumi.StringMapInput
}

func (ServerlessCloudGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessCloudGatewayArgs)(nil)).Elem()
}

type ServerlessCloudGatewayInput interface {
	pulumi.Input

	ToServerlessCloudGatewayOutput() ServerlessCloudGatewayOutput
	ToServerlessCloudGatewayOutputWithContext(ctx context.Context) ServerlessCloudGatewayOutput
}

func (*ServerlessCloudGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCloudGateway)(nil)).Elem()
}

func (i *ServerlessCloudGateway) ToServerlessCloudGatewayOutput() ServerlessCloudGatewayOutput {
	return i.ToServerlessCloudGatewayOutputWithContext(context.Background())
}

func (i *ServerlessCloudGateway) ToServerlessCloudGatewayOutputWithContext(ctx context.Context) ServerlessCloudGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCloudGatewayOutput)
}

// ServerlessCloudGatewayArrayInput is an input type that accepts ServerlessCloudGatewayArray and ServerlessCloudGatewayArrayOutput values.
// You can construct a concrete instance of `ServerlessCloudGatewayArrayInput` via:
//
//	ServerlessCloudGatewayArray{ ServerlessCloudGatewayArgs{...} }
type ServerlessCloudGatewayArrayInput interface {
	pulumi.Input

	ToServerlessCloudGatewayArrayOutput() ServerlessCloudGatewayArrayOutput
	ToServerlessCloudGatewayArrayOutputWithContext(context.Context) ServerlessCloudGatewayArrayOutput
}

type ServerlessCloudGatewayArray []ServerlessCloudGatewayInput

func (ServerlessCloudGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessCloudGateway)(nil)).Elem()
}

func (i ServerlessCloudGatewayArray) ToServerlessCloudGatewayArrayOutput() ServerlessCloudGatewayArrayOutput {
	return i.ToServerlessCloudGatewayArrayOutputWithContext(context.Background())
}

func (i ServerlessCloudGatewayArray) ToServerlessCloudGatewayArrayOutputWithContext(ctx context.Context) ServerlessCloudGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCloudGatewayArrayOutput)
}

// ServerlessCloudGatewayMapInput is an input type that accepts ServerlessCloudGatewayMap and ServerlessCloudGatewayMapOutput values.
// You can construct a concrete instance of `ServerlessCloudGatewayMapInput` via:
//
//	ServerlessCloudGatewayMap{ "key": ServerlessCloudGatewayArgs{...} }
type ServerlessCloudGatewayMapInput interface {
	pulumi.Input

	ToServerlessCloudGatewayMapOutput() ServerlessCloudGatewayMapOutput
	ToServerlessCloudGatewayMapOutputWithContext(context.Context) ServerlessCloudGatewayMapOutput
}

type ServerlessCloudGatewayMap map[string]ServerlessCloudGatewayInput

func (ServerlessCloudGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessCloudGateway)(nil)).Elem()
}

func (i ServerlessCloudGatewayMap) ToServerlessCloudGatewayMapOutput() ServerlessCloudGatewayMapOutput {
	return i.ToServerlessCloudGatewayMapOutputWithContext(context.Background())
}

func (i ServerlessCloudGatewayMap) ToServerlessCloudGatewayMapOutputWithContext(ctx context.Context) ServerlessCloudGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCloudGatewayMapOutput)
}

type ServerlessCloudGatewayOutput struct{ *pulumi.OutputState }

func (ServerlessCloudGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCloudGateway)(nil)).Elem()
}

func (o ServerlessCloudGatewayOutput) ToServerlessCloudGatewayOutput() ServerlessCloudGatewayOutput {
	return o
}

func (o ServerlessCloudGatewayOutput) ToServerlessCloudGatewayOutputWithContext(ctx context.Context) ServerlessCloudGatewayOutput {
	return o
}

// The cluster certificate (public key). Requires replacement if changed.
func (o ServerlessCloudGatewayOutput) ClusterCert() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringOutput { return v.ClusterCert }).(pulumi.StringOutput)
}

// The cluster certificate key (private key). Requires replacement if changed.
func (o ServerlessCloudGatewayOutput) ClusterCertKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringOutput { return v.ClusterCertKey }).(pulumi.StringOutput)
}

// Requires replacement if changed.
func (o ServerlessCloudGatewayOutput) ControlPlane() ServerlessCloudGatewayControlPlaneOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) ServerlessCloudGatewayControlPlaneOutput { return v.ControlPlane }).(ServerlessCloudGatewayControlPlaneOutput)
}

func (o ServerlessCloudGatewayOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Endpoint for the serverless cloud gateway.
func (o ServerlessCloudGatewayOutput) GatewayEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringOutput { return v.GatewayEndpoint }).(pulumi.StringOutput)
}

// Labels to facilitate tagged search on serverless cloud gateways. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'. Requires replacement if changed.
func (o ServerlessCloudGatewayOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ServerlessCloudGatewayOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessCloudGateway) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ServerlessCloudGatewayArrayOutput struct{ *pulumi.OutputState }

func (ServerlessCloudGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessCloudGateway)(nil)).Elem()
}

func (o ServerlessCloudGatewayArrayOutput) ToServerlessCloudGatewayArrayOutput() ServerlessCloudGatewayArrayOutput {
	return o
}

func (o ServerlessCloudGatewayArrayOutput) ToServerlessCloudGatewayArrayOutputWithContext(ctx context.Context) ServerlessCloudGatewayArrayOutput {
	return o
}

func (o ServerlessCloudGatewayArrayOutput) Index(i pulumi.IntInput) ServerlessCloudGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessCloudGateway {
		return vs[0].([]*ServerlessCloudGateway)[vs[1].(int)]
	}).(ServerlessCloudGatewayOutput)
}

type ServerlessCloudGatewayMapOutput struct{ *pulumi.OutputState }

func (ServerlessCloudGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessCloudGateway)(nil)).Elem()
}

func (o ServerlessCloudGatewayMapOutput) ToServerlessCloudGatewayMapOutput() ServerlessCloudGatewayMapOutput {
	return o
}

func (o ServerlessCloudGatewayMapOutput) ToServerlessCloudGatewayMapOutputWithContext(ctx context.Context) ServerlessCloudGatewayMapOutput {
	return o
}

func (o ServerlessCloudGatewayMapOutput) MapIndex(k pulumi.StringInput) ServerlessCloudGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessCloudGateway {
		return vs[0].(map[string]*ServerlessCloudGateway)[vs[1].(string)]
	}).(ServerlessCloudGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCloudGatewayInput)(nil)).Elem(), &ServerlessCloudGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCloudGatewayArrayInput)(nil)).Elem(), ServerlessCloudGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCloudGatewayMapInput)(nil)).Elem(), ServerlessCloudGatewayMap{})
	pulumi.RegisterOutputType(ServerlessCloudGatewayOutput{})
	pulumi.RegisterOutputType(ServerlessCloudGatewayArrayOutput{})
	pulumi.RegisterOutputType(ServerlessCloudGatewayMapOutput{})
}
