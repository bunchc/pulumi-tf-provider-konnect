// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayPluginIPRestriction Resource
type GatewayPluginIpRestriction struct {
	pulumi.CustomResourceState

	Config GatewayPluginIpRestrictionConfigOutput `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginIpRestrictionConsumerOutput      `pulumi:"consumer"`
	ConsumerGroup GatewayPluginIpRestrictionConsumerGroupOutput `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      pulumi.BoolOutput   `pulumi:"enabled"`
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginIpRestrictionRouteOutput `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginIpRestrictionServiceOutput `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayPluginIpRestriction registers a new resource with the given unique name, arguments, and options.
func NewGatewayPluginIpRestriction(ctx *pulumi.Context,
	name string, args *GatewayPluginIpRestrictionArgs, opts ...pulumi.ResourceOption) (*GatewayPluginIpRestriction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayPluginIpRestriction
	err := ctx.RegisterResource("konnect:index/gatewayPluginIpRestriction:GatewayPluginIpRestriction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayPluginIpRestriction gets an existing GatewayPluginIpRestriction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayPluginIpRestriction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayPluginIpRestrictionState, opts ...pulumi.ResourceOption) (*GatewayPluginIpRestriction, error) {
	var resource GatewayPluginIpRestriction
	err := ctx.ReadResource("konnect:index/gatewayPluginIpRestriction:GatewayPluginIpRestriction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayPluginIpRestriction resources.
type gatewayPluginIpRestrictionState struct {
	Config *GatewayPluginIpRestrictionConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginIpRestrictionConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginIpRestrictionConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginIpRestrictionRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginIpRestrictionService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayPluginIpRestrictionState struct {
	Config GatewayPluginIpRestrictionConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginIpRestrictionConsumerPtrInput
	ConsumerGroup GatewayPluginIpRestrictionConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginIpRestrictionRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginIpRestrictionServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayPluginIpRestrictionState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginIpRestrictionState)(nil)).Elem()
}

type gatewayPluginIpRestrictionArgs struct {
	Config *GatewayPluginIpRestrictionConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginIpRestrictionConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginIpRestrictionConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginIpRestrictionRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginIpRestrictionService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayPluginIpRestriction resource.
type GatewayPluginIpRestrictionArgs struct {
	Config GatewayPluginIpRestrictionConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginIpRestrictionConsumerPtrInput
	ConsumerGroup GatewayPluginIpRestrictionConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginIpRestrictionRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginIpRestrictionServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
}

func (GatewayPluginIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginIpRestrictionArgs)(nil)).Elem()
}

type GatewayPluginIpRestrictionInput interface {
	pulumi.Input

	ToGatewayPluginIpRestrictionOutput() GatewayPluginIpRestrictionOutput
	ToGatewayPluginIpRestrictionOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionOutput
}

func (*GatewayPluginIpRestriction) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginIpRestriction)(nil)).Elem()
}

func (i *GatewayPluginIpRestriction) ToGatewayPluginIpRestrictionOutput() GatewayPluginIpRestrictionOutput {
	return i.ToGatewayPluginIpRestrictionOutputWithContext(context.Background())
}

func (i *GatewayPluginIpRestriction) ToGatewayPluginIpRestrictionOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginIpRestrictionOutput)
}

// GatewayPluginIpRestrictionArrayInput is an input type that accepts GatewayPluginIpRestrictionArray and GatewayPluginIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GatewayPluginIpRestrictionArrayInput` via:
//
//	GatewayPluginIpRestrictionArray{ GatewayPluginIpRestrictionArgs{...} }
type GatewayPluginIpRestrictionArrayInput interface {
	pulumi.Input

	ToGatewayPluginIpRestrictionArrayOutput() GatewayPluginIpRestrictionArrayOutput
	ToGatewayPluginIpRestrictionArrayOutputWithContext(context.Context) GatewayPluginIpRestrictionArrayOutput
}

type GatewayPluginIpRestrictionArray []GatewayPluginIpRestrictionInput

func (GatewayPluginIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginIpRestriction)(nil)).Elem()
}

func (i GatewayPluginIpRestrictionArray) ToGatewayPluginIpRestrictionArrayOutput() GatewayPluginIpRestrictionArrayOutput {
	return i.ToGatewayPluginIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GatewayPluginIpRestrictionArray) ToGatewayPluginIpRestrictionArrayOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginIpRestrictionArrayOutput)
}

// GatewayPluginIpRestrictionMapInput is an input type that accepts GatewayPluginIpRestrictionMap and GatewayPluginIpRestrictionMapOutput values.
// You can construct a concrete instance of `GatewayPluginIpRestrictionMapInput` via:
//
//	GatewayPluginIpRestrictionMap{ "key": GatewayPluginIpRestrictionArgs{...} }
type GatewayPluginIpRestrictionMapInput interface {
	pulumi.Input

	ToGatewayPluginIpRestrictionMapOutput() GatewayPluginIpRestrictionMapOutput
	ToGatewayPluginIpRestrictionMapOutputWithContext(context.Context) GatewayPluginIpRestrictionMapOutput
}

type GatewayPluginIpRestrictionMap map[string]GatewayPluginIpRestrictionInput

func (GatewayPluginIpRestrictionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginIpRestriction)(nil)).Elem()
}

func (i GatewayPluginIpRestrictionMap) ToGatewayPluginIpRestrictionMapOutput() GatewayPluginIpRestrictionMapOutput {
	return i.ToGatewayPluginIpRestrictionMapOutputWithContext(context.Background())
}

func (i GatewayPluginIpRestrictionMap) ToGatewayPluginIpRestrictionMapOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginIpRestrictionMapOutput)
}

type GatewayPluginIpRestrictionOutput struct{ *pulumi.OutputState }

func (GatewayPluginIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginIpRestriction)(nil)).Elem()
}

func (o GatewayPluginIpRestrictionOutput) ToGatewayPluginIpRestrictionOutput() GatewayPluginIpRestrictionOutput {
	return o
}

func (o GatewayPluginIpRestrictionOutput) ToGatewayPluginIpRestrictionOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionOutput {
	return o
}

func (o GatewayPluginIpRestrictionOutput) Config() GatewayPluginIpRestrictionConfigOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) GatewayPluginIpRestrictionConfigOutput { return v.Config }).(GatewayPluginIpRestrictionConfigOutput)
}

// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
func (o GatewayPluginIpRestrictionOutput) Consumer() GatewayPluginIpRestrictionConsumerOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) GatewayPluginIpRestrictionConsumerOutput { return v.Consumer }).(GatewayPluginIpRestrictionConsumerOutput)
}

func (o GatewayPluginIpRestrictionOutput) ConsumerGroup() GatewayPluginIpRestrictionConsumerGroupOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) GatewayPluginIpRestrictionConsumerGroupOutput {
		return v.ConsumerGroup
	}).(GatewayPluginIpRestrictionConsumerGroupOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayPluginIpRestrictionOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayPluginIpRestrictionOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Whether the plugin is applied.
func (o GatewayPluginIpRestrictionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GatewayPluginIpRestrictionOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
func (o GatewayPluginIpRestrictionOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
func (o GatewayPluginIpRestrictionOutput) Route() GatewayPluginIpRestrictionRouteOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) GatewayPluginIpRestrictionRouteOutput { return v.Route }).(GatewayPluginIpRestrictionRouteOutput)
}

// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
func (o GatewayPluginIpRestrictionOutput) Service() GatewayPluginIpRestrictionServiceOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) GatewayPluginIpRestrictionServiceOutput { return v.Service }).(GatewayPluginIpRestrictionServiceOutput)
}

// An optional set of strings associated with the Plugin for grouping and filtering.
func (o GatewayPluginIpRestrictionOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayPluginIpRestrictionOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginIpRestriction) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayPluginIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GatewayPluginIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginIpRestriction)(nil)).Elem()
}

func (o GatewayPluginIpRestrictionArrayOutput) ToGatewayPluginIpRestrictionArrayOutput() GatewayPluginIpRestrictionArrayOutput {
	return o
}

func (o GatewayPluginIpRestrictionArrayOutput) ToGatewayPluginIpRestrictionArrayOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionArrayOutput {
	return o
}

func (o GatewayPluginIpRestrictionArrayOutput) Index(i pulumi.IntInput) GatewayPluginIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayPluginIpRestriction {
		return vs[0].([]*GatewayPluginIpRestriction)[vs[1].(int)]
	}).(GatewayPluginIpRestrictionOutput)
}

type GatewayPluginIpRestrictionMapOutput struct{ *pulumi.OutputState }

func (GatewayPluginIpRestrictionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginIpRestriction)(nil)).Elem()
}

func (o GatewayPluginIpRestrictionMapOutput) ToGatewayPluginIpRestrictionMapOutput() GatewayPluginIpRestrictionMapOutput {
	return o
}

func (o GatewayPluginIpRestrictionMapOutput) ToGatewayPluginIpRestrictionMapOutputWithContext(ctx context.Context) GatewayPluginIpRestrictionMapOutput {
	return o
}

func (o GatewayPluginIpRestrictionMapOutput) MapIndex(k pulumi.StringInput) GatewayPluginIpRestrictionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayPluginIpRestriction {
		return vs[0].(map[string]*GatewayPluginIpRestriction)[vs[1].(string)]
	}).(GatewayPluginIpRestrictionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginIpRestrictionInput)(nil)).Elem(), &GatewayPluginIpRestriction{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginIpRestrictionArrayInput)(nil)).Elem(), GatewayPluginIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginIpRestrictionMapInput)(nil)).Elem(), GatewayPluginIpRestrictionMap{})
	pulumi.RegisterOutputType(GatewayPluginIpRestrictionOutput{})
	pulumi.RegisterOutputType(GatewayPluginIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GatewayPluginIpRestrictionMapOutput{})
}
