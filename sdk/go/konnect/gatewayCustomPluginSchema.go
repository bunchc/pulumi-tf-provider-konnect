// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayCustomPluginSchema Resource
type GatewayCustomPluginSchema struct {
	pulumi.CustomResourceState

	// The UUID of your control plane. This variable is available in the Konnect manager
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// An ISO-8604 timestamp representation of custom plugin schema creation date.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema pulumi.StringOutput `pulumi:"luaSchema"`
	// The custom plugin name
	Name pulumi.StringOutput `pulumi:"name"`
	// An ISO-8604 timestamp representation of custom plugin schema update date.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayCustomPluginSchema registers a new resource with the given unique name, arguments, and options.
func NewGatewayCustomPluginSchema(ctx *pulumi.Context,
	name string, args *GatewayCustomPluginSchemaArgs, opts ...pulumi.ResourceOption) (*GatewayCustomPluginSchema, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	if args.LuaSchema == nil {
		return nil, errors.New("invalid value for required argument 'LuaSchema'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayCustomPluginSchema
	err := ctx.RegisterResource("konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayCustomPluginSchema gets an existing GatewayCustomPluginSchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayCustomPluginSchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayCustomPluginSchemaState, opts ...pulumi.ResourceOption) (*GatewayCustomPluginSchema, error) {
	var resource GatewayCustomPluginSchema
	err := ctx.ReadResource("konnect:index/gatewayCustomPluginSchema:GatewayCustomPluginSchema", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayCustomPluginSchema resources.
type gatewayCustomPluginSchemaState struct {
	// The UUID of your control plane. This variable is available in the Konnect manager
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// An ISO-8604 timestamp representation of custom plugin schema creation date.
	CreatedAt *int `pulumi:"createdAt"`
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema *string `pulumi:"luaSchema"`
	// The custom plugin name
	Name *string `pulumi:"name"`
	// An ISO-8604 timestamp representation of custom plugin schema update date.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayCustomPluginSchemaState struct {
	// The UUID of your control plane. This variable is available in the Konnect manager
	ControlPlaneId pulumi.StringPtrInput
	// An ISO-8604 timestamp representation of custom plugin schema creation date.
	CreatedAt pulumi.IntPtrInput
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema pulumi.StringPtrInput
	// The custom plugin name
	Name pulumi.StringPtrInput
	// An ISO-8604 timestamp representation of custom plugin schema update date.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayCustomPluginSchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayCustomPluginSchemaState)(nil)).Elem()
}

type gatewayCustomPluginSchemaArgs struct {
	// The UUID of your control plane. This variable is available in the Konnect manager
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema string `pulumi:"luaSchema"`
}

// The set of arguments for constructing a GatewayCustomPluginSchema resource.
type GatewayCustomPluginSchemaArgs struct {
	// The UUID of your control plane. This variable is available in the Konnect manager
	ControlPlaneId pulumi.StringInput
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema pulumi.StringInput
}

func (GatewayCustomPluginSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayCustomPluginSchemaArgs)(nil)).Elem()
}

type GatewayCustomPluginSchemaInput interface {
	pulumi.Input

	ToGatewayCustomPluginSchemaOutput() GatewayCustomPluginSchemaOutput
	ToGatewayCustomPluginSchemaOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaOutput
}

func (*GatewayCustomPluginSchema) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCustomPluginSchema)(nil)).Elem()
}

func (i *GatewayCustomPluginSchema) ToGatewayCustomPluginSchemaOutput() GatewayCustomPluginSchemaOutput {
	return i.ToGatewayCustomPluginSchemaOutputWithContext(context.Background())
}

func (i *GatewayCustomPluginSchema) ToGatewayCustomPluginSchemaOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomPluginSchemaOutput)
}

// GatewayCustomPluginSchemaArrayInput is an input type that accepts GatewayCustomPluginSchemaArray and GatewayCustomPluginSchemaArrayOutput values.
// You can construct a concrete instance of `GatewayCustomPluginSchemaArrayInput` via:
//
//	GatewayCustomPluginSchemaArray{ GatewayCustomPluginSchemaArgs{...} }
type GatewayCustomPluginSchemaArrayInput interface {
	pulumi.Input

	ToGatewayCustomPluginSchemaArrayOutput() GatewayCustomPluginSchemaArrayOutput
	ToGatewayCustomPluginSchemaArrayOutputWithContext(context.Context) GatewayCustomPluginSchemaArrayOutput
}

type GatewayCustomPluginSchemaArray []GatewayCustomPluginSchemaInput

func (GatewayCustomPluginSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayCustomPluginSchema)(nil)).Elem()
}

func (i GatewayCustomPluginSchemaArray) ToGatewayCustomPluginSchemaArrayOutput() GatewayCustomPluginSchemaArrayOutput {
	return i.ToGatewayCustomPluginSchemaArrayOutputWithContext(context.Background())
}

func (i GatewayCustomPluginSchemaArray) ToGatewayCustomPluginSchemaArrayOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomPluginSchemaArrayOutput)
}

// GatewayCustomPluginSchemaMapInput is an input type that accepts GatewayCustomPluginSchemaMap and GatewayCustomPluginSchemaMapOutput values.
// You can construct a concrete instance of `GatewayCustomPluginSchemaMapInput` via:
//
//	GatewayCustomPluginSchemaMap{ "key": GatewayCustomPluginSchemaArgs{...} }
type GatewayCustomPluginSchemaMapInput interface {
	pulumi.Input

	ToGatewayCustomPluginSchemaMapOutput() GatewayCustomPluginSchemaMapOutput
	ToGatewayCustomPluginSchemaMapOutputWithContext(context.Context) GatewayCustomPluginSchemaMapOutput
}

type GatewayCustomPluginSchemaMap map[string]GatewayCustomPluginSchemaInput

func (GatewayCustomPluginSchemaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayCustomPluginSchema)(nil)).Elem()
}

func (i GatewayCustomPluginSchemaMap) ToGatewayCustomPluginSchemaMapOutput() GatewayCustomPluginSchemaMapOutput {
	return i.ToGatewayCustomPluginSchemaMapOutputWithContext(context.Background())
}

func (i GatewayCustomPluginSchemaMap) ToGatewayCustomPluginSchemaMapOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayCustomPluginSchemaMapOutput)
}

type GatewayCustomPluginSchemaOutput struct{ *pulumi.OutputState }

func (GatewayCustomPluginSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayCustomPluginSchema)(nil)).Elem()
}

func (o GatewayCustomPluginSchemaOutput) ToGatewayCustomPluginSchemaOutput() GatewayCustomPluginSchemaOutput {
	return o
}

func (o GatewayCustomPluginSchemaOutput) ToGatewayCustomPluginSchemaOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaOutput {
	return o
}

// The UUID of your control plane. This variable is available in the Konnect manager
func (o GatewayCustomPluginSchemaOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayCustomPluginSchema) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// An ISO-8604 timestamp representation of custom plugin schema creation date.
func (o GatewayCustomPluginSchemaOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayCustomPluginSchema) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// The custom plugin schema; `jq -Rs '.' schema.lua`.
func (o GatewayCustomPluginSchemaOutput) LuaSchema() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayCustomPluginSchema) pulumi.StringOutput { return v.LuaSchema }).(pulumi.StringOutput)
}

// The custom plugin name
func (o GatewayCustomPluginSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayCustomPluginSchema) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An ISO-8604 timestamp representation of custom plugin schema update date.
func (o GatewayCustomPluginSchemaOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayCustomPluginSchema) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayCustomPluginSchemaArrayOutput struct{ *pulumi.OutputState }

func (GatewayCustomPluginSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayCustomPluginSchema)(nil)).Elem()
}

func (o GatewayCustomPluginSchemaArrayOutput) ToGatewayCustomPluginSchemaArrayOutput() GatewayCustomPluginSchemaArrayOutput {
	return o
}

func (o GatewayCustomPluginSchemaArrayOutput) ToGatewayCustomPluginSchemaArrayOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaArrayOutput {
	return o
}

func (o GatewayCustomPluginSchemaArrayOutput) Index(i pulumi.IntInput) GatewayCustomPluginSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayCustomPluginSchema {
		return vs[0].([]*GatewayCustomPluginSchema)[vs[1].(int)]
	}).(GatewayCustomPluginSchemaOutput)
}

type GatewayCustomPluginSchemaMapOutput struct{ *pulumi.OutputState }

func (GatewayCustomPluginSchemaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayCustomPluginSchema)(nil)).Elem()
}

func (o GatewayCustomPluginSchemaMapOutput) ToGatewayCustomPluginSchemaMapOutput() GatewayCustomPluginSchemaMapOutput {
	return o
}

func (o GatewayCustomPluginSchemaMapOutput) ToGatewayCustomPluginSchemaMapOutputWithContext(ctx context.Context) GatewayCustomPluginSchemaMapOutput {
	return o
}

func (o GatewayCustomPluginSchemaMapOutput) MapIndex(k pulumi.StringInput) GatewayCustomPluginSchemaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayCustomPluginSchema {
		return vs[0].(map[string]*GatewayCustomPluginSchema)[vs[1].(string)]
	}).(GatewayCustomPluginSchemaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayCustomPluginSchemaInput)(nil)).Elem(), &GatewayCustomPluginSchema{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayCustomPluginSchemaArrayInput)(nil)).Elem(), GatewayCustomPluginSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayCustomPluginSchemaMapInput)(nil)).Elem(), GatewayCustomPluginSchemaMap{})
	pulumi.RegisterOutputType(GatewayCustomPluginSchemaOutput{})
	pulumi.RegisterOutputType(GatewayCustomPluginSchemaArrayOutput{})
	pulumi.RegisterOutputType(GatewayCustomPluginSchemaMapOutput{})
}
