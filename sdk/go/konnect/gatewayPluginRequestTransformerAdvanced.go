// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayPluginRequestTransformerAdvanced Resource
type GatewayPluginRequestTransformerAdvanced struct {
	pulumi.CustomResourceState

	Config GatewayPluginRequestTransformerAdvancedConfigOutput `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRequestTransformerAdvancedConsumerOutput      `pulumi:"consumer"`
	ConsumerGroup GatewayPluginRequestTransformerAdvancedConsumerGroupOutput `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      pulumi.BoolOutput   `pulumi:"enabled"`
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRequestTransformerAdvancedRouteOutput `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRequestTransformerAdvancedServiceOutput `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayPluginRequestTransformerAdvanced registers a new resource with the given unique name, arguments, and options.
func NewGatewayPluginRequestTransformerAdvanced(ctx *pulumi.Context,
	name string, args *GatewayPluginRequestTransformerAdvancedArgs, opts ...pulumi.ResourceOption) (*GatewayPluginRequestTransformerAdvanced, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayPluginRequestTransformerAdvanced
	err := ctx.RegisterResource("konnect:index/gatewayPluginRequestTransformerAdvanced:GatewayPluginRequestTransformerAdvanced", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayPluginRequestTransformerAdvanced gets an existing GatewayPluginRequestTransformerAdvanced resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayPluginRequestTransformerAdvanced(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayPluginRequestTransformerAdvancedState, opts ...pulumi.ResourceOption) (*GatewayPluginRequestTransformerAdvanced, error) {
	var resource GatewayPluginRequestTransformerAdvanced
	err := ctx.ReadResource("konnect:index/gatewayPluginRequestTransformerAdvanced:GatewayPluginRequestTransformerAdvanced", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayPluginRequestTransformerAdvanced resources.
type gatewayPluginRequestTransformerAdvancedState struct {
	Config *GatewayPluginRequestTransformerAdvancedConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginRequestTransformerAdvancedConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginRequestTransformerAdvancedConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginRequestTransformerAdvancedRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginRequestTransformerAdvancedService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayPluginRequestTransformerAdvancedState struct {
	Config GatewayPluginRequestTransformerAdvancedConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRequestTransformerAdvancedConsumerPtrInput
	ConsumerGroup GatewayPluginRequestTransformerAdvancedConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRequestTransformerAdvancedRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRequestTransformerAdvancedServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayPluginRequestTransformerAdvancedState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginRequestTransformerAdvancedState)(nil)).Elem()
}

type gatewayPluginRequestTransformerAdvancedArgs struct {
	Config *GatewayPluginRequestTransformerAdvancedConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginRequestTransformerAdvancedConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginRequestTransformerAdvancedConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginRequestTransformerAdvancedRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginRequestTransformerAdvancedService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayPluginRequestTransformerAdvanced resource.
type GatewayPluginRequestTransformerAdvancedArgs struct {
	Config GatewayPluginRequestTransformerAdvancedConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRequestTransformerAdvancedConsumerPtrInput
	ConsumerGroup GatewayPluginRequestTransformerAdvancedConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRequestTransformerAdvancedRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRequestTransformerAdvancedServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
}

func (GatewayPluginRequestTransformerAdvancedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginRequestTransformerAdvancedArgs)(nil)).Elem()
}

type GatewayPluginRequestTransformerAdvancedInput interface {
	pulumi.Input

	ToGatewayPluginRequestTransformerAdvancedOutput() GatewayPluginRequestTransformerAdvancedOutput
	ToGatewayPluginRequestTransformerAdvancedOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedOutput
}

func (*GatewayPluginRequestTransformerAdvanced) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (i *GatewayPluginRequestTransformerAdvanced) ToGatewayPluginRequestTransformerAdvancedOutput() GatewayPluginRequestTransformerAdvancedOutput {
	return i.ToGatewayPluginRequestTransformerAdvancedOutputWithContext(context.Background())
}

func (i *GatewayPluginRequestTransformerAdvanced) ToGatewayPluginRequestTransformerAdvancedOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRequestTransformerAdvancedOutput)
}

// GatewayPluginRequestTransformerAdvancedArrayInput is an input type that accepts GatewayPluginRequestTransformerAdvancedArray and GatewayPluginRequestTransformerAdvancedArrayOutput values.
// You can construct a concrete instance of `GatewayPluginRequestTransformerAdvancedArrayInput` via:
//
//	GatewayPluginRequestTransformerAdvancedArray{ GatewayPluginRequestTransformerAdvancedArgs{...} }
type GatewayPluginRequestTransformerAdvancedArrayInput interface {
	pulumi.Input

	ToGatewayPluginRequestTransformerAdvancedArrayOutput() GatewayPluginRequestTransformerAdvancedArrayOutput
	ToGatewayPluginRequestTransformerAdvancedArrayOutputWithContext(context.Context) GatewayPluginRequestTransformerAdvancedArrayOutput
}

type GatewayPluginRequestTransformerAdvancedArray []GatewayPluginRequestTransformerAdvancedInput

func (GatewayPluginRequestTransformerAdvancedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (i GatewayPluginRequestTransformerAdvancedArray) ToGatewayPluginRequestTransformerAdvancedArrayOutput() GatewayPluginRequestTransformerAdvancedArrayOutput {
	return i.ToGatewayPluginRequestTransformerAdvancedArrayOutputWithContext(context.Background())
}

func (i GatewayPluginRequestTransformerAdvancedArray) ToGatewayPluginRequestTransformerAdvancedArrayOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRequestTransformerAdvancedArrayOutput)
}

// GatewayPluginRequestTransformerAdvancedMapInput is an input type that accepts GatewayPluginRequestTransformerAdvancedMap and GatewayPluginRequestTransformerAdvancedMapOutput values.
// You can construct a concrete instance of `GatewayPluginRequestTransformerAdvancedMapInput` via:
//
//	GatewayPluginRequestTransformerAdvancedMap{ "key": GatewayPluginRequestTransformerAdvancedArgs{...} }
type GatewayPluginRequestTransformerAdvancedMapInput interface {
	pulumi.Input

	ToGatewayPluginRequestTransformerAdvancedMapOutput() GatewayPluginRequestTransformerAdvancedMapOutput
	ToGatewayPluginRequestTransformerAdvancedMapOutputWithContext(context.Context) GatewayPluginRequestTransformerAdvancedMapOutput
}

type GatewayPluginRequestTransformerAdvancedMap map[string]GatewayPluginRequestTransformerAdvancedInput

func (GatewayPluginRequestTransformerAdvancedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (i GatewayPluginRequestTransformerAdvancedMap) ToGatewayPluginRequestTransformerAdvancedMapOutput() GatewayPluginRequestTransformerAdvancedMapOutput {
	return i.ToGatewayPluginRequestTransformerAdvancedMapOutputWithContext(context.Background())
}

func (i GatewayPluginRequestTransformerAdvancedMap) ToGatewayPluginRequestTransformerAdvancedMapOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRequestTransformerAdvancedMapOutput)
}

type GatewayPluginRequestTransformerAdvancedOutput struct{ *pulumi.OutputState }

func (GatewayPluginRequestTransformerAdvancedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (o GatewayPluginRequestTransformerAdvancedOutput) ToGatewayPluginRequestTransformerAdvancedOutput() GatewayPluginRequestTransformerAdvancedOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedOutput) ToGatewayPluginRequestTransformerAdvancedOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedOutput) Config() GatewayPluginRequestTransformerAdvancedConfigOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) GatewayPluginRequestTransformerAdvancedConfigOutput {
		return v.Config
	}).(GatewayPluginRequestTransformerAdvancedConfigOutput)
}

// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
func (o GatewayPluginRequestTransformerAdvancedOutput) Consumer() GatewayPluginRequestTransformerAdvancedConsumerOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) GatewayPluginRequestTransformerAdvancedConsumerOutput {
		return v.Consumer
	}).(GatewayPluginRequestTransformerAdvancedConsumerOutput)
}

func (o GatewayPluginRequestTransformerAdvancedOutput) ConsumerGroup() GatewayPluginRequestTransformerAdvancedConsumerGroupOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) GatewayPluginRequestTransformerAdvancedConsumerGroupOutput {
		return v.ConsumerGroup
	}).(GatewayPluginRequestTransformerAdvancedConsumerGroupOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayPluginRequestTransformerAdvancedOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayPluginRequestTransformerAdvancedOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Whether the plugin is applied.
func (o GatewayPluginRequestTransformerAdvancedOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GatewayPluginRequestTransformerAdvancedOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
func (o GatewayPluginRequestTransformerAdvancedOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
func (o GatewayPluginRequestTransformerAdvancedOutput) Route() GatewayPluginRequestTransformerAdvancedRouteOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) GatewayPluginRequestTransformerAdvancedRouteOutput {
		return v.Route
	}).(GatewayPluginRequestTransformerAdvancedRouteOutput)
}

// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
func (o GatewayPluginRequestTransformerAdvancedOutput) Service() GatewayPluginRequestTransformerAdvancedServiceOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) GatewayPluginRequestTransformerAdvancedServiceOutput {
		return v.Service
	}).(GatewayPluginRequestTransformerAdvancedServiceOutput)
}

// An optional set of strings associated with the Plugin for grouping and filtering.
func (o GatewayPluginRequestTransformerAdvancedOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayPluginRequestTransformerAdvancedOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginRequestTransformerAdvanced) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayPluginRequestTransformerAdvancedArrayOutput struct{ *pulumi.OutputState }

func (GatewayPluginRequestTransformerAdvancedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (o GatewayPluginRequestTransformerAdvancedArrayOutput) ToGatewayPluginRequestTransformerAdvancedArrayOutput() GatewayPluginRequestTransformerAdvancedArrayOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedArrayOutput) ToGatewayPluginRequestTransformerAdvancedArrayOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedArrayOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedArrayOutput) Index(i pulumi.IntInput) GatewayPluginRequestTransformerAdvancedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayPluginRequestTransformerAdvanced {
		return vs[0].([]*GatewayPluginRequestTransformerAdvanced)[vs[1].(int)]
	}).(GatewayPluginRequestTransformerAdvancedOutput)
}

type GatewayPluginRequestTransformerAdvancedMapOutput struct{ *pulumi.OutputState }

func (GatewayPluginRequestTransformerAdvancedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginRequestTransformerAdvanced)(nil)).Elem()
}

func (o GatewayPluginRequestTransformerAdvancedMapOutput) ToGatewayPluginRequestTransformerAdvancedMapOutput() GatewayPluginRequestTransformerAdvancedMapOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedMapOutput) ToGatewayPluginRequestTransformerAdvancedMapOutputWithContext(ctx context.Context) GatewayPluginRequestTransformerAdvancedMapOutput {
	return o
}

func (o GatewayPluginRequestTransformerAdvancedMapOutput) MapIndex(k pulumi.StringInput) GatewayPluginRequestTransformerAdvancedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayPluginRequestTransformerAdvanced {
		return vs[0].(map[string]*GatewayPluginRequestTransformerAdvanced)[vs[1].(string)]
	}).(GatewayPluginRequestTransformerAdvancedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRequestTransformerAdvancedInput)(nil)).Elem(), &GatewayPluginRequestTransformerAdvanced{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRequestTransformerAdvancedArrayInput)(nil)).Elem(), GatewayPluginRequestTransformerAdvancedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRequestTransformerAdvancedMapInput)(nil)).Elem(), GatewayPluginRequestTransformerAdvancedMap{})
	pulumi.RegisterOutputType(GatewayPluginRequestTransformerAdvancedOutput{})
	pulumi.RegisterOutputType(GatewayPluginRequestTransformerAdvancedArrayOutput{})
	pulumi.RegisterOutputType(GatewayPluginRequestTransformerAdvancedMapOutput{})
}
