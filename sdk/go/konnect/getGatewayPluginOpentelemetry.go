// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGatewayPluginOpentelemetry(ctx *pulumi.Context, args *LookupGatewayPluginOpentelemetryArgs, opts ...pulumi.InvokeOption) (*LookupGatewayPluginOpentelemetryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayPluginOpentelemetryResult
	err := ctx.Invoke("konnect:index/getGatewayPluginOpentelemetry:getGatewayPluginOpentelemetry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayPluginOpentelemetry.
type LookupGatewayPluginOpentelemetryArgs struct {
	ControlPlaneId string `pulumi:"controlPlaneId"`
}

// A collection of values returned by getGatewayPluginOpentelemetry.
type LookupGatewayPluginOpentelemetryResult struct {
	Config         GetGatewayPluginOpentelemetryConfig        `pulumi:"config"`
	Consumer       GetGatewayPluginOpentelemetryConsumer      `pulumi:"consumer"`
	ConsumerGroup  GetGatewayPluginOpentelemetryConsumerGroup `pulumi:"consumerGroup"`
	ControlPlaneId string                                     `pulumi:"controlPlaneId"`
	CreatedAt      int                                        `pulumi:"createdAt"`
	Enabled        bool                                       `pulumi:"enabled"`
	Id             string                                     `pulumi:"id"`
	InstanceName   string                                     `pulumi:"instanceName"`
	Protocols      []string                                   `pulumi:"protocols"`
	Route          GetGatewayPluginOpentelemetryRoute         `pulumi:"route"`
	Service        GetGatewayPluginOpentelemetryService       `pulumi:"service"`
	Tags           []string                                   `pulumi:"tags"`
	UpdatedAt      int                                        `pulumi:"updatedAt"`
}

func LookupGatewayPluginOpentelemetryOutput(ctx *pulumi.Context, args LookupGatewayPluginOpentelemetryOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayPluginOpentelemetryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayPluginOpentelemetryResult, error) {
			args := v.(LookupGatewayPluginOpentelemetryArgs)
			r, err := LookupGatewayPluginOpentelemetry(ctx, &args, opts...)
			var s LookupGatewayPluginOpentelemetryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayPluginOpentelemetryResultOutput)
}

// A collection of arguments for invoking getGatewayPluginOpentelemetry.
type LookupGatewayPluginOpentelemetryOutputArgs struct {
	ControlPlaneId pulumi.StringInput `pulumi:"controlPlaneId"`
}

func (LookupGatewayPluginOpentelemetryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginOpentelemetryArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayPluginOpentelemetry.
type LookupGatewayPluginOpentelemetryResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayPluginOpentelemetryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginOpentelemetryResult)(nil)).Elem()
}

func (o LookupGatewayPluginOpentelemetryResultOutput) ToLookupGatewayPluginOpentelemetryResultOutput() LookupGatewayPluginOpentelemetryResultOutput {
	return o
}

func (o LookupGatewayPluginOpentelemetryResultOutput) ToLookupGatewayPluginOpentelemetryResultOutputWithContext(ctx context.Context) LookupGatewayPluginOpentelemetryResultOutput {
	return o
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Config() GetGatewayPluginOpentelemetryConfigOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) GetGatewayPluginOpentelemetryConfig { return v.Config }).(GetGatewayPluginOpentelemetryConfigOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Consumer() GetGatewayPluginOpentelemetryConsumerOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) GetGatewayPluginOpentelemetryConsumer {
		return v.Consumer
	}).(GetGatewayPluginOpentelemetryConsumerOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) ConsumerGroup() GetGatewayPluginOpentelemetryConsumerGroupOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) GetGatewayPluginOpentelemetryConsumerGroup {
		return v.ConsumerGroup
	}).(GetGatewayPluginOpentelemetryConsumerGroupOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) string { return v.ControlPlaneId }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Route() GetGatewayPluginOpentelemetryRouteOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) GetGatewayPluginOpentelemetryRoute { return v.Route }).(GetGatewayPluginOpentelemetryRouteOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Service() GetGatewayPluginOpentelemetryServiceOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) GetGatewayPluginOpentelemetryService { return v.Service }).(GetGatewayPluginOpentelemetryServiceOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginOpentelemetryResultOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginOpentelemetryResult) int { return v.UpdatedAt }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayPluginOpentelemetryResultOutput{})
}
