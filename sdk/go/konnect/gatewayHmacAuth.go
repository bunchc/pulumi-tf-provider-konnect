// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayHMACAuth Resource
type GatewayHmacAuth struct {
	pulumi.CustomResourceState

	Consumer GatewayHmacAuthConsumerOutput `pulumi:"consumer"`
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringOutput `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Requires replacement if changed.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// Requires replacement if changed.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Requires replacement if changed.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewGatewayHmacAuth registers a new resource with the given unique name, arguments, and options.
func NewGatewayHmacAuth(ctx *pulumi.Context,
	name string, args *GatewayHmacAuthArgs, opts ...pulumi.ResourceOption) (*GatewayHmacAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerId == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerId'")
	}
	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayHmacAuth
	err := ctx.RegisterResource("konnect:index/gatewayHmacAuth:GatewayHmacAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayHmacAuth gets an existing GatewayHmacAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayHmacAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayHmacAuthState, opts ...pulumi.ResourceOption) (*GatewayHmacAuth, error) {
	var resource GatewayHmacAuth
	err := ctx.ReadResource("konnect:index/gatewayHmacAuth:GatewayHmacAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayHmacAuth resources.
type gatewayHmacAuthState struct {
	Consumer *GatewayHmacAuthConsumer `pulumi:"consumer"`
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId *string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Requires replacement if changed.
	Secret *string `pulumi:"secret"`
	// Requires replacement if changed.
	Tags []string `pulumi:"tags"`
	// Requires replacement if changed.
	Username *string `pulumi:"username"`
}

type GatewayHmacAuthState struct {
	Consumer GatewayHmacAuthConsumerPtrInput
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Requires replacement if changed.
	Secret pulumi.StringPtrInput
	// Requires replacement if changed.
	Tags pulumi.StringArrayInput
	// Requires replacement if changed.
	Username pulumi.StringPtrInput
}

func (GatewayHmacAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayHmacAuthState)(nil)).Elem()
}

type gatewayHmacAuthArgs struct {
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Requires replacement if changed.
	Secret *string `pulumi:"secret"`
	// Requires replacement if changed.
	Tags []string `pulumi:"tags"`
	// Requires replacement if changed.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a GatewayHmacAuth resource.
type GatewayHmacAuthArgs struct {
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringInput
	// Requires replacement if changed.
	Secret pulumi.StringPtrInput
	// Requires replacement if changed.
	Tags pulumi.StringArrayInput
	// Requires replacement if changed.
	Username pulumi.StringPtrInput
}

func (GatewayHmacAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayHmacAuthArgs)(nil)).Elem()
}

type GatewayHmacAuthInput interface {
	pulumi.Input

	ToGatewayHmacAuthOutput() GatewayHmacAuthOutput
	ToGatewayHmacAuthOutputWithContext(ctx context.Context) GatewayHmacAuthOutput
}

func (*GatewayHmacAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayHmacAuth)(nil)).Elem()
}

func (i *GatewayHmacAuth) ToGatewayHmacAuthOutput() GatewayHmacAuthOutput {
	return i.ToGatewayHmacAuthOutputWithContext(context.Background())
}

func (i *GatewayHmacAuth) ToGatewayHmacAuthOutputWithContext(ctx context.Context) GatewayHmacAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayHmacAuthOutput)
}

// GatewayHmacAuthArrayInput is an input type that accepts GatewayHmacAuthArray and GatewayHmacAuthArrayOutput values.
// You can construct a concrete instance of `GatewayHmacAuthArrayInput` via:
//
//	GatewayHmacAuthArray{ GatewayHmacAuthArgs{...} }
type GatewayHmacAuthArrayInput interface {
	pulumi.Input

	ToGatewayHmacAuthArrayOutput() GatewayHmacAuthArrayOutput
	ToGatewayHmacAuthArrayOutputWithContext(context.Context) GatewayHmacAuthArrayOutput
}

type GatewayHmacAuthArray []GatewayHmacAuthInput

func (GatewayHmacAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayHmacAuth)(nil)).Elem()
}

func (i GatewayHmacAuthArray) ToGatewayHmacAuthArrayOutput() GatewayHmacAuthArrayOutput {
	return i.ToGatewayHmacAuthArrayOutputWithContext(context.Background())
}

func (i GatewayHmacAuthArray) ToGatewayHmacAuthArrayOutputWithContext(ctx context.Context) GatewayHmacAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayHmacAuthArrayOutput)
}

// GatewayHmacAuthMapInput is an input type that accepts GatewayHmacAuthMap and GatewayHmacAuthMapOutput values.
// You can construct a concrete instance of `GatewayHmacAuthMapInput` via:
//
//	GatewayHmacAuthMap{ "key": GatewayHmacAuthArgs{...} }
type GatewayHmacAuthMapInput interface {
	pulumi.Input

	ToGatewayHmacAuthMapOutput() GatewayHmacAuthMapOutput
	ToGatewayHmacAuthMapOutputWithContext(context.Context) GatewayHmacAuthMapOutput
}

type GatewayHmacAuthMap map[string]GatewayHmacAuthInput

func (GatewayHmacAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayHmacAuth)(nil)).Elem()
}

func (i GatewayHmacAuthMap) ToGatewayHmacAuthMapOutput() GatewayHmacAuthMapOutput {
	return i.ToGatewayHmacAuthMapOutputWithContext(context.Background())
}

func (i GatewayHmacAuthMap) ToGatewayHmacAuthMapOutputWithContext(ctx context.Context) GatewayHmacAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayHmacAuthMapOutput)
}

type GatewayHmacAuthOutput struct{ *pulumi.OutputState }

func (GatewayHmacAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayHmacAuth)(nil)).Elem()
}

func (o GatewayHmacAuthOutput) ToGatewayHmacAuthOutput() GatewayHmacAuthOutput {
	return o
}

func (o GatewayHmacAuthOutput) ToGatewayHmacAuthOutputWithContext(ctx context.Context) GatewayHmacAuthOutput {
	return o
}

func (o GatewayHmacAuthOutput) Consumer() GatewayHmacAuthConsumerOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) GatewayHmacAuthConsumerOutput { return v.Consumer }).(GatewayHmacAuthConsumerOutput)
}

// Consumer ID for nested entities. Requires replacement if changed.
func (o GatewayHmacAuthOutput) ConsumerId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.StringOutput { return v.ConsumerId }).(pulumi.StringOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
func (o GatewayHmacAuthOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayHmacAuthOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Requires replacement if changed.
func (o GatewayHmacAuthOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// Requires replacement if changed.
func (o GatewayHmacAuthOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Requires replacement if changed.
func (o GatewayHmacAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayHmacAuth) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type GatewayHmacAuthArrayOutput struct{ *pulumi.OutputState }

func (GatewayHmacAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayHmacAuth)(nil)).Elem()
}

func (o GatewayHmacAuthArrayOutput) ToGatewayHmacAuthArrayOutput() GatewayHmacAuthArrayOutput {
	return o
}

func (o GatewayHmacAuthArrayOutput) ToGatewayHmacAuthArrayOutputWithContext(ctx context.Context) GatewayHmacAuthArrayOutput {
	return o
}

func (o GatewayHmacAuthArrayOutput) Index(i pulumi.IntInput) GatewayHmacAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayHmacAuth {
		return vs[0].([]*GatewayHmacAuth)[vs[1].(int)]
	}).(GatewayHmacAuthOutput)
}

type GatewayHmacAuthMapOutput struct{ *pulumi.OutputState }

func (GatewayHmacAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayHmacAuth)(nil)).Elem()
}

func (o GatewayHmacAuthMapOutput) ToGatewayHmacAuthMapOutput() GatewayHmacAuthMapOutput {
	return o
}

func (o GatewayHmacAuthMapOutput) ToGatewayHmacAuthMapOutputWithContext(ctx context.Context) GatewayHmacAuthMapOutput {
	return o
}

func (o GatewayHmacAuthMapOutput) MapIndex(k pulumi.StringInput) GatewayHmacAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayHmacAuth {
		return vs[0].(map[string]*GatewayHmacAuth)[vs[1].(string)]
	}).(GatewayHmacAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayHmacAuthInput)(nil)).Elem(), &GatewayHmacAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayHmacAuthArrayInput)(nil)).Elem(), GatewayHmacAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayHmacAuthMapInput)(nil)).Elem(), GatewayHmacAuthMap{})
	pulumi.RegisterOutputType(GatewayHmacAuthOutput{})
	pulumi.RegisterOutputType(GatewayHmacAuthArrayOutput{})
	pulumi.RegisterOutputType(GatewayHmacAuthMapOutput{})
}
