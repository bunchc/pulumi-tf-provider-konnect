// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// APIProductSpecification Resource
type ApiProductSpecification struct {
	pulumi.CustomResourceState

	// The API product identifier
	ApiProductId pulumi.StringOutput `pulumi:"apiProductId"`
	// The API product version identifier
	ApiProductVersionId pulumi.StringOutput `pulumi:"apiProductVersionId"`
	// The base64 encoded contents of the API product version specification
	Content pulumi.StringOutput `pulumi:"content"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The name of the API product version specification
	Name pulumi.StringOutput `pulumi:"name"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewApiProductSpecification registers a new resource with the given unique name, arguments, and options.
func NewApiProductSpecification(ctx *pulumi.Context,
	name string, args *ApiProductSpecificationArgs, opts ...pulumi.ResourceOption) (*ApiProductSpecification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiProductId == nil {
		return nil, errors.New("invalid value for required argument 'ApiProductId'")
	}
	if args.ApiProductVersionId == nil {
		return nil, errors.New("invalid value for required argument 'ApiProductVersionId'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiProductSpecification
	err := ctx.RegisterResource("konnect:index/apiProductSpecification:ApiProductSpecification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiProductSpecification gets an existing ApiProductSpecification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiProductSpecification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiProductSpecificationState, opts ...pulumi.ResourceOption) (*ApiProductSpecification, error) {
	var resource ApiProductSpecification
	err := ctx.ReadResource("konnect:index/apiProductSpecification:ApiProductSpecification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiProductSpecification resources.
type apiProductSpecificationState struct {
	// The API product identifier
	ApiProductId *string `pulumi:"apiProductId"`
	// The API product version identifier
	ApiProductVersionId *string `pulumi:"apiProductVersionId"`
	// The base64 encoded contents of the API product version specification
	Content *string `pulumi:"content"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt *string `pulumi:"createdAt"`
	// The name of the API product version specification
	Name *string `pulumi:"name"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ApiProductSpecificationState struct {
	// The API product identifier
	ApiProductId pulumi.StringPtrInput
	// The API product version identifier
	ApiProductVersionId pulumi.StringPtrInput
	// The base64 encoded contents of the API product version specification
	Content pulumi.StringPtrInput
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt pulumi.StringPtrInput
	// The name of the API product version specification
	Name pulumi.StringPtrInput
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt pulumi.StringPtrInput
}

func (ApiProductSpecificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiProductSpecificationState)(nil)).Elem()
}

type apiProductSpecificationArgs struct {
	// The API product identifier
	ApiProductId string `pulumi:"apiProductId"`
	// The API product version identifier
	ApiProductVersionId string `pulumi:"apiProductVersionId"`
	// The base64 encoded contents of the API product version specification
	Content string `pulumi:"content"`
	// The name of the API product version specification
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ApiProductSpecification resource.
type ApiProductSpecificationArgs struct {
	// The API product identifier
	ApiProductId pulumi.StringInput
	// The API product version identifier
	ApiProductVersionId pulumi.StringInput
	// The base64 encoded contents of the API product version specification
	Content pulumi.StringInput
	// The name of the API product version specification
	Name pulumi.StringPtrInput
}

func (ApiProductSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiProductSpecificationArgs)(nil)).Elem()
}

type ApiProductSpecificationInput interface {
	pulumi.Input

	ToApiProductSpecificationOutput() ApiProductSpecificationOutput
	ToApiProductSpecificationOutputWithContext(ctx context.Context) ApiProductSpecificationOutput
}

func (*ApiProductSpecification) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProductSpecification)(nil)).Elem()
}

func (i *ApiProductSpecification) ToApiProductSpecificationOutput() ApiProductSpecificationOutput {
	return i.ToApiProductSpecificationOutputWithContext(context.Background())
}

func (i *ApiProductSpecification) ToApiProductSpecificationOutputWithContext(ctx context.Context) ApiProductSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductSpecificationOutput)
}

// ApiProductSpecificationArrayInput is an input type that accepts ApiProductSpecificationArray and ApiProductSpecificationArrayOutput values.
// You can construct a concrete instance of `ApiProductSpecificationArrayInput` via:
//
//	ApiProductSpecificationArray{ ApiProductSpecificationArgs{...} }
type ApiProductSpecificationArrayInput interface {
	pulumi.Input

	ToApiProductSpecificationArrayOutput() ApiProductSpecificationArrayOutput
	ToApiProductSpecificationArrayOutputWithContext(context.Context) ApiProductSpecificationArrayOutput
}

type ApiProductSpecificationArray []ApiProductSpecificationInput

func (ApiProductSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiProductSpecification)(nil)).Elem()
}

func (i ApiProductSpecificationArray) ToApiProductSpecificationArrayOutput() ApiProductSpecificationArrayOutput {
	return i.ToApiProductSpecificationArrayOutputWithContext(context.Background())
}

func (i ApiProductSpecificationArray) ToApiProductSpecificationArrayOutputWithContext(ctx context.Context) ApiProductSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductSpecificationArrayOutput)
}

// ApiProductSpecificationMapInput is an input type that accepts ApiProductSpecificationMap and ApiProductSpecificationMapOutput values.
// You can construct a concrete instance of `ApiProductSpecificationMapInput` via:
//
//	ApiProductSpecificationMap{ "key": ApiProductSpecificationArgs{...} }
type ApiProductSpecificationMapInput interface {
	pulumi.Input

	ToApiProductSpecificationMapOutput() ApiProductSpecificationMapOutput
	ToApiProductSpecificationMapOutputWithContext(context.Context) ApiProductSpecificationMapOutput
}

type ApiProductSpecificationMap map[string]ApiProductSpecificationInput

func (ApiProductSpecificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiProductSpecification)(nil)).Elem()
}

func (i ApiProductSpecificationMap) ToApiProductSpecificationMapOutput() ApiProductSpecificationMapOutput {
	return i.ToApiProductSpecificationMapOutputWithContext(context.Background())
}

func (i ApiProductSpecificationMap) ToApiProductSpecificationMapOutputWithContext(ctx context.Context) ApiProductSpecificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductSpecificationMapOutput)
}

type ApiProductSpecificationOutput struct{ *pulumi.OutputState }

func (ApiProductSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProductSpecification)(nil)).Elem()
}

func (o ApiProductSpecificationOutput) ToApiProductSpecificationOutput() ApiProductSpecificationOutput {
	return o
}

func (o ApiProductSpecificationOutput) ToApiProductSpecificationOutputWithContext(ctx context.Context) ApiProductSpecificationOutput {
	return o
}

// The API product identifier
func (o ApiProductSpecificationOutput) ApiProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.ApiProductId }).(pulumi.StringOutput)
}

// The API product version identifier
func (o ApiProductSpecificationOutput) ApiProductVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.ApiProductVersionId }).(pulumi.StringOutput)
}

// The base64 encoded contents of the API product version specification
func (o ApiProductSpecificationOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

// An ISO-8601 timestamp representation of entity creation date.
func (o ApiProductSpecificationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The name of the API product version specification
func (o ApiProductSpecificationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An ISO-8601 timestamp representation of entity update date.
func (o ApiProductSpecificationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductSpecification) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ApiProductSpecificationArrayOutput struct{ *pulumi.OutputState }

func (ApiProductSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiProductSpecification)(nil)).Elem()
}

func (o ApiProductSpecificationArrayOutput) ToApiProductSpecificationArrayOutput() ApiProductSpecificationArrayOutput {
	return o
}

func (o ApiProductSpecificationArrayOutput) ToApiProductSpecificationArrayOutputWithContext(ctx context.Context) ApiProductSpecificationArrayOutput {
	return o
}

func (o ApiProductSpecificationArrayOutput) Index(i pulumi.IntInput) ApiProductSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiProductSpecification {
		return vs[0].([]*ApiProductSpecification)[vs[1].(int)]
	}).(ApiProductSpecificationOutput)
}

type ApiProductSpecificationMapOutput struct{ *pulumi.OutputState }

func (ApiProductSpecificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiProductSpecification)(nil)).Elem()
}

func (o ApiProductSpecificationMapOutput) ToApiProductSpecificationMapOutput() ApiProductSpecificationMapOutput {
	return o
}

func (o ApiProductSpecificationMapOutput) ToApiProductSpecificationMapOutputWithContext(ctx context.Context) ApiProductSpecificationMapOutput {
	return o
}

func (o ApiProductSpecificationMapOutput) MapIndex(k pulumi.StringInput) ApiProductSpecificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiProductSpecification {
		return vs[0].(map[string]*ApiProductSpecification)[vs[1].(string)]
	}).(ApiProductSpecificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductSpecificationInput)(nil)).Elem(), &ApiProductSpecification{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductSpecificationArrayInput)(nil)).Elem(), ApiProductSpecificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductSpecificationMapInput)(nil)).Elem(), ApiProductSpecificationMap{})
	pulumi.RegisterOutputType(ApiProductSpecificationOutput{})
	pulumi.RegisterOutputType(ApiProductSpecificationArrayOutput{})
	pulumi.RegisterOutputType(ApiProductSpecificationMapOutput{})
}
