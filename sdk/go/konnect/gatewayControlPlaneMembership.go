// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayControlPlaneMembership Resource
type GatewayControlPlaneMembership struct {
	pulumi.CustomResourceState

	// Requires replacement if changed.
	Members GatewayControlPlaneMembershipMemberArrayOutput `pulumi:"members"`
}

// NewGatewayControlPlaneMembership registers a new resource with the given unique name, arguments, and options.
func NewGatewayControlPlaneMembership(ctx *pulumi.Context,
	name string, args *GatewayControlPlaneMembershipArgs, opts ...pulumi.ResourceOption) (*GatewayControlPlaneMembership, error) {
	if args == nil {
		args = &GatewayControlPlaneMembershipArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayControlPlaneMembership
	err := ctx.RegisterResource("konnect:index/gatewayControlPlaneMembership:GatewayControlPlaneMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayControlPlaneMembership gets an existing GatewayControlPlaneMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayControlPlaneMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayControlPlaneMembershipState, opts ...pulumi.ResourceOption) (*GatewayControlPlaneMembership, error) {
	var resource GatewayControlPlaneMembership
	err := ctx.ReadResource("konnect:index/gatewayControlPlaneMembership:GatewayControlPlaneMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayControlPlaneMembership resources.
type gatewayControlPlaneMembershipState struct {
	// Requires replacement if changed.
	Members []GatewayControlPlaneMembershipMember `pulumi:"members"`
}

type GatewayControlPlaneMembershipState struct {
	// Requires replacement if changed.
	Members GatewayControlPlaneMembershipMemberArrayInput
}

func (GatewayControlPlaneMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayControlPlaneMembershipState)(nil)).Elem()
}

type gatewayControlPlaneMembershipArgs struct {
	// Requires replacement if changed.
	Members []GatewayControlPlaneMembershipMember `pulumi:"members"`
}

// The set of arguments for constructing a GatewayControlPlaneMembership resource.
type GatewayControlPlaneMembershipArgs struct {
	// Requires replacement if changed.
	Members GatewayControlPlaneMembershipMemberArrayInput
}

func (GatewayControlPlaneMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayControlPlaneMembershipArgs)(nil)).Elem()
}

type GatewayControlPlaneMembershipInput interface {
	pulumi.Input

	ToGatewayControlPlaneMembershipOutput() GatewayControlPlaneMembershipOutput
	ToGatewayControlPlaneMembershipOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipOutput
}

func (*GatewayControlPlaneMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayControlPlaneMembership)(nil)).Elem()
}

func (i *GatewayControlPlaneMembership) ToGatewayControlPlaneMembershipOutput() GatewayControlPlaneMembershipOutput {
	return i.ToGatewayControlPlaneMembershipOutputWithContext(context.Background())
}

func (i *GatewayControlPlaneMembership) ToGatewayControlPlaneMembershipOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayControlPlaneMembershipOutput)
}

// GatewayControlPlaneMembershipArrayInput is an input type that accepts GatewayControlPlaneMembershipArray and GatewayControlPlaneMembershipArrayOutput values.
// You can construct a concrete instance of `GatewayControlPlaneMembershipArrayInput` via:
//
//	GatewayControlPlaneMembershipArray{ GatewayControlPlaneMembershipArgs{...} }
type GatewayControlPlaneMembershipArrayInput interface {
	pulumi.Input

	ToGatewayControlPlaneMembershipArrayOutput() GatewayControlPlaneMembershipArrayOutput
	ToGatewayControlPlaneMembershipArrayOutputWithContext(context.Context) GatewayControlPlaneMembershipArrayOutput
}

type GatewayControlPlaneMembershipArray []GatewayControlPlaneMembershipInput

func (GatewayControlPlaneMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayControlPlaneMembership)(nil)).Elem()
}

func (i GatewayControlPlaneMembershipArray) ToGatewayControlPlaneMembershipArrayOutput() GatewayControlPlaneMembershipArrayOutput {
	return i.ToGatewayControlPlaneMembershipArrayOutputWithContext(context.Background())
}

func (i GatewayControlPlaneMembershipArray) ToGatewayControlPlaneMembershipArrayOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayControlPlaneMembershipArrayOutput)
}

// GatewayControlPlaneMembershipMapInput is an input type that accepts GatewayControlPlaneMembershipMap and GatewayControlPlaneMembershipMapOutput values.
// You can construct a concrete instance of `GatewayControlPlaneMembershipMapInput` via:
//
//	GatewayControlPlaneMembershipMap{ "key": GatewayControlPlaneMembershipArgs{...} }
type GatewayControlPlaneMembershipMapInput interface {
	pulumi.Input

	ToGatewayControlPlaneMembershipMapOutput() GatewayControlPlaneMembershipMapOutput
	ToGatewayControlPlaneMembershipMapOutputWithContext(context.Context) GatewayControlPlaneMembershipMapOutput
}

type GatewayControlPlaneMembershipMap map[string]GatewayControlPlaneMembershipInput

func (GatewayControlPlaneMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayControlPlaneMembership)(nil)).Elem()
}

func (i GatewayControlPlaneMembershipMap) ToGatewayControlPlaneMembershipMapOutput() GatewayControlPlaneMembershipMapOutput {
	return i.ToGatewayControlPlaneMembershipMapOutputWithContext(context.Background())
}

func (i GatewayControlPlaneMembershipMap) ToGatewayControlPlaneMembershipMapOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayControlPlaneMembershipMapOutput)
}

type GatewayControlPlaneMembershipOutput struct{ *pulumi.OutputState }

func (GatewayControlPlaneMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayControlPlaneMembership)(nil)).Elem()
}

func (o GatewayControlPlaneMembershipOutput) ToGatewayControlPlaneMembershipOutput() GatewayControlPlaneMembershipOutput {
	return o
}

func (o GatewayControlPlaneMembershipOutput) ToGatewayControlPlaneMembershipOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipOutput {
	return o
}

// Requires replacement if changed.
func (o GatewayControlPlaneMembershipOutput) Members() GatewayControlPlaneMembershipMemberArrayOutput {
	return o.ApplyT(func(v *GatewayControlPlaneMembership) GatewayControlPlaneMembershipMemberArrayOutput {
		return v.Members
	}).(GatewayControlPlaneMembershipMemberArrayOutput)
}

type GatewayControlPlaneMembershipArrayOutput struct{ *pulumi.OutputState }

func (GatewayControlPlaneMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayControlPlaneMembership)(nil)).Elem()
}

func (o GatewayControlPlaneMembershipArrayOutput) ToGatewayControlPlaneMembershipArrayOutput() GatewayControlPlaneMembershipArrayOutput {
	return o
}

func (o GatewayControlPlaneMembershipArrayOutput) ToGatewayControlPlaneMembershipArrayOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipArrayOutput {
	return o
}

func (o GatewayControlPlaneMembershipArrayOutput) Index(i pulumi.IntInput) GatewayControlPlaneMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayControlPlaneMembership {
		return vs[0].([]*GatewayControlPlaneMembership)[vs[1].(int)]
	}).(GatewayControlPlaneMembershipOutput)
}

type GatewayControlPlaneMembershipMapOutput struct{ *pulumi.OutputState }

func (GatewayControlPlaneMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayControlPlaneMembership)(nil)).Elem()
}

func (o GatewayControlPlaneMembershipMapOutput) ToGatewayControlPlaneMembershipMapOutput() GatewayControlPlaneMembershipMapOutput {
	return o
}

func (o GatewayControlPlaneMembershipMapOutput) ToGatewayControlPlaneMembershipMapOutputWithContext(ctx context.Context) GatewayControlPlaneMembershipMapOutput {
	return o
}

func (o GatewayControlPlaneMembershipMapOutput) MapIndex(k pulumi.StringInput) GatewayControlPlaneMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayControlPlaneMembership {
		return vs[0].(map[string]*GatewayControlPlaneMembership)[vs[1].(string)]
	}).(GatewayControlPlaneMembershipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayControlPlaneMembershipInput)(nil)).Elem(), &GatewayControlPlaneMembership{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayControlPlaneMembershipArrayInput)(nil)).Elem(), GatewayControlPlaneMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayControlPlaneMembershipMapInput)(nil)).Elem(), GatewayControlPlaneMembershipMap{})
	pulumi.RegisterOutputType(GatewayControlPlaneMembershipOutput{})
	pulumi.RegisterOutputType(GatewayControlPlaneMembershipArrayOutput{})
	pulumi.RegisterOutputType(GatewayControlPlaneMembershipMapOutput{})
}
