// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayPluginAIPromptGuard Resource
type GatewayPluginAiPromptGuard struct {
	pulumi.CustomResourceState

	Config GatewayPluginAiPromptGuardConfigOutput `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginAiPromptGuardConsumerOutput      `pulumi:"consumer"`
	ConsumerGroup GatewayPluginAiPromptGuardConsumerGroupOutput `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      pulumi.BoolOutput   `pulumi:"enabled"`
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginAiPromptGuardRouteOutput `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginAiPromptGuardServiceOutput `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayPluginAiPromptGuard registers a new resource with the given unique name, arguments, and options.
func NewGatewayPluginAiPromptGuard(ctx *pulumi.Context,
	name string, args *GatewayPluginAiPromptGuardArgs, opts ...pulumi.ResourceOption) (*GatewayPluginAiPromptGuard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayPluginAiPromptGuard
	err := ctx.RegisterResource("konnect:index/gatewayPluginAiPromptGuard:GatewayPluginAiPromptGuard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayPluginAiPromptGuard gets an existing GatewayPluginAiPromptGuard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayPluginAiPromptGuard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayPluginAiPromptGuardState, opts ...pulumi.ResourceOption) (*GatewayPluginAiPromptGuard, error) {
	var resource GatewayPluginAiPromptGuard
	err := ctx.ReadResource("konnect:index/gatewayPluginAiPromptGuard:GatewayPluginAiPromptGuard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayPluginAiPromptGuard resources.
type gatewayPluginAiPromptGuardState struct {
	Config *GatewayPluginAiPromptGuardConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginAiPromptGuardConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginAiPromptGuardConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginAiPromptGuardRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginAiPromptGuardService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayPluginAiPromptGuardState struct {
	Config GatewayPluginAiPromptGuardConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginAiPromptGuardConsumerPtrInput
	ConsumerGroup GatewayPluginAiPromptGuardConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginAiPromptGuardRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginAiPromptGuardServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayPluginAiPromptGuardState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginAiPromptGuardState)(nil)).Elem()
}

type gatewayPluginAiPromptGuardArgs struct {
	Config *GatewayPluginAiPromptGuardConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginAiPromptGuardConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginAiPromptGuardConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginAiPromptGuardRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginAiPromptGuardService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayPluginAiPromptGuard resource.
type GatewayPluginAiPromptGuardArgs struct {
	Config GatewayPluginAiPromptGuardConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginAiPromptGuardConsumerPtrInput
	ConsumerGroup GatewayPluginAiPromptGuardConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginAiPromptGuardRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginAiPromptGuardServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
}

func (GatewayPluginAiPromptGuardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginAiPromptGuardArgs)(nil)).Elem()
}

type GatewayPluginAiPromptGuardInput interface {
	pulumi.Input

	ToGatewayPluginAiPromptGuardOutput() GatewayPluginAiPromptGuardOutput
	ToGatewayPluginAiPromptGuardOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardOutput
}

func (*GatewayPluginAiPromptGuard) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (i *GatewayPluginAiPromptGuard) ToGatewayPluginAiPromptGuardOutput() GatewayPluginAiPromptGuardOutput {
	return i.ToGatewayPluginAiPromptGuardOutputWithContext(context.Background())
}

func (i *GatewayPluginAiPromptGuard) ToGatewayPluginAiPromptGuardOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginAiPromptGuardOutput)
}

// GatewayPluginAiPromptGuardArrayInput is an input type that accepts GatewayPluginAiPromptGuardArray and GatewayPluginAiPromptGuardArrayOutput values.
// You can construct a concrete instance of `GatewayPluginAiPromptGuardArrayInput` via:
//
//	GatewayPluginAiPromptGuardArray{ GatewayPluginAiPromptGuardArgs{...} }
type GatewayPluginAiPromptGuardArrayInput interface {
	pulumi.Input

	ToGatewayPluginAiPromptGuardArrayOutput() GatewayPluginAiPromptGuardArrayOutput
	ToGatewayPluginAiPromptGuardArrayOutputWithContext(context.Context) GatewayPluginAiPromptGuardArrayOutput
}

type GatewayPluginAiPromptGuardArray []GatewayPluginAiPromptGuardInput

func (GatewayPluginAiPromptGuardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (i GatewayPluginAiPromptGuardArray) ToGatewayPluginAiPromptGuardArrayOutput() GatewayPluginAiPromptGuardArrayOutput {
	return i.ToGatewayPluginAiPromptGuardArrayOutputWithContext(context.Background())
}

func (i GatewayPluginAiPromptGuardArray) ToGatewayPluginAiPromptGuardArrayOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginAiPromptGuardArrayOutput)
}

// GatewayPluginAiPromptGuardMapInput is an input type that accepts GatewayPluginAiPromptGuardMap and GatewayPluginAiPromptGuardMapOutput values.
// You can construct a concrete instance of `GatewayPluginAiPromptGuardMapInput` via:
//
//	GatewayPluginAiPromptGuardMap{ "key": GatewayPluginAiPromptGuardArgs{...} }
type GatewayPluginAiPromptGuardMapInput interface {
	pulumi.Input

	ToGatewayPluginAiPromptGuardMapOutput() GatewayPluginAiPromptGuardMapOutput
	ToGatewayPluginAiPromptGuardMapOutputWithContext(context.Context) GatewayPluginAiPromptGuardMapOutput
}

type GatewayPluginAiPromptGuardMap map[string]GatewayPluginAiPromptGuardInput

func (GatewayPluginAiPromptGuardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (i GatewayPluginAiPromptGuardMap) ToGatewayPluginAiPromptGuardMapOutput() GatewayPluginAiPromptGuardMapOutput {
	return i.ToGatewayPluginAiPromptGuardMapOutputWithContext(context.Background())
}

func (i GatewayPluginAiPromptGuardMap) ToGatewayPluginAiPromptGuardMapOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginAiPromptGuardMapOutput)
}

type GatewayPluginAiPromptGuardOutput struct{ *pulumi.OutputState }

func (GatewayPluginAiPromptGuardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (o GatewayPluginAiPromptGuardOutput) ToGatewayPluginAiPromptGuardOutput() GatewayPluginAiPromptGuardOutput {
	return o
}

func (o GatewayPluginAiPromptGuardOutput) ToGatewayPluginAiPromptGuardOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardOutput {
	return o
}

func (o GatewayPluginAiPromptGuardOutput) Config() GatewayPluginAiPromptGuardConfigOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) GatewayPluginAiPromptGuardConfigOutput { return v.Config }).(GatewayPluginAiPromptGuardConfigOutput)
}

// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
func (o GatewayPluginAiPromptGuardOutput) Consumer() GatewayPluginAiPromptGuardConsumerOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) GatewayPluginAiPromptGuardConsumerOutput { return v.Consumer }).(GatewayPluginAiPromptGuardConsumerOutput)
}

func (o GatewayPluginAiPromptGuardOutput) ConsumerGroup() GatewayPluginAiPromptGuardConsumerGroupOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) GatewayPluginAiPromptGuardConsumerGroupOutput {
		return v.ConsumerGroup
	}).(GatewayPluginAiPromptGuardConsumerGroupOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayPluginAiPromptGuardOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayPluginAiPromptGuardOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Whether the plugin is applied.
func (o GatewayPluginAiPromptGuardOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GatewayPluginAiPromptGuardOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
func (o GatewayPluginAiPromptGuardOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
func (o GatewayPluginAiPromptGuardOutput) Route() GatewayPluginAiPromptGuardRouteOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) GatewayPluginAiPromptGuardRouteOutput { return v.Route }).(GatewayPluginAiPromptGuardRouteOutput)
}

// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
func (o GatewayPluginAiPromptGuardOutput) Service() GatewayPluginAiPromptGuardServiceOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) GatewayPluginAiPromptGuardServiceOutput { return v.Service }).(GatewayPluginAiPromptGuardServiceOutput)
}

// An optional set of strings associated with the Plugin for grouping and filtering.
func (o GatewayPluginAiPromptGuardOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayPluginAiPromptGuardOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginAiPromptGuard) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayPluginAiPromptGuardArrayOutput struct{ *pulumi.OutputState }

func (GatewayPluginAiPromptGuardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (o GatewayPluginAiPromptGuardArrayOutput) ToGatewayPluginAiPromptGuardArrayOutput() GatewayPluginAiPromptGuardArrayOutput {
	return o
}

func (o GatewayPluginAiPromptGuardArrayOutput) ToGatewayPluginAiPromptGuardArrayOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardArrayOutput {
	return o
}

func (o GatewayPluginAiPromptGuardArrayOutput) Index(i pulumi.IntInput) GatewayPluginAiPromptGuardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayPluginAiPromptGuard {
		return vs[0].([]*GatewayPluginAiPromptGuard)[vs[1].(int)]
	}).(GatewayPluginAiPromptGuardOutput)
}

type GatewayPluginAiPromptGuardMapOutput struct{ *pulumi.OutputState }

func (GatewayPluginAiPromptGuardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginAiPromptGuard)(nil)).Elem()
}

func (o GatewayPluginAiPromptGuardMapOutput) ToGatewayPluginAiPromptGuardMapOutput() GatewayPluginAiPromptGuardMapOutput {
	return o
}

func (o GatewayPluginAiPromptGuardMapOutput) ToGatewayPluginAiPromptGuardMapOutputWithContext(ctx context.Context) GatewayPluginAiPromptGuardMapOutput {
	return o
}

func (o GatewayPluginAiPromptGuardMapOutput) MapIndex(k pulumi.StringInput) GatewayPluginAiPromptGuardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayPluginAiPromptGuard {
		return vs[0].(map[string]*GatewayPluginAiPromptGuard)[vs[1].(string)]
	}).(GatewayPluginAiPromptGuardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginAiPromptGuardInput)(nil)).Elem(), &GatewayPluginAiPromptGuard{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginAiPromptGuardArrayInput)(nil)).Elem(), GatewayPluginAiPromptGuardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginAiPromptGuardMapInput)(nil)).Elem(), GatewayPluginAiPromptGuardMap{})
	pulumi.RegisterOutputType(GatewayPluginAiPromptGuardOutput{})
	pulumi.RegisterOutputType(GatewayPluginAiPromptGuardArrayOutput{})
	pulumi.RegisterOutputType(GatewayPluginAiPromptGuardMapOutput{})
}
