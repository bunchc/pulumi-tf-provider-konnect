// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayConsumerGroup Resource
type GatewayConsumerGroup struct {
	pulumi.CustomResourceState

	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput         `pulumi:"createdAt"`
	Name      pulumi.StringOutput      `pulumi:"name"`
	Tags      pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayConsumerGroup registers a new resource with the given unique name, arguments, and options.
func NewGatewayConsumerGroup(ctx *pulumi.Context,
	name string, args *GatewayConsumerGroupArgs, opts ...pulumi.ResourceOption) (*GatewayConsumerGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayConsumerGroup
	err := ctx.RegisterResource("konnect:index/gatewayConsumerGroup:GatewayConsumerGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayConsumerGroup gets an existing GatewayConsumerGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayConsumerGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayConsumerGroupState, opts ...pulumi.ResourceOption) (*GatewayConsumerGroup, error) {
	var resource GatewayConsumerGroup
	err := ctx.ReadResource("konnect:index/gatewayConsumerGroup:GatewayConsumerGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayConsumerGroup resources.
type gatewayConsumerGroupState struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int     `pulumi:"createdAt"`
	Name      *string  `pulumi:"name"`
	Tags      []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayConsumerGroupState struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	Name      pulumi.StringPtrInput
	Tags      pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayConsumerGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayConsumerGroupState)(nil)).Elem()
}

type gatewayConsumerGroupArgs struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string   `pulumi:"controlPlaneId"`
	Name           *string  `pulumi:"name"`
	Tags           []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayConsumerGroup resource.
type GatewayConsumerGroupArgs struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	Name           pulumi.StringPtrInput
	Tags           pulumi.StringArrayInput
}

func (GatewayConsumerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayConsumerGroupArgs)(nil)).Elem()
}

type GatewayConsumerGroupInput interface {
	pulumi.Input

	ToGatewayConsumerGroupOutput() GatewayConsumerGroupOutput
	ToGatewayConsumerGroupOutputWithContext(ctx context.Context) GatewayConsumerGroupOutput
}

func (*GatewayConsumerGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConsumerGroup)(nil)).Elem()
}

func (i *GatewayConsumerGroup) ToGatewayConsumerGroupOutput() GatewayConsumerGroupOutput {
	return i.ToGatewayConsumerGroupOutputWithContext(context.Background())
}

func (i *GatewayConsumerGroup) ToGatewayConsumerGroupOutputWithContext(ctx context.Context) GatewayConsumerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupOutput)
}

// GatewayConsumerGroupArrayInput is an input type that accepts GatewayConsumerGroupArray and GatewayConsumerGroupArrayOutput values.
// You can construct a concrete instance of `GatewayConsumerGroupArrayInput` via:
//
//	GatewayConsumerGroupArray{ GatewayConsumerGroupArgs{...} }
type GatewayConsumerGroupArrayInput interface {
	pulumi.Input

	ToGatewayConsumerGroupArrayOutput() GatewayConsumerGroupArrayOutput
	ToGatewayConsumerGroupArrayOutputWithContext(context.Context) GatewayConsumerGroupArrayOutput
}

type GatewayConsumerGroupArray []GatewayConsumerGroupInput

func (GatewayConsumerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayConsumerGroup)(nil)).Elem()
}

func (i GatewayConsumerGroupArray) ToGatewayConsumerGroupArrayOutput() GatewayConsumerGroupArrayOutput {
	return i.ToGatewayConsumerGroupArrayOutputWithContext(context.Background())
}

func (i GatewayConsumerGroupArray) ToGatewayConsumerGroupArrayOutputWithContext(ctx context.Context) GatewayConsumerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupArrayOutput)
}

// GatewayConsumerGroupMapInput is an input type that accepts GatewayConsumerGroupMap and GatewayConsumerGroupMapOutput values.
// You can construct a concrete instance of `GatewayConsumerGroupMapInput` via:
//
//	GatewayConsumerGroupMap{ "key": GatewayConsumerGroupArgs{...} }
type GatewayConsumerGroupMapInput interface {
	pulumi.Input

	ToGatewayConsumerGroupMapOutput() GatewayConsumerGroupMapOutput
	ToGatewayConsumerGroupMapOutputWithContext(context.Context) GatewayConsumerGroupMapOutput
}

type GatewayConsumerGroupMap map[string]GatewayConsumerGroupInput

func (GatewayConsumerGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayConsumerGroup)(nil)).Elem()
}

func (i GatewayConsumerGroupMap) ToGatewayConsumerGroupMapOutput() GatewayConsumerGroupMapOutput {
	return i.ToGatewayConsumerGroupMapOutputWithContext(context.Background())
}

func (i GatewayConsumerGroupMap) ToGatewayConsumerGroupMapOutputWithContext(ctx context.Context) GatewayConsumerGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupMapOutput)
}

type GatewayConsumerGroupOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConsumerGroup)(nil)).Elem()
}

func (o GatewayConsumerGroupOutput) ToGatewayConsumerGroupOutput() GatewayConsumerGroupOutput {
	return o
}

func (o GatewayConsumerGroupOutput) ToGatewayConsumerGroupOutputWithContext(ctx context.Context) GatewayConsumerGroupOutput {
	return o
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayConsumerGroupOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayConsumerGroup) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayConsumerGroupOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayConsumerGroup) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o GatewayConsumerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayConsumerGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GatewayConsumerGroupOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayConsumerGroup) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayConsumerGroupOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayConsumerGroup) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayConsumerGroupArrayOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayConsumerGroup)(nil)).Elem()
}

func (o GatewayConsumerGroupArrayOutput) ToGatewayConsumerGroupArrayOutput() GatewayConsumerGroupArrayOutput {
	return o
}

func (o GatewayConsumerGroupArrayOutput) ToGatewayConsumerGroupArrayOutputWithContext(ctx context.Context) GatewayConsumerGroupArrayOutput {
	return o
}

func (o GatewayConsumerGroupArrayOutput) Index(i pulumi.IntInput) GatewayConsumerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayConsumerGroup {
		return vs[0].([]*GatewayConsumerGroup)[vs[1].(int)]
	}).(GatewayConsumerGroupOutput)
}

type GatewayConsumerGroupMapOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayConsumerGroup)(nil)).Elem()
}

func (o GatewayConsumerGroupMapOutput) ToGatewayConsumerGroupMapOutput() GatewayConsumerGroupMapOutput {
	return o
}

func (o GatewayConsumerGroupMapOutput) ToGatewayConsumerGroupMapOutputWithContext(ctx context.Context) GatewayConsumerGroupMapOutput {
	return o
}

func (o GatewayConsumerGroupMapOutput) MapIndex(k pulumi.StringInput) GatewayConsumerGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayConsumerGroup {
		return vs[0].(map[string]*GatewayConsumerGroup)[vs[1].(string)]
	}).(GatewayConsumerGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupInput)(nil)).Elem(), &GatewayConsumerGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupArrayInput)(nil)).Elem(), GatewayConsumerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupMapInput)(nil)).Elem(), GatewayConsumerGroupMap{})
	pulumi.RegisterOutputType(GatewayConsumerGroupOutput{})
	pulumi.RegisterOutputType(GatewayConsumerGroupArrayOutput{})
	pulumi.RegisterOutputType(GatewayConsumerGroupMapOutput{})
}
