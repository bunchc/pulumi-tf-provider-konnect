// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupApiProduct(ctx *pulumi.Context, args *LookupApiProductArgs, opts ...pulumi.InvokeOption) (*LookupApiProductResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiProductResult
	err := ctx.Invoke("konnect:index/getApiProduct:getApiProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiProduct.
type LookupApiProductArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getApiProduct.
type LookupApiProductResult struct {
	CreatedAt    string                `pulumi:"createdAt"`
	Description  string                `pulumi:"description"`
	Id           string                `pulumi:"id"`
	Labels       map[string]string     `pulumi:"labels"`
	Name         string                `pulumi:"name"`
	PortalIds    []string              `pulumi:"portalIds"`
	Portals      []GetApiProductPortal `pulumi:"portals"`
	UpdatedAt    string                `pulumi:"updatedAt"`
	VersionCount float64               `pulumi:"versionCount"`
}

func LookupApiProductOutput(ctx *pulumi.Context, args LookupApiProductOutputArgs, opts ...pulumi.InvokeOption) LookupApiProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiProductResult, error) {
			args := v.(LookupApiProductArgs)
			r, err := LookupApiProduct(ctx, &args, opts...)
			var s LookupApiProductResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiProductResultOutput)
}

// A collection of arguments for invoking getApiProduct.
type LookupApiProductOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupApiProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiProductArgs)(nil)).Elem()
}

// A collection of values returned by getApiProduct.
type LookupApiProductResultOutput struct{ *pulumi.OutputState }

func (LookupApiProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiProductResult)(nil)).Elem()
}

func (o LookupApiProductResultOutput) ToLookupApiProductResultOutput() LookupApiProductResultOutput {
	return o
}

func (o LookupApiProductResultOutput) ToLookupApiProductResultOutputWithContext(ctx context.Context) LookupApiProductResultOutput {
	return o
}

func (o LookupApiProductResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiProductResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupApiProductResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiProductResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupApiProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiProductResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupApiProductResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApiProductResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupApiProductResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiProductResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupApiProductResultOutput) PortalIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupApiProductResult) []string { return v.PortalIds }).(pulumi.StringArrayOutput)
}

func (o LookupApiProductResultOutput) Portals() GetApiProductPortalArrayOutput {
	return o.ApplyT(func(v LookupApiProductResult) []GetApiProductPortal { return v.Portals }).(GetApiProductPortalArrayOutput)
}

func (o LookupApiProductResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiProductResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o LookupApiProductResultOutput) VersionCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupApiProductResult) float64 { return v.VersionCount }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterOutputType(LookupApiProductResultOutput{})
}
