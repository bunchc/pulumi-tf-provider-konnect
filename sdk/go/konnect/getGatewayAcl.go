// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGatewayAcl(ctx *pulumi.Context, args *LookupGatewayAclArgs, opts ...pulumi.InvokeOption) (*LookupGatewayAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayAclResult
	err := ctx.Invoke("konnect:index/getGatewayAcl:getGatewayAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayAcl.
type LookupGatewayAclArgs struct {
	ConsumerId     string `pulumi:"consumerId"`
	ControlPlaneId string `pulumi:"controlPlaneId"`
}

// A collection of values returned by getGatewayAcl.
type LookupGatewayAclResult struct {
	Consumer       GetGatewayAclConsumer `pulumi:"consumer"`
	ConsumerId     string                `pulumi:"consumerId"`
	ControlPlaneId string                `pulumi:"controlPlaneId"`
	CreatedAt      int                   `pulumi:"createdAt"`
	Group          string                `pulumi:"group"`
	Id             string                `pulumi:"id"`
	Tags           []string              `pulumi:"tags"`
}

func LookupGatewayAclOutput(ctx *pulumi.Context, args LookupGatewayAclOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayAclResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayAclResult, error) {
			args := v.(LookupGatewayAclArgs)
			r, err := LookupGatewayAcl(ctx, &args, opts...)
			var s LookupGatewayAclResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayAclResultOutput)
}

// A collection of arguments for invoking getGatewayAcl.
type LookupGatewayAclOutputArgs struct {
	ConsumerId     pulumi.StringInput `pulumi:"consumerId"`
	ControlPlaneId pulumi.StringInput `pulumi:"controlPlaneId"`
}

func (LookupGatewayAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayAclArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayAcl.
type LookupGatewayAclResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayAclResult)(nil)).Elem()
}

func (o LookupGatewayAclResultOutput) ToLookupGatewayAclResultOutput() LookupGatewayAclResultOutput {
	return o
}

func (o LookupGatewayAclResultOutput) ToLookupGatewayAclResultOutputWithContext(ctx context.Context) LookupGatewayAclResultOutput {
	return o
}

func (o LookupGatewayAclResultOutput) Consumer() GetGatewayAclConsumerOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) GetGatewayAclConsumer { return v.Consumer }).(GetGatewayAclConsumerOutput)
}

func (o LookupGatewayAclResultOutput) ConsumerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) string { return v.ConsumerId }).(pulumi.StringOutput)
}

func (o LookupGatewayAclResultOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) string { return v.ControlPlaneId }).(pulumi.StringOutput)
}

func (o LookupGatewayAclResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o LookupGatewayAclResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) string { return v.Group }).(pulumi.StringOutput)
}

func (o LookupGatewayAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGatewayAclResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayAclResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayAclResultOutput{})
}
