// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGatewayPluginPreFunction(ctx *pulumi.Context, args *LookupGatewayPluginPreFunctionArgs, opts ...pulumi.InvokeOption) (*LookupGatewayPluginPreFunctionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayPluginPreFunctionResult
	err := ctx.Invoke("konnect:index/getGatewayPluginPreFunction:getGatewayPluginPreFunction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayPluginPreFunction.
type LookupGatewayPluginPreFunctionArgs struct {
	ControlPlaneId string `pulumi:"controlPlaneId"`
}

// A collection of values returned by getGatewayPluginPreFunction.
type LookupGatewayPluginPreFunctionResult struct {
	Config         GetGatewayPluginPreFunctionConfig        `pulumi:"config"`
	Consumer       GetGatewayPluginPreFunctionConsumer      `pulumi:"consumer"`
	ConsumerGroup  GetGatewayPluginPreFunctionConsumerGroup `pulumi:"consumerGroup"`
	ControlPlaneId string                                   `pulumi:"controlPlaneId"`
	CreatedAt      int                                      `pulumi:"createdAt"`
	Enabled        bool                                     `pulumi:"enabled"`
	Id             string                                   `pulumi:"id"`
	InstanceName   string                                   `pulumi:"instanceName"`
	Protocols      []string                                 `pulumi:"protocols"`
	Route          GetGatewayPluginPreFunctionRoute         `pulumi:"route"`
	Service        GetGatewayPluginPreFunctionService       `pulumi:"service"`
	Tags           []string                                 `pulumi:"tags"`
	UpdatedAt      int                                      `pulumi:"updatedAt"`
}

func LookupGatewayPluginPreFunctionOutput(ctx *pulumi.Context, args LookupGatewayPluginPreFunctionOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayPluginPreFunctionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayPluginPreFunctionResult, error) {
			args := v.(LookupGatewayPluginPreFunctionArgs)
			r, err := LookupGatewayPluginPreFunction(ctx, &args, opts...)
			var s LookupGatewayPluginPreFunctionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayPluginPreFunctionResultOutput)
}

// A collection of arguments for invoking getGatewayPluginPreFunction.
type LookupGatewayPluginPreFunctionOutputArgs struct {
	ControlPlaneId pulumi.StringInput `pulumi:"controlPlaneId"`
}

func (LookupGatewayPluginPreFunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginPreFunctionArgs)(nil)).Elem()
}

// A collection of values returned by getGatewayPluginPreFunction.
type LookupGatewayPluginPreFunctionResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayPluginPreFunctionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginPreFunctionResult)(nil)).Elem()
}

func (o LookupGatewayPluginPreFunctionResultOutput) ToLookupGatewayPluginPreFunctionResultOutput() LookupGatewayPluginPreFunctionResultOutput {
	return o
}

func (o LookupGatewayPluginPreFunctionResultOutput) ToLookupGatewayPluginPreFunctionResultOutputWithContext(ctx context.Context) LookupGatewayPluginPreFunctionResultOutput {
	return o
}

func (o LookupGatewayPluginPreFunctionResultOutput) Config() GetGatewayPluginPreFunctionConfigOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) GetGatewayPluginPreFunctionConfig { return v.Config }).(GetGatewayPluginPreFunctionConfigOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Consumer() GetGatewayPluginPreFunctionConsumerOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) GetGatewayPluginPreFunctionConsumer { return v.Consumer }).(GetGatewayPluginPreFunctionConsumerOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) ConsumerGroup() GetGatewayPluginPreFunctionConsumerGroupOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) GetGatewayPluginPreFunctionConsumerGroup {
		return v.ConsumerGroup
	}).(GetGatewayPluginPreFunctionConsumerGroupOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) string { return v.ControlPlaneId }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) int { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Route() GetGatewayPluginPreFunctionRouteOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) GetGatewayPluginPreFunctionRoute { return v.Route }).(GetGatewayPluginPreFunctionRouteOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Service() GetGatewayPluginPreFunctionServiceOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) GetGatewayPluginPreFunctionService { return v.Service }).(GetGatewayPluginPreFunctionServiceOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginPreFunctionResultOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginPreFunctionResult) int { return v.UpdatedAt }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayPluginPreFunctionResultOutput{})
}
