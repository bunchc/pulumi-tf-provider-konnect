// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayConsumerGroupMember Resource
type GatewayConsumerGroupMember struct {
	pulumi.CustomResourceState

	// Requires replacement if changed.
	ConsumerGroupId pulumi.StringOutput `pulumi:"consumerGroupId"`
	// Requires replacement if changed.
	ConsumerId pulumi.StringPtrOutput `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
}

// NewGatewayConsumerGroupMember registers a new resource with the given unique name, arguments, and options.
func NewGatewayConsumerGroupMember(ctx *pulumi.Context,
	name string, args *GatewayConsumerGroupMemberArgs, opts ...pulumi.ResourceOption) (*GatewayConsumerGroupMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerGroupId'")
	}
	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayConsumerGroupMember
	err := ctx.RegisterResource("konnect:index/gatewayConsumerGroupMember:GatewayConsumerGroupMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayConsumerGroupMember gets an existing GatewayConsumerGroupMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayConsumerGroupMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayConsumerGroupMemberState, opts ...pulumi.ResourceOption) (*GatewayConsumerGroupMember, error) {
	var resource GatewayConsumerGroupMember
	err := ctx.ReadResource("konnect:index/gatewayConsumerGroupMember:GatewayConsumerGroupMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayConsumerGroupMember resources.
type gatewayConsumerGroupMemberState struct {
	// Requires replacement if changed.
	ConsumerGroupId *string `pulumi:"consumerGroupId"`
	// Requires replacement if changed.
	ConsumerId *string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
}

type GatewayConsumerGroupMemberState struct {
	// Requires replacement if changed.
	ConsumerGroupId pulumi.StringPtrInput
	// Requires replacement if changed.
	ConsumerId pulumi.StringPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringPtrInput
}

func (GatewayConsumerGroupMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayConsumerGroupMemberState)(nil)).Elem()
}

type gatewayConsumerGroupMemberArgs struct {
	// Requires replacement if changed.
	ConsumerGroupId string `pulumi:"consumerGroupId"`
	// Requires replacement if changed.
	ConsumerId *string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId string `pulumi:"controlPlaneId"`
}

// The set of arguments for constructing a GatewayConsumerGroupMember resource.
type GatewayConsumerGroupMemberArgs struct {
	// Requires replacement if changed.
	ConsumerGroupId pulumi.StringInput
	// Requires replacement if changed.
	ConsumerId pulumi.StringPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringInput
}

func (GatewayConsumerGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayConsumerGroupMemberArgs)(nil)).Elem()
}

type GatewayConsumerGroupMemberInput interface {
	pulumi.Input

	ToGatewayConsumerGroupMemberOutput() GatewayConsumerGroupMemberOutput
	ToGatewayConsumerGroupMemberOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberOutput
}

func (*GatewayConsumerGroupMember) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConsumerGroupMember)(nil)).Elem()
}

func (i *GatewayConsumerGroupMember) ToGatewayConsumerGroupMemberOutput() GatewayConsumerGroupMemberOutput {
	return i.ToGatewayConsumerGroupMemberOutputWithContext(context.Background())
}

func (i *GatewayConsumerGroupMember) ToGatewayConsumerGroupMemberOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupMemberOutput)
}

// GatewayConsumerGroupMemberArrayInput is an input type that accepts GatewayConsumerGroupMemberArray and GatewayConsumerGroupMemberArrayOutput values.
// You can construct a concrete instance of `GatewayConsumerGroupMemberArrayInput` via:
//
//	GatewayConsumerGroupMemberArray{ GatewayConsumerGroupMemberArgs{...} }
type GatewayConsumerGroupMemberArrayInput interface {
	pulumi.Input

	ToGatewayConsumerGroupMemberArrayOutput() GatewayConsumerGroupMemberArrayOutput
	ToGatewayConsumerGroupMemberArrayOutputWithContext(context.Context) GatewayConsumerGroupMemberArrayOutput
}

type GatewayConsumerGroupMemberArray []GatewayConsumerGroupMemberInput

func (GatewayConsumerGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayConsumerGroupMember)(nil)).Elem()
}

func (i GatewayConsumerGroupMemberArray) ToGatewayConsumerGroupMemberArrayOutput() GatewayConsumerGroupMemberArrayOutput {
	return i.ToGatewayConsumerGroupMemberArrayOutputWithContext(context.Background())
}

func (i GatewayConsumerGroupMemberArray) ToGatewayConsumerGroupMemberArrayOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupMemberArrayOutput)
}

// GatewayConsumerGroupMemberMapInput is an input type that accepts GatewayConsumerGroupMemberMap and GatewayConsumerGroupMemberMapOutput values.
// You can construct a concrete instance of `GatewayConsumerGroupMemberMapInput` via:
//
//	GatewayConsumerGroupMemberMap{ "key": GatewayConsumerGroupMemberArgs{...} }
type GatewayConsumerGroupMemberMapInput interface {
	pulumi.Input

	ToGatewayConsumerGroupMemberMapOutput() GatewayConsumerGroupMemberMapOutput
	ToGatewayConsumerGroupMemberMapOutputWithContext(context.Context) GatewayConsumerGroupMemberMapOutput
}

type GatewayConsumerGroupMemberMap map[string]GatewayConsumerGroupMemberInput

func (GatewayConsumerGroupMemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayConsumerGroupMember)(nil)).Elem()
}

func (i GatewayConsumerGroupMemberMap) ToGatewayConsumerGroupMemberMapOutput() GatewayConsumerGroupMemberMapOutput {
	return i.ToGatewayConsumerGroupMemberMapOutputWithContext(context.Background())
}

func (i GatewayConsumerGroupMemberMap) ToGatewayConsumerGroupMemberMapOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConsumerGroupMemberMapOutput)
}

type GatewayConsumerGroupMemberOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConsumerGroupMember)(nil)).Elem()
}

func (o GatewayConsumerGroupMemberOutput) ToGatewayConsumerGroupMemberOutput() GatewayConsumerGroupMemberOutput {
	return o
}

func (o GatewayConsumerGroupMemberOutput) ToGatewayConsumerGroupMemberOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberOutput {
	return o
}

// Requires replacement if changed.
func (o GatewayConsumerGroupMemberOutput) ConsumerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayConsumerGroupMember) pulumi.StringOutput { return v.ConsumerGroupId }).(pulumi.StringOutput)
}

// Requires replacement if changed.
func (o GatewayConsumerGroupMemberOutput) ConsumerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayConsumerGroupMember) pulumi.StringPtrOutput { return v.ConsumerId }).(pulumi.StringPtrOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
func (o GatewayConsumerGroupMemberOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayConsumerGroupMember) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

type GatewayConsumerGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayConsumerGroupMember)(nil)).Elem()
}

func (o GatewayConsumerGroupMemberArrayOutput) ToGatewayConsumerGroupMemberArrayOutput() GatewayConsumerGroupMemberArrayOutput {
	return o
}

func (o GatewayConsumerGroupMemberArrayOutput) ToGatewayConsumerGroupMemberArrayOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberArrayOutput {
	return o
}

func (o GatewayConsumerGroupMemberArrayOutput) Index(i pulumi.IntInput) GatewayConsumerGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayConsumerGroupMember {
		return vs[0].([]*GatewayConsumerGroupMember)[vs[1].(int)]
	}).(GatewayConsumerGroupMemberOutput)
}

type GatewayConsumerGroupMemberMapOutput struct{ *pulumi.OutputState }

func (GatewayConsumerGroupMemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayConsumerGroupMember)(nil)).Elem()
}

func (o GatewayConsumerGroupMemberMapOutput) ToGatewayConsumerGroupMemberMapOutput() GatewayConsumerGroupMemberMapOutput {
	return o
}

func (o GatewayConsumerGroupMemberMapOutput) ToGatewayConsumerGroupMemberMapOutputWithContext(ctx context.Context) GatewayConsumerGroupMemberMapOutput {
	return o
}

func (o GatewayConsumerGroupMemberMapOutput) MapIndex(k pulumi.StringInput) GatewayConsumerGroupMemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayConsumerGroupMember {
		return vs[0].(map[string]*GatewayConsumerGroupMember)[vs[1].(string)]
	}).(GatewayConsumerGroupMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupMemberInput)(nil)).Elem(), &GatewayConsumerGroupMember{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupMemberArrayInput)(nil)).Elem(), GatewayConsumerGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConsumerGroupMemberMapInput)(nil)).Elem(), GatewayConsumerGroupMemberMap{})
	pulumi.RegisterOutputType(GatewayConsumerGroupMemberOutput{})
	pulumi.RegisterOutputType(GatewayConsumerGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GatewayConsumerGroupMemberMapOutput{})
}
