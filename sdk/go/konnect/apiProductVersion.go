// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// APIProductVersion Resource
type ApiProductVersion struct {
	pulumi.CustomResourceState

	// The API Product ID
	ApiProductId pulumi.StringOutput `pulumi:"apiProductId"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
	Deprecated     pulumi.BoolOutput                     `pulumi:"deprecated"`
	GatewayService ApiProductVersionGatewayServiceOutput `pulumi:"gatewayService"`
	// The version name of the API product version.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of portals which this API product version is configured for
	Portals ApiProductVersionPortalArrayOutput `pulumi:"portals"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewApiProductVersion registers a new resource with the given unique name, arguments, and options.
func NewApiProductVersion(ctx *pulumi.Context,
	name string, args *ApiProductVersionArgs, opts ...pulumi.ResourceOption) (*ApiProductVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiProductId == nil {
		return nil, errors.New("invalid value for required argument 'ApiProductId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiProductVersion
	err := ctx.RegisterResource("konnect:index/apiProductVersion:ApiProductVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiProductVersion gets an existing ApiProductVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiProductVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiProductVersionState, opts ...pulumi.ResourceOption) (*ApiProductVersion, error) {
	var resource ApiProductVersion
	err := ctx.ReadResource("konnect:index/apiProductVersion:ApiProductVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiProductVersion resources.
type apiProductVersionState struct {
	// The API Product ID
	ApiProductId *string `pulumi:"apiProductId"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt *string `pulumi:"createdAt"`
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
	Deprecated     *bool                            `pulumi:"deprecated"`
	GatewayService *ApiProductVersionGatewayService `pulumi:"gatewayService"`
	// The version name of the API product version.
	Name *string `pulumi:"name"`
	// The list of portals which this API product version is configured for
	Portals []ApiProductVersionPortal `pulumi:"portals"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ApiProductVersionState struct {
	// The API Product ID
	ApiProductId pulumi.StringPtrInput
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt pulumi.StringPtrInput
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
	Deprecated     pulumi.BoolPtrInput
	GatewayService ApiProductVersionGatewayServicePtrInput
	// The version name of the API product version.
	Name pulumi.StringPtrInput
	// The list of portals which this API product version is configured for
	Portals ApiProductVersionPortalArrayInput
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt pulumi.StringPtrInput
}

func (ApiProductVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiProductVersionState)(nil)).Elem()
}

type apiProductVersionArgs struct {
	// The API Product ID
	ApiProductId string `pulumi:"apiProductId"`
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
	Deprecated     *bool                            `pulumi:"deprecated"`
	GatewayService *ApiProductVersionGatewayService `pulumi:"gatewayService"`
	// The version name of the API product version.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ApiProductVersion resource.
type ApiProductVersionArgs struct {
	// The API Product ID
	ApiProductId pulumi.StringInput
	// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
	Deprecated     pulumi.BoolPtrInput
	GatewayService ApiProductVersionGatewayServicePtrInput
	// The version name of the API product version.
	Name pulumi.StringPtrInput
}

func (ApiProductVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiProductVersionArgs)(nil)).Elem()
}

type ApiProductVersionInput interface {
	pulumi.Input

	ToApiProductVersionOutput() ApiProductVersionOutput
	ToApiProductVersionOutputWithContext(ctx context.Context) ApiProductVersionOutput
}

func (*ApiProductVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProductVersion)(nil)).Elem()
}

func (i *ApiProductVersion) ToApiProductVersionOutput() ApiProductVersionOutput {
	return i.ToApiProductVersionOutputWithContext(context.Background())
}

func (i *ApiProductVersion) ToApiProductVersionOutputWithContext(ctx context.Context) ApiProductVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductVersionOutput)
}

// ApiProductVersionArrayInput is an input type that accepts ApiProductVersionArray and ApiProductVersionArrayOutput values.
// You can construct a concrete instance of `ApiProductVersionArrayInput` via:
//
//	ApiProductVersionArray{ ApiProductVersionArgs{...} }
type ApiProductVersionArrayInput interface {
	pulumi.Input

	ToApiProductVersionArrayOutput() ApiProductVersionArrayOutput
	ToApiProductVersionArrayOutputWithContext(context.Context) ApiProductVersionArrayOutput
}

type ApiProductVersionArray []ApiProductVersionInput

func (ApiProductVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiProductVersion)(nil)).Elem()
}

func (i ApiProductVersionArray) ToApiProductVersionArrayOutput() ApiProductVersionArrayOutput {
	return i.ToApiProductVersionArrayOutputWithContext(context.Background())
}

func (i ApiProductVersionArray) ToApiProductVersionArrayOutputWithContext(ctx context.Context) ApiProductVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductVersionArrayOutput)
}

// ApiProductVersionMapInput is an input type that accepts ApiProductVersionMap and ApiProductVersionMapOutput values.
// You can construct a concrete instance of `ApiProductVersionMapInput` via:
//
//	ApiProductVersionMap{ "key": ApiProductVersionArgs{...} }
type ApiProductVersionMapInput interface {
	pulumi.Input

	ToApiProductVersionMapOutput() ApiProductVersionMapOutput
	ToApiProductVersionMapOutputWithContext(context.Context) ApiProductVersionMapOutput
}

type ApiProductVersionMap map[string]ApiProductVersionInput

func (ApiProductVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiProductVersion)(nil)).Elem()
}

func (i ApiProductVersionMap) ToApiProductVersionMapOutput() ApiProductVersionMapOutput {
	return i.ToApiProductVersionMapOutputWithContext(context.Background())
}

func (i ApiProductVersionMap) ToApiProductVersionMapOutputWithContext(ctx context.Context) ApiProductVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiProductVersionMapOutput)
}

type ApiProductVersionOutput struct{ *pulumi.OutputState }

func (ApiProductVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProductVersion)(nil)).Elem()
}

func (o ApiProductVersionOutput) ToApiProductVersionOutput() ApiProductVersionOutput {
	return o
}

func (o ApiProductVersionOutput) ToApiProductVersionOutputWithContext(ctx context.Context) ApiProductVersionOutput {
	return o
}

// The API Product ID
func (o ApiProductVersionOutput) ApiProductId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductVersion) pulumi.StringOutput { return v.ApiProductId }).(pulumi.StringOutput)
}

// An ISO-8601 timestamp representation of entity creation date.
func (o ApiProductVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Indicates if the version of the API product is deprecated. Applies deprecation or removes deprecation from all related portal product versions. This field is deprecated: Use [PortalProductVersion.deprecated](https://docs.konghq.com/konnect/api/portal-management/latest/#/Portal%20Product%20Versions/create-portal-product-version) instead.
func (o ApiProductVersionOutput) Deprecated() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApiProductVersion) pulumi.BoolOutput { return v.Deprecated }).(pulumi.BoolOutput)
}

func (o ApiProductVersionOutput) GatewayService() ApiProductVersionGatewayServiceOutput {
	return o.ApplyT(func(v *ApiProductVersion) ApiProductVersionGatewayServiceOutput { return v.GatewayService }).(ApiProductVersionGatewayServiceOutput)
}

// The version name of the API product version.
func (o ApiProductVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of portals which this API product version is configured for
func (o ApiProductVersionOutput) Portals() ApiProductVersionPortalArrayOutput {
	return o.ApplyT(func(v *ApiProductVersion) ApiProductVersionPortalArrayOutput { return v.Portals }).(ApiProductVersionPortalArrayOutput)
}

// An ISO-8601 timestamp representation of entity update date.
func (o ApiProductVersionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiProductVersion) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ApiProductVersionArrayOutput struct{ *pulumi.OutputState }

func (ApiProductVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiProductVersion)(nil)).Elem()
}

func (o ApiProductVersionArrayOutput) ToApiProductVersionArrayOutput() ApiProductVersionArrayOutput {
	return o
}

func (o ApiProductVersionArrayOutput) ToApiProductVersionArrayOutputWithContext(ctx context.Context) ApiProductVersionArrayOutput {
	return o
}

func (o ApiProductVersionArrayOutput) Index(i pulumi.IntInput) ApiProductVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiProductVersion {
		return vs[0].([]*ApiProductVersion)[vs[1].(int)]
	}).(ApiProductVersionOutput)
}

type ApiProductVersionMapOutput struct{ *pulumi.OutputState }

func (ApiProductVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiProductVersion)(nil)).Elem()
}

func (o ApiProductVersionMapOutput) ToApiProductVersionMapOutput() ApiProductVersionMapOutput {
	return o
}

func (o ApiProductVersionMapOutput) ToApiProductVersionMapOutputWithContext(ctx context.Context) ApiProductVersionMapOutput {
	return o
}

func (o ApiProductVersionMapOutput) MapIndex(k pulumi.StringInput) ApiProductVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiProductVersion {
		return vs[0].(map[string]*ApiProductVersion)[vs[1].(string)]
	}).(ApiProductVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductVersionInput)(nil)).Elem(), &ApiProductVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductVersionArrayInput)(nil)).Elem(), ApiProductVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiProductVersionMapInput)(nil)).Elem(), ApiProductVersionMap{})
	pulumi.RegisterOutputType(ApiProductVersionOutput{})
	pulumi.RegisterOutputType(ApiProductVersionArrayOutput{})
	pulumi.RegisterOutputType(ApiProductVersionMapOutput{})
}
