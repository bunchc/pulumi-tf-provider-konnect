// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPortal(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupPortalResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPortalResult
	err := ctx.Invoke("konnect:index/getPortal:getPortal", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getPortal.
type LookupPortalResult struct {
	ApplicationCount                 float64           `pulumi:"applicationCount"`
	AutoApproveApplications          bool              `pulumi:"autoApproveApplications"`
	AutoApproveDevelopers            bool              `pulumi:"autoApproveDevelopers"`
	CreatedAt                        string            `pulumi:"createdAt"`
	CustomClientDomain               string            `pulumi:"customClientDomain"`
	CustomDomain                     string            `pulumi:"customDomain"`
	DefaultApplicationAuthStrategyId string            `pulumi:"defaultApplicationAuthStrategyId"`
	DefaultDomain                    string            `pulumi:"defaultDomain"`
	Description                      string            `pulumi:"description"`
	DeveloperCount                   float64           `pulumi:"developerCount"`
	DisplayName                      string            `pulumi:"displayName"`
	Id                               string            `pulumi:"id"`
	IsPublic                         bool              `pulumi:"isPublic"`
	Labels                           map[string]string `pulumi:"labels"`
	Name                             string            `pulumi:"name"`
	PublishedProductCount            float64           `pulumi:"publishedProductCount"`
	RbacEnabled                      bool              `pulumi:"rbacEnabled"`
	UpdatedAt                        string            `pulumi:"updatedAt"`
}

func LookupPortalOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) LookupPortalResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (LookupPortalResult, error) {
		r, err := LookupPortal(ctx, opts...)
		var s LookupPortalResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(LookupPortalResultOutput)
}

// A collection of values returned by getPortal.
type LookupPortalResultOutput struct{ *pulumi.OutputState }

func (LookupPortalResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPortalResult)(nil)).Elem()
}

func (o LookupPortalResultOutput) ToLookupPortalResultOutput() LookupPortalResultOutput {
	return o
}

func (o LookupPortalResultOutput) ToLookupPortalResultOutputWithContext(ctx context.Context) LookupPortalResultOutput {
	return o
}

func (o LookupPortalResultOutput) ApplicationCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupPortalResult) float64 { return v.ApplicationCount }).(pulumi.Float64Output)
}

func (o LookupPortalResultOutput) AutoApproveApplications() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPortalResult) bool { return v.AutoApproveApplications }).(pulumi.BoolOutput)
}

func (o LookupPortalResultOutput) AutoApproveDevelopers() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPortalResult) bool { return v.AutoApproveDevelopers }).(pulumi.BoolOutput)
}

func (o LookupPortalResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) CustomClientDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.CustomClientDomain }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) CustomDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.CustomDomain }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) DefaultApplicationAuthStrategyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.DefaultApplicationAuthStrategyId }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) DefaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.DefaultDomain }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) DeveloperCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupPortalResult) float64 { return v.DeveloperCount }).(pulumi.Float64Output)
}

func (o LookupPortalResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPortalResult) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

func (o LookupPortalResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPortalResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupPortalResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPortalResultOutput) PublishedProductCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupPortalResult) float64 { return v.PublishedProductCount }).(pulumi.Float64Output)
}

func (o LookupPortalResultOutput) RbacEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPortalResult) bool { return v.RbacEnabled }).(pulumi.BoolOutput)
}

func (o LookupPortalResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPortalResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPortalResultOutput{})
}
