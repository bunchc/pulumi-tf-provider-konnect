// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SystemAccountTeam Resource
type SystemAccountTeam struct {
	pulumi.CustomResourceState

	// ID of the system account. Requires replacement if changed.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// ID of the team. Requires replacement if changed.
	TeamId pulumi.StringOutput `pulumi:"teamId"`
}

// NewSystemAccountTeam registers a new resource with the given unique name, arguments, and options.
func NewSystemAccountTeam(ctx *pulumi.Context,
	name string, args *SystemAccountTeamArgs, opts ...pulumi.ResourceOption) (*SystemAccountTeam, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TeamId == nil {
		return nil, errors.New("invalid value for required argument 'TeamId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SystemAccountTeam
	err := ctx.RegisterResource("konnect:index/systemAccountTeam:SystemAccountTeam", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemAccountTeam gets an existing SystemAccountTeam resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemAccountTeam(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemAccountTeamState, opts ...pulumi.ResourceOption) (*SystemAccountTeam, error) {
	var resource SystemAccountTeam
	err := ctx.ReadResource("konnect:index/systemAccountTeam:SystemAccountTeam", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemAccountTeam resources.
type systemAccountTeamState struct {
	// ID of the system account. Requires replacement if changed.
	AccountId *string `pulumi:"accountId"`
	// ID of the team. Requires replacement if changed.
	TeamId *string `pulumi:"teamId"`
}

type SystemAccountTeamState struct {
	// ID of the system account. Requires replacement if changed.
	AccountId pulumi.StringPtrInput
	// ID of the team. Requires replacement if changed.
	TeamId pulumi.StringPtrInput
}

func (SystemAccountTeamState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAccountTeamState)(nil)).Elem()
}

type systemAccountTeamArgs struct {
	// ID of the system account. Requires replacement if changed.
	AccountId *string `pulumi:"accountId"`
	// ID of the team. Requires replacement if changed.
	TeamId string `pulumi:"teamId"`
}

// The set of arguments for constructing a SystemAccountTeam resource.
type SystemAccountTeamArgs struct {
	// ID of the system account. Requires replacement if changed.
	AccountId pulumi.StringPtrInput
	// ID of the team. Requires replacement if changed.
	TeamId pulumi.StringInput
}

func (SystemAccountTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemAccountTeamArgs)(nil)).Elem()
}

type SystemAccountTeamInput interface {
	pulumi.Input

	ToSystemAccountTeamOutput() SystemAccountTeamOutput
	ToSystemAccountTeamOutputWithContext(ctx context.Context) SystemAccountTeamOutput
}

func (*SystemAccountTeam) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccountTeam)(nil)).Elem()
}

func (i *SystemAccountTeam) ToSystemAccountTeamOutput() SystemAccountTeamOutput {
	return i.ToSystemAccountTeamOutputWithContext(context.Background())
}

func (i *SystemAccountTeam) ToSystemAccountTeamOutputWithContext(ctx context.Context) SystemAccountTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccountTeamOutput)
}

// SystemAccountTeamArrayInput is an input type that accepts SystemAccountTeamArray and SystemAccountTeamArrayOutput values.
// You can construct a concrete instance of `SystemAccountTeamArrayInput` via:
//
//	SystemAccountTeamArray{ SystemAccountTeamArgs{...} }
type SystemAccountTeamArrayInput interface {
	pulumi.Input

	ToSystemAccountTeamArrayOutput() SystemAccountTeamArrayOutput
	ToSystemAccountTeamArrayOutputWithContext(context.Context) SystemAccountTeamArrayOutput
}

type SystemAccountTeamArray []SystemAccountTeamInput

func (SystemAccountTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAccountTeam)(nil)).Elem()
}

func (i SystemAccountTeamArray) ToSystemAccountTeamArrayOutput() SystemAccountTeamArrayOutput {
	return i.ToSystemAccountTeamArrayOutputWithContext(context.Background())
}

func (i SystemAccountTeamArray) ToSystemAccountTeamArrayOutputWithContext(ctx context.Context) SystemAccountTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccountTeamArrayOutput)
}

// SystemAccountTeamMapInput is an input type that accepts SystemAccountTeamMap and SystemAccountTeamMapOutput values.
// You can construct a concrete instance of `SystemAccountTeamMapInput` via:
//
//	SystemAccountTeamMap{ "key": SystemAccountTeamArgs{...} }
type SystemAccountTeamMapInput interface {
	pulumi.Input

	ToSystemAccountTeamMapOutput() SystemAccountTeamMapOutput
	ToSystemAccountTeamMapOutputWithContext(context.Context) SystemAccountTeamMapOutput
}

type SystemAccountTeamMap map[string]SystemAccountTeamInput

func (SystemAccountTeamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAccountTeam)(nil)).Elem()
}

func (i SystemAccountTeamMap) ToSystemAccountTeamMapOutput() SystemAccountTeamMapOutput {
	return i.ToSystemAccountTeamMapOutputWithContext(context.Background())
}

func (i SystemAccountTeamMap) ToSystemAccountTeamMapOutputWithContext(ctx context.Context) SystemAccountTeamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemAccountTeamMapOutput)
}

type SystemAccountTeamOutput struct{ *pulumi.OutputState }

func (SystemAccountTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemAccountTeam)(nil)).Elem()
}

func (o SystemAccountTeamOutput) ToSystemAccountTeamOutput() SystemAccountTeamOutput {
	return o
}

func (o SystemAccountTeamOutput) ToSystemAccountTeamOutputWithContext(ctx context.Context) SystemAccountTeamOutput {
	return o
}

// ID of the system account. Requires replacement if changed.
func (o SystemAccountTeamOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemAccountTeam) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// ID of the team. Requires replacement if changed.
func (o SystemAccountTeamOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v *SystemAccountTeam) pulumi.StringOutput { return v.TeamId }).(pulumi.StringOutput)
}

type SystemAccountTeamArrayOutput struct{ *pulumi.OutputState }

func (SystemAccountTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SystemAccountTeam)(nil)).Elem()
}

func (o SystemAccountTeamArrayOutput) ToSystemAccountTeamArrayOutput() SystemAccountTeamArrayOutput {
	return o
}

func (o SystemAccountTeamArrayOutput) ToSystemAccountTeamArrayOutputWithContext(ctx context.Context) SystemAccountTeamArrayOutput {
	return o
}

func (o SystemAccountTeamArrayOutput) Index(i pulumi.IntInput) SystemAccountTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SystemAccountTeam {
		return vs[0].([]*SystemAccountTeam)[vs[1].(int)]
	}).(SystemAccountTeamOutput)
}

type SystemAccountTeamMapOutput struct{ *pulumi.OutputState }

func (SystemAccountTeamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SystemAccountTeam)(nil)).Elem()
}

func (o SystemAccountTeamMapOutput) ToSystemAccountTeamMapOutput() SystemAccountTeamMapOutput {
	return o
}

func (o SystemAccountTeamMapOutput) ToSystemAccountTeamMapOutputWithContext(ctx context.Context) SystemAccountTeamMapOutput {
	return o
}

func (o SystemAccountTeamMapOutput) MapIndex(k pulumi.StringInput) SystemAccountTeamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SystemAccountTeam {
		return vs[0].(map[string]*SystemAccountTeam)[vs[1].(string)]
	}).(SystemAccountTeamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccountTeamInput)(nil)).Elem(), &SystemAccountTeam{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccountTeamArrayInput)(nil)).Elem(), SystemAccountTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SystemAccountTeamMapInput)(nil)).Elem(), SystemAccountTeamMap{})
	pulumi.RegisterOutputType(SystemAccountTeamOutput{})
	pulumi.RegisterOutputType(SystemAccountTeamArrayOutput{})
	pulumi.RegisterOutputType(SystemAccountTeamMapOutput{})
}
