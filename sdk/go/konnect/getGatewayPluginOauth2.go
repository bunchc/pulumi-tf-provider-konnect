// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGatewayPluginOauth2(ctx *pulumi.Context, args *LookupGatewayPluginOauth2Args, opts ...pulumi.InvokeOption) (*LookupGatewayPluginOauth2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGatewayPluginOauth2Result
	err := ctx.Invoke("konnect:index/getGatewayPluginOauth2:getGatewayPluginOauth2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGatewayPluginOauth2.
type LookupGatewayPluginOauth2Args struct {
	ControlPlaneId string `pulumi:"controlPlaneId"`
}

// A collection of values returned by getGatewayPluginOauth2.
type LookupGatewayPluginOauth2Result struct {
	Config         GetGatewayPluginOauth2Config        `pulumi:"config"`
	Consumer       GetGatewayPluginOauth2Consumer      `pulumi:"consumer"`
	ConsumerGroup  GetGatewayPluginOauth2ConsumerGroup `pulumi:"consumerGroup"`
	ControlPlaneId string                              `pulumi:"controlPlaneId"`
	CreatedAt      int                                 `pulumi:"createdAt"`
	Enabled        bool                                `pulumi:"enabled"`
	Id             string                              `pulumi:"id"`
	InstanceName   string                              `pulumi:"instanceName"`
	Protocols      []string                            `pulumi:"protocols"`
	Route          GetGatewayPluginOauth2Route         `pulumi:"route"`
	Service        GetGatewayPluginOauth2Service       `pulumi:"service"`
	Tags           []string                            `pulumi:"tags"`
	UpdatedAt      int                                 `pulumi:"updatedAt"`
}

func LookupGatewayPluginOauth2Output(ctx *pulumi.Context, args LookupGatewayPluginOauth2OutputArgs, opts ...pulumi.InvokeOption) LookupGatewayPluginOauth2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayPluginOauth2Result, error) {
			args := v.(LookupGatewayPluginOauth2Args)
			r, err := LookupGatewayPluginOauth2(ctx, &args, opts...)
			var s LookupGatewayPluginOauth2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGatewayPluginOauth2ResultOutput)
}

// A collection of arguments for invoking getGatewayPluginOauth2.
type LookupGatewayPluginOauth2OutputArgs struct {
	ControlPlaneId pulumi.StringInput `pulumi:"controlPlaneId"`
}

func (LookupGatewayPluginOauth2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginOauth2Args)(nil)).Elem()
}

// A collection of values returned by getGatewayPluginOauth2.
type LookupGatewayPluginOauth2ResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayPluginOauth2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayPluginOauth2Result)(nil)).Elem()
}

func (o LookupGatewayPluginOauth2ResultOutput) ToLookupGatewayPluginOauth2ResultOutput() LookupGatewayPluginOauth2ResultOutput {
	return o
}

func (o LookupGatewayPluginOauth2ResultOutput) ToLookupGatewayPluginOauth2ResultOutputWithContext(ctx context.Context) LookupGatewayPluginOauth2ResultOutput {
	return o
}

func (o LookupGatewayPluginOauth2ResultOutput) Config() GetGatewayPluginOauth2ConfigOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) GetGatewayPluginOauth2Config { return v.Config }).(GetGatewayPluginOauth2ConfigOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Consumer() GetGatewayPluginOauth2ConsumerOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) GetGatewayPluginOauth2Consumer { return v.Consumer }).(GetGatewayPluginOauth2ConsumerOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) ConsumerGroup() GetGatewayPluginOauth2ConsumerGroupOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) GetGatewayPluginOauth2ConsumerGroup { return v.ConsumerGroup }).(GetGatewayPluginOauth2ConsumerGroupOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) string { return v.ControlPlaneId }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) int { return v.CreatedAt }).(pulumi.IntOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Route() GetGatewayPluginOauth2RouteOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) GetGatewayPluginOauth2Route { return v.Route }).(GetGatewayPluginOauth2RouteOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Service() GetGatewayPluginOauth2ServiceOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) GetGatewayPluginOauth2Service { return v.Service }).(GetGatewayPluginOauth2ServiceOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupGatewayPluginOauth2ResultOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGatewayPluginOauth2Result) int { return v.UpdatedAt }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayPluginOauth2ResultOutput{})
}
