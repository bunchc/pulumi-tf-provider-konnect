// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayPluginOpenidConnect Resource
type GatewayPluginOpenidConnect struct {
	pulumi.CustomResourceState

	Config GatewayPluginOpenidConnectConfigOutput `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginOpenidConnectConsumerOutput      `pulumi:"consumer"`
	ConsumerGroup GatewayPluginOpenidConnectConsumerGroupOutput `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      pulumi.BoolOutput   `pulumi:"enabled"`
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginOpenidConnectRouteOutput `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginOpenidConnectServiceOutput `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayPluginOpenidConnect registers a new resource with the given unique name, arguments, and options.
func NewGatewayPluginOpenidConnect(ctx *pulumi.Context,
	name string, args *GatewayPluginOpenidConnectArgs, opts ...pulumi.ResourceOption) (*GatewayPluginOpenidConnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayPluginOpenidConnect
	err := ctx.RegisterResource("konnect:index/gatewayPluginOpenidConnect:GatewayPluginOpenidConnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayPluginOpenidConnect gets an existing GatewayPluginOpenidConnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayPluginOpenidConnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayPluginOpenidConnectState, opts ...pulumi.ResourceOption) (*GatewayPluginOpenidConnect, error) {
	var resource GatewayPluginOpenidConnect
	err := ctx.ReadResource("konnect:index/gatewayPluginOpenidConnect:GatewayPluginOpenidConnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayPluginOpenidConnect resources.
type gatewayPluginOpenidConnectState struct {
	Config *GatewayPluginOpenidConnectConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginOpenidConnectConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginOpenidConnectConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginOpenidConnectRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginOpenidConnectService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayPluginOpenidConnectState struct {
	Config GatewayPluginOpenidConnectConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginOpenidConnectConsumerPtrInput
	ConsumerGroup GatewayPluginOpenidConnectConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginOpenidConnectRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginOpenidConnectServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayPluginOpenidConnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginOpenidConnectState)(nil)).Elem()
}

type gatewayPluginOpenidConnectArgs struct {
	Config *GatewayPluginOpenidConnectConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginOpenidConnectConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginOpenidConnectConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginOpenidConnectRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginOpenidConnectService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayPluginOpenidConnect resource.
type GatewayPluginOpenidConnectArgs struct {
	Config GatewayPluginOpenidConnectConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginOpenidConnectConsumerPtrInput
	ConsumerGroup GatewayPluginOpenidConnectConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginOpenidConnectRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginOpenidConnectServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
}

func (GatewayPluginOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginOpenidConnectArgs)(nil)).Elem()
}

type GatewayPluginOpenidConnectInput interface {
	pulumi.Input

	ToGatewayPluginOpenidConnectOutput() GatewayPluginOpenidConnectOutput
	ToGatewayPluginOpenidConnectOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectOutput
}

func (*GatewayPluginOpenidConnect) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginOpenidConnect)(nil)).Elem()
}

func (i *GatewayPluginOpenidConnect) ToGatewayPluginOpenidConnectOutput() GatewayPluginOpenidConnectOutput {
	return i.ToGatewayPluginOpenidConnectOutputWithContext(context.Background())
}

func (i *GatewayPluginOpenidConnect) ToGatewayPluginOpenidConnectOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginOpenidConnectOutput)
}

// GatewayPluginOpenidConnectArrayInput is an input type that accepts GatewayPluginOpenidConnectArray and GatewayPluginOpenidConnectArrayOutput values.
// You can construct a concrete instance of `GatewayPluginOpenidConnectArrayInput` via:
//
//	GatewayPluginOpenidConnectArray{ GatewayPluginOpenidConnectArgs{...} }
type GatewayPluginOpenidConnectArrayInput interface {
	pulumi.Input

	ToGatewayPluginOpenidConnectArrayOutput() GatewayPluginOpenidConnectArrayOutput
	ToGatewayPluginOpenidConnectArrayOutputWithContext(context.Context) GatewayPluginOpenidConnectArrayOutput
}

type GatewayPluginOpenidConnectArray []GatewayPluginOpenidConnectInput

func (GatewayPluginOpenidConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginOpenidConnect)(nil)).Elem()
}

func (i GatewayPluginOpenidConnectArray) ToGatewayPluginOpenidConnectArrayOutput() GatewayPluginOpenidConnectArrayOutput {
	return i.ToGatewayPluginOpenidConnectArrayOutputWithContext(context.Background())
}

func (i GatewayPluginOpenidConnectArray) ToGatewayPluginOpenidConnectArrayOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginOpenidConnectArrayOutput)
}

// GatewayPluginOpenidConnectMapInput is an input type that accepts GatewayPluginOpenidConnectMap and GatewayPluginOpenidConnectMapOutput values.
// You can construct a concrete instance of `GatewayPluginOpenidConnectMapInput` via:
//
//	GatewayPluginOpenidConnectMap{ "key": GatewayPluginOpenidConnectArgs{...} }
type GatewayPluginOpenidConnectMapInput interface {
	pulumi.Input

	ToGatewayPluginOpenidConnectMapOutput() GatewayPluginOpenidConnectMapOutput
	ToGatewayPluginOpenidConnectMapOutputWithContext(context.Context) GatewayPluginOpenidConnectMapOutput
}

type GatewayPluginOpenidConnectMap map[string]GatewayPluginOpenidConnectInput

func (GatewayPluginOpenidConnectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginOpenidConnect)(nil)).Elem()
}

func (i GatewayPluginOpenidConnectMap) ToGatewayPluginOpenidConnectMapOutput() GatewayPluginOpenidConnectMapOutput {
	return i.ToGatewayPluginOpenidConnectMapOutputWithContext(context.Background())
}

func (i GatewayPluginOpenidConnectMap) ToGatewayPluginOpenidConnectMapOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginOpenidConnectMapOutput)
}

type GatewayPluginOpenidConnectOutput struct{ *pulumi.OutputState }

func (GatewayPluginOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginOpenidConnect)(nil)).Elem()
}

func (o GatewayPluginOpenidConnectOutput) ToGatewayPluginOpenidConnectOutput() GatewayPluginOpenidConnectOutput {
	return o
}

func (o GatewayPluginOpenidConnectOutput) ToGatewayPluginOpenidConnectOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectOutput {
	return o
}

func (o GatewayPluginOpenidConnectOutput) Config() GatewayPluginOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) GatewayPluginOpenidConnectConfigOutput { return v.Config }).(GatewayPluginOpenidConnectConfigOutput)
}

// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
func (o GatewayPluginOpenidConnectOutput) Consumer() GatewayPluginOpenidConnectConsumerOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) GatewayPluginOpenidConnectConsumerOutput { return v.Consumer }).(GatewayPluginOpenidConnectConsumerOutput)
}

func (o GatewayPluginOpenidConnectOutput) ConsumerGroup() GatewayPluginOpenidConnectConsumerGroupOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) GatewayPluginOpenidConnectConsumerGroupOutput {
		return v.ConsumerGroup
	}).(GatewayPluginOpenidConnectConsumerGroupOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayPluginOpenidConnectOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayPluginOpenidConnectOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Whether the plugin is applied.
func (o GatewayPluginOpenidConnectOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GatewayPluginOpenidConnectOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
func (o GatewayPluginOpenidConnectOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
func (o GatewayPluginOpenidConnectOutput) Route() GatewayPluginOpenidConnectRouteOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) GatewayPluginOpenidConnectRouteOutput { return v.Route }).(GatewayPluginOpenidConnectRouteOutput)
}

// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
func (o GatewayPluginOpenidConnectOutput) Service() GatewayPluginOpenidConnectServiceOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) GatewayPluginOpenidConnectServiceOutput { return v.Service }).(GatewayPluginOpenidConnectServiceOutput)
}

// An optional set of strings associated with the Plugin for grouping and filtering.
func (o GatewayPluginOpenidConnectOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayPluginOpenidConnectOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginOpenidConnect) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayPluginOpenidConnectArrayOutput struct{ *pulumi.OutputState }

func (GatewayPluginOpenidConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginOpenidConnect)(nil)).Elem()
}

func (o GatewayPluginOpenidConnectArrayOutput) ToGatewayPluginOpenidConnectArrayOutput() GatewayPluginOpenidConnectArrayOutput {
	return o
}

func (o GatewayPluginOpenidConnectArrayOutput) ToGatewayPluginOpenidConnectArrayOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectArrayOutput {
	return o
}

func (o GatewayPluginOpenidConnectArrayOutput) Index(i pulumi.IntInput) GatewayPluginOpenidConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayPluginOpenidConnect {
		return vs[0].([]*GatewayPluginOpenidConnect)[vs[1].(int)]
	}).(GatewayPluginOpenidConnectOutput)
}

type GatewayPluginOpenidConnectMapOutput struct{ *pulumi.OutputState }

func (GatewayPluginOpenidConnectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginOpenidConnect)(nil)).Elem()
}

func (o GatewayPluginOpenidConnectMapOutput) ToGatewayPluginOpenidConnectMapOutput() GatewayPluginOpenidConnectMapOutput {
	return o
}

func (o GatewayPluginOpenidConnectMapOutput) ToGatewayPluginOpenidConnectMapOutputWithContext(ctx context.Context) GatewayPluginOpenidConnectMapOutput {
	return o
}

func (o GatewayPluginOpenidConnectMapOutput) MapIndex(k pulumi.StringInput) GatewayPluginOpenidConnectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayPluginOpenidConnect {
		return vs[0].(map[string]*GatewayPluginOpenidConnect)[vs[1].(string)]
	}).(GatewayPluginOpenidConnectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginOpenidConnectInput)(nil)).Elem(), &GatewayPluginOpenidConnect{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginOpenidConnectArrayInput)(nil)).Elem(), GatewayPluginOpenidConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginOpenidConnectMapInput)(nil)).Elem(), GatewayPluginOpenidConnectMap{})
	pulumi.RegisterOutputType(GatewayPluginOpenidConnectOutput{})
	pulumi.RegisterOutputType(GatewayPluginOpenidConnectArrayOutput{})
	pulumi.RegisterOutputType(GatewayPluginOpenidConnectMapOutput{})
}
