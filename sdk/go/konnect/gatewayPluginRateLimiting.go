// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayPluginRateLimiting Resource
type GatewayPluginRateLimiting struct {
	pulumi.CustomResourceState

	Config GatewayPluginRateLimitingConfigOutput `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRateLimitingConsumerOutput      `pulumi:"consumer"`
	ConsumerGroup GatewayPluginRateLimitingConsumerGroupOutput `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      pulumi.BoolOutput   `pulumi:"enabled"`
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRateLimitingRouteOutput `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRateLimitingServiceOutput `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntOutput `pulumi:"updatedAt"`
}

// NewGatewayPluginRateLimiting registers a new resource with the given unique name, arguments, and options.
func NewGatewayPluginRateLimiting(ctx *pulumi.Context,
	name string, args *GatewayPluginRateLimitingArgs, opts ...pulumi.ResourceOption) (*GatewayPluginRateLimiting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayPluginRateLimiting
	err := ctx.RegisterResource("konnect:index/gatewayPluginRateLimiting:GatewayPluginRateLimiting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayPluginRateLimiting gets an existing GatewayPluginRateLimiting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayPluginRateLimiting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayPluginRateLimitingState, opts ...pulumi.ResourceOption) (*GatewayPluginRateLimiting, error) {
	var resource GatewayPluginRateLimiting
	err := ctx.ReadResource("konnect:index/gatewayPluginRateLimiting:GatewayPluginRateLimiting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayPluginRateLimiting resources.
type gatewayPluginRateLimitingState struct {
	Config *GatewayPluginRateLimitingConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginRateLimitingConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginRateLimitingConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginRateLimitingRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginRateLimitingService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
	// Unix epoch when the resource was last updated.
	UpdatedAt *int `pulumi:"updatedAt"`
}

type GatewayPluginRateLimitingState struct {
	Config GatewayPluginRateLimitingConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRateLimitingConsumerPtrInput
	ConsumerGroup GatewayPluginRateLimitingConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRateLimitingRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRateLimitingServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
	// Unix epoch when the resource was last updated.
	UpdatedAt pulumi.IntPtrInput
}

func (GatewayPluginRateLimitingState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginRateLimitingState)(nil)).Elem()
}

type gatewayPluginRateLimitingArgs struct {
	Config *GatewayPluginRateLimitingConfig `pulumi:"config"`
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      *GatewayPluginRateLimitingConsumer      `pulumi:"consumer"`
	ConsumerGroup *GatewayPluginRateLimitingConsumerGroup `pulumi:"consumerGroup"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Whether the plugin is applied.
	Enabled      *bool   `pulumi:"enabled"`
	InstanceName *string `pulumi:"instanceName"`
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols []string `pulumi:"protocols"`
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route *GatewayPluginRateLimitingRoute `pulumi:"route"`
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service *GatewayPluginRateLimitingService `pulumi:"service"`
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a GatewayPluginRateLimiting resource.
type GatewayPluginRateLimitingArgs struct {
	Config GatewayPluginRateLimitingConfigPtrInput
	// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
	Consumer      GatewayPluginRateLimitingConsumerPtrInput
	ConsumerGroup GatewayPluginRateLimitingConsumerGroupPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneId pulumi.StringInput
	// Whether the plugin is applied.
	Enabled      pulumi.BoolPtrInput
	InstanceName pulumi.StringPtrInput
	// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
	Protocols pulumi.StringArrayInput
	// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
	Route GatewayPluginRateLimitingRoutePtrInput
	// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
	Service GatewayPluginRateLimitingServicePtrInput
	// An optional set of strings associated with the Plugin for grouping and filtering.
	Tags pulumi.StringArrayInput
}

func (GatewayPluginRateLimitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayPluginRateLimitingArgs)(nil)).Elem()
}

type GatewayPluginRateLimitingInput interface {
	pulumi.Input

	ToGatewayPluginRateLimitingOutput() GatewayPluginRateLimitingOutput
	ToGatewayPluginRateLimitingOutputWithContext(ctx context.Context) GatewayPluginRateLimitingOutput
}

func (*GatewayPluginRateLimiting) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginRateLimiting)(nil)).Elem()
}

func (i *GatewayPluginRateLimiting) ToGatewayPluginRateLimitingOutput() GatewayPluginRateLimitingOutput {
	return i.ToGatewayPluginRateLimitingOutputWithContext(context.Background())
}

func (i *GatewayPluginRateLimiting) ToGatewayPluginRateLimitingOutputWithContext(ctx context.Context) GatewayPluginRateLimitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRateLimitingOutput)
}

// GatewayPluginRateLimitingArrayInput is an input type that accepts GatewayPluginRateLimitingArray and GatewayPluginRateLimitingArrayOutput values.
// You can construct a concrete instance of `GatewayPluginRateLimitingArrayInput` via:
//
//	GatewayPluginRateLimitingArray{ GatewayPluginRateLimitingArgs{...} }
type GatewayPluginRateLimitingArrayInput interface {
	pulumi.Input

	ToGatewayPluginRateLimitingArrayOutput() GatewayPluginRateLimitingArrayOutput
	ToGatewayPluginRateLimitingArrayOutputWithContext(context.Context) GatewayPluginRateLimitingArrayOutput
}

type GatewayPluginRateLimitingArray []GatewayPluginRateLimitingInput

func (GatewayPluginRateLimitingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginRateLimiting)(nil)).Elem()
}

func (i GatewayPluginRateLimitingArray) ToGatewayPluginRateLimitingArrayOutput() GatewayPluginRateLimitingArrayOutput {
	return i.ToGatewayPluginRateLimitingArrayOutputWithContext(context.Background())
}

func (i GatewayPluginRateLimitingArray) ToGatewayPluginRateLimitingArrayOutputWithContext(ctx context.Context) GatewayPluginRateLimitingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRateLimitingArrayOutput)
}

// GatewayPluginRateLimitingMapInput is an input type that accepts GatewayPluginRateLimitingMap and GatewayPluginRateLimitingMapOutput values.
// You can construct a concrete instance of `GatewayPluginRateLimitingMapInput` via:
//
//	GatewayPluginRateLimitingMap{ "key": GatewayPluginRateLimitingArgs{...} }
type GatewayPluginRateLimitingMapInput interface {
	pulumi.Input

	ToGatewayPluginRateLimitingMapOutput() GatewayPluginRateLimitingMapOutput
	ToGatewayPluginRateLimitingMapOutputWithContext(context.Context) GatewayPluginRateLimitingMapOutput
}

type GatewayPluginRateLimitingMap map[string]GatewayPluginRateLimitingInput

func (GatewayPluginRateLimitingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginRateLimiting)(nil)).Elem()
}

func (i GatewayPluginRateLimitingMap) ToGatewayPluginRateLimitingMapOutput() GatewayPluginRateLimitingMapOutput {
	return i.ToGatewayPluginRateLimitingMapOutputWithContext(context.Background())
}

func (i GatewayPluginRateLimitingMap) ToGatewayPluginRateLimitingMapOutputWithContext(ctx context.Context) GatewayPluginRateLimitingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayPluginRateLimitingMapOutput)
}

type GatewayPluginRateLimitingOutput struct{ *pulumi.OutputState }

func (GatewayPluginRateLimitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayPluginRateLimiting)(nil)).Elem()
}

func (o GatewayPluginRateLimitingOutput) ToGatewayPluginRateLimitingOutput() GatewayPluginRateLimitingOutput {
	return o
}

func (o GatewayPluginRateLimitingOutput) ToGatewayPluginRateLimitingOutputWithContext(ctx context.Context) GatewayPluginRateLimitingOutput {
	return o
}

func (o GatewayPluginRateLimitingOutput) Config() GatewayPluginRateLimitingConfigOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) GatewayPluginRateLimitingConfigOutput { return v.Config }).(GatewayPluginRateLimitingConfigOutput)
}

// If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.
func (o GatewayPluginRateLimitingOutput) Consumer() GatewayPluginRateLimitingConsumerOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) GatewayPluginRateLimitingConsumerOutput { return v.Consumer }).(GatewayPluginRateLimitingConsumerOutput)
}

func (o GatewayPluginRateLimitingOutput) ConsumerGroup() GatewayPluginRateLimitingConsumerGroupOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) GatewayPluginRateLimitingConsumerGroupOutput {
		return v.ConsumerGroup
	}).(GatewayPluginRateLimitingConsumerGroupOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager.
func (o GatewayPluginRateLimitingOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayPluginRateLimitingOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Whether the plugin is applied.
func (o GatewayPluginRateLimitingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GatewayPluginRateLimitingOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support `"tcp"` and `"tls"`.
func (o GatewayPluginRateLimitingOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the Route being used.
func (o GatewayPluginRateLimitingOutput) Route() GatewayPluginRateLimitingRouteOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) GatewayPluginRateLimitingRouteOutput { return v.Route }).(GatewayPluginRateLimitingRouteOutput)
}

// If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.
func (o GatewayPluginRateLimitingOutput) Service() GatewayPluginRateLimitingServiceOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) GatewayPluginRateLimitingServiceOutput { return v.Service }).(GatewayPluginRateLimitingServiceOutput)
}

// An optional set of strings associated with the Plugin for grouping and filtering.
func (o GatewayPluginRateLimitingOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Unix epoch when the resource was last updated.
func (o GatewayPluginRateLimitingOutput) UpdatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayPluginRateLimiting) pulumi.IntOutput { return v.UpdatedAt }).(pulumi.IntOutput)
}

type GatewayPluginRateLimitingArrayOutput struct{ *pulumi.OutputState }

func (GatewayPluginRateLimitingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayPluginRateLimiting)(nil)).Elem()
}

func (o GatewayPluginRateLimitingArrayOutput) ToGatewayPluginRateLimitingArrayOutput() GatewayPluginRateLimitingArrayOutput {
	return o
}

func (o GatewayPluginRateLimitingArrayOutput) ToGatewayPluginRateLimitingArrayOutputWithContext(ctx context.Context) GatewayPluginRateLimitingArrayOutput {
	return o
}

func (o GatewayPluginRateLimitingArrayOutput) Index(i pulumi.IntInput) GatewayPluginRateLimitingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayPluginRateLimiting {
		return vs[0].([]*GatewayPluginRateLimiting)[vs[1].(int)]
	}).(GatewayPluginRateLimitingOutput)
}

type GatewayPluginRateLimitingMapOutput struct{ *pulumi.OutputState }

func (GatewayPluginRateLimitingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayPluginRateLimiting)(nil)).Elem()
}

func (o GatewayPluginRateLimitingMapOutput) ToGatewayPluginRateLimitingMapOutput() GatewayPluginRateLimitingMapOutput {
	return o
}

func (o GatewayPluginRateLimitingMapOutput) ToGatewayPluginRateLimitingMapOutputWithContext(ctx context.Context) GatewayPluginRateLimitingMapOutput {
	return o
}

func (o GatewayPluginRateLimitingMapOutput) MapIndex(k pulumi.StringInput) GatewayPluginRateLimitingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayPluginRateLimiting {
		return vs[0].(map[string]*GatewayPluginRateLimiting)[vs[1].(string)]
	}).(GatewayPluginRateLimitingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRateLimitingInput)(nil)).Elem(), &GatewayPluginRateLimiting{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRateLimitingArrayInput)(nil)).Elem(), GatewayPluginRateLimitingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayPluginRateLimitingMapInput)(nil)).Elem(), GatewayPluginRateLimitingMap{})
	pulumi.RegisterOutputType(GatewayPluginRateLimitingOutput{})
	pulumi.RegisterOutputType(GatewayPluginRateLimitingArrayOutput{})
	pulumi.RegisterOutputType(GatewayPluginRateLimitingMapOutput{})
}
