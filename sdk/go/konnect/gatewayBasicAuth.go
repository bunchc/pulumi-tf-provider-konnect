// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package konnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/bunchc/pulumi-tf-provider-konnect/sdk/go/konnect/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GatewayBasicAuth Resource
type GatewayBasicAuth struct {
	pulumi.CustomResourceState

	Consumer GatewayBasicAuthConsumerOutput `pulumi:"consumer"`
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringOutput `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringOutput `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntOutput `pulumi:"createdAt"`
	// Requires replacement if changed.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Requires replacement if changed.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Requires replacement if changed.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewGatewayBasicAuth registers a new resource with the given unique name, arguments, and options.
func NewGatewayBasicAuth(ctx *pulumi.Context,
	name string, args *GatewayBasicAuthArgs, opts ...pulumi.ResourceOption) (*GatewayBasicAuth, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerId == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerId'")
	}
	if args.ControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'ControlPlaneId'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayBasicAuth
	err := ctx.RegisterResource("konnect:index/gatewayBasicAuth:GatewayBasicAuth", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayBasicAuth gets an existing GatewayBasicAuth resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayBasicAuth(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayBasicAuthState, opts ...pulumi.ResourceOption) (*GatewayBasicAuth, error) {
	var resource GatewayBasicAuth
	err := ctx.ReadResource("konnect:index/gatewayBasicAuth:GatewayBasicAuth", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayBasicAuth resources.
type gatewayBasicAuthState struct {
	Consumer *GatewayBasicAuthConsumer `pulumi:"consumer"`
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId *string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId *string `pulumi:"controlPlaneId"`
	// Unix epoch when the resource was created.
	CreatedAt *int `pulumi:"createdAt"`
	// Requires replacement if changed.
	Password *string `pulumi:"password"`
	// Requires replacement if changed.
	Tags []string `pulumi:"tags"`
	// Requires replacement if changed.
	Username *string `pulumi:"username"`
}

type GatewayBasicAuthState struct {
	Consumer GatewayBasicAuthConsumerPtrInput
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringPtrInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringPtrInput
	// Unix epoch when the resource was created.
	CreatedAt pulumi.IntPtrInput
	// Requires replacement if changed.
	Password pulumi.StringPtrInput
	// Requires replacement if changed.
	Tags pulumi.StringArrayInput
	// Requires replacement if changed.
	Username pulumi.StringPtrInput
}

func (GatewayBasicAuthState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayBasicAuthState)(nil)).Elem()
}

type gatewayBasicAuthArgs struct {
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId string `pulumi:"consumerId"`
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId string `pulumi:"controlPlaneId"`
	// Requires replacement if changed.
	Password *string `pulumi:"password"`
	// Requires replacement if changed.
	Tags []string `pulumi:"tags"`
	// Requires replacement if changed.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a GatewayBasicAuth resource.
type GatewayBasicAuthArgs struct {
	// Consumer ID for nested entities. Requires replacement if changed.
	ConsumerId pulumi.StringInput
	// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
	ControlPlaneId pulumi.StringInput
	// Requires replacement if changed.
	Password pulumi.StringPtrInput
	// Requires replacement if changed.
	Tags pulumi.StringArrayInput
	// Requires replacement if changed.
	Username pulumi.StringPtrInput
}

func (GatewayBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayBasicAuthArgs)(nil)).Elem()
}

type GatewayBasicAuthInput interface {
	pulumi.Input

	ToGatewayBasicAuthOutput() GatewayBasicAuthOutput
	ToGatewayBasicAuthOutputWithContext(ctx context.Context) GatewayBasicAuthOutput
}

func (*GatewayBasicAuth) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayBasicAuth)(nil)).Elem()
}

func (i *GatewayBasicAuth) ToGatewayBasicAuthOutput() GatewayBasicAuthOutput {
	return i.ToGatewayBasicAuthOutputWithContext(context.Background())
}

func (i *GatewayBasicAuth) ToGatewayBasicAuthOutputWithContext(ctx context.Context) GatewayBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBasicAuthOutput)
}

// GatewayBasicAuthArrayInput is an input type that accepts GatewayBasicAuthArray and GatewayBasicAuthArrayOutput values.
// You can construct a concrete instance of `GatewayBasicAuthArrayInput` via:
//
//	GatewayBasicAuthArray{ GatewayBasicAuthArgs{...} }
type GatewayBasicAuthArrayInput interface {
	pulumi.Input

	ToGatewayBasicAuthArrayOutput() GatewayBasicAuthArrayOutput
	ToGatewayBasicAuthArrayOutputWithContext(context.Context) GatewayBasicAuthArrayOutput
}

type GatewayBasicAuthArray []GatewayBasicAuthInput

func (GatewayBasicAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayBasicAuth)(nil)).Elem()
}

func (i GatewayBasicAuthArray) ToGatewayBasicAuthArrayOutput() GatewayBasicAuthArrayOutput {
	return i.ToGatewayBasicAuthArrayOutputWithContext(context.Background())
}

func (i GatewayBasicAuthArray) ToGatewayBasicAuthArrayOutputWithContext(ctx context.Context) GatewayBasicAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBasicAuthArrayOutput)
}

// GatewayBasicAuthMapInput is an input type that accepts GatewayBasicAuthMap and GatewayBasicAuthMapOutput values.
// You can construct a concrete instance of `GatewayBasicAuthMapInput` via:
//
//	GatewayBasicAuthMap{ "key": GatewayBasicAuthArgs{...} }
type GatewayBasicAuthMapInput interface {
	pulumi.Input

	ToGatewayBasicAuthMapOutput() GatewayBasicAuthMapOutput
	ToGatewayBasicAuthMapOutputWithContext(context.Context) GatewayBasicAuthMapOutput
}

type GatewayBasicAuthMap map[string]GatewayBasicAuthInput

func (GatewayBasicAuthMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayBasicAuth)(nil)).Elem()
}

func (i GatewayBasicAuthMap) ToGatewayBasicAuthMapOutput() GatewayBasicAuthMapOutput {
	return i.ToGatewayBasicAuthMapOutputWithContext(context.Background())
}

func (i GatewayBasicAuthMap) ToGatewayBasicAuthMapOutputWithContext(ctx context.Context) GatewayBasicAuthMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayBasicAuthMapOutput)
}

type GatewayBasicAuthOutput struct{ *pulumi.OutputState }

func (GatewayBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayBasicAuth)(nil)).Elem()
}

func (o GatewayBasicAuthOutput) ToGatewayBasicAuthOutput() GatewayBasicAuthOutput {
	return o
}

func (o GatewayBasicAuthOutput) ToGatewayBasicAuthOutputWithContext(ctx context.Context) GatewayBasicAuthOutput {
	return o
}

func (o GatewayBasicAuthOutput) Consumer() GatewayBasicAuthConsumerOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) GatewayBasicAuthConsumerOutput { return v.Consumer }).(GatewayBasicAuthConsumerOutput)
}

// Consumer ID for nested entities. Requires replacement if changed.
func (o GatewayBasicAuthOutput) ConsumerId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.StringOutput { return v.ConsumerId }).(pulumi.StringOutput)
}

// The UUID of your control plane. This variable is available in the Konnect manager. Requires replacement if changed.
func (o GatewayBasicAuthOutput) ControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.StringOutput { return v.ControlPlaneId }).(pulumi.StringOutput)
}

// Unix epoch when the resource was created.
func (o GatewayBasicAuthOutput) CreatedAt() pulumi.IntOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.IntOutput { return v.CreatedAt }).(pulumi.IntOutput)
}

// Requires replacement if changed.
func (o GatewayBasicAuthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Requires replacement if changed.
func (o GatewayBasicAuthOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Requires replacement if changed.
func (o GatewayBasicAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayBasicAuth) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type GatewayBasicAuthArrayOutput struct{ *pulumi.OutputState }

func (GatewayBasicAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayBasicAuth)(nil)).Elem()
}

func (o GatewayBasicAuthArrayOutput) ToGatewayBasicAuthArrayOutput() GatewayBasicAuthArrayOutput {
	return o
}

func (o GatewayBasicAuthArrayOutput) ToGatewayBasicAuthArrayOutputWithContext(ctx context.Context) GatewayBasicAuthArrayOutput {
	return o
}

func (o GatewayBasicAuthArrayOutput) Index(i pulumi.IntInput) GatewayBasicAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayBasicAuth {
		return vs[0].([]*GatewayBasicAuth)[vs[1].(int)]
	}).(GatewayBasicAuthOutput)
}

type GatewayBasicAuthMapOutput struct{ *pulumi.OutputState }

func (GatewayBasicAuthMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayBasicAuth)(nil)).Elem()
}

func (o GatewayBasicAuthMapOutput) ToGatewayBasicAuthMapOutput() GatewayBasicAuthMapOutput {
	return o
}

func (o GatewayBasicAuthMapOutput) ToGatewayBasicAuthMapOutputWithContext(ctx context.Context) GatewayBasicAuthMapOutput {
	return o
}

func (o GatewayBasicAuthMapOutput) MapIndex(k pulumi.StringInput) GatewayBasicAuthOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayBasicAuth {
		return vs[0].(map[string]*GatewayBasicAuth)[vs[1].(string)]
	}).(GatewayBasicAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBasicAuthInput)(nil)).Elem(), &GatewayBasicAuth{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBasicAuthArrayInput)(nil)).Elem(), GatewayBasicAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayBasicAuthMapInput)(nil)).Elem(), GatewayBasicAuthMap{})
	pulumi.RegisterOutputType(GatewayBasicAuthOutput{})
	pulumi.RegisterOutputType(GatewayBasicAuthArrayOutput{})
	pulumi.RegisterOutputType(GatewayBasicAuthMapOutput{})
}
